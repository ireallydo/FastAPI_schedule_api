[2023-04-07 20:10:48 +0200] [28012] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 20:10:48 +0200] [28012] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 20:10:48 +0200] [28012] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:10:48 +0200] [28012] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:10:48 +0200] [28012] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:10:49 +0200] [28012] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 20:10:49 +0200] [28012] [TRACE] [services.auth_service] AuthService: Create session with user: 51dbcc52-a703-43dd-8de9-4467f58a8ade
[2023-04-07 20:10:49 +0200] [28012] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 20:10:49 +0200] [28012] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('51dbcc52-a703-43dd-8de9-4467f58a8ade') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 7, 18, 15, 49, 32278) refresh_expire_time=datetime.datetime(2023, 4, 9, 18, 10, 49, 32452) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4OTEzNDksInN1YiI6ImFkbWluIn0.Wk55Rs2atSey8lMMwptGZOrf_E_YrLjV_l89nifhAYM' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNjM4NDksInN1YiI6ImFkbWluIn0.q_FfOE8aAyCvR5pD4cKFI62Dquqc8wbGIejZu8wGKLc' blocked=False is_active=True
[2023-04-07 20:10:49 +0200] [28012] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('528f09a2-087e-415e-8c1c-43c0b40c5a98'), 'user_id': UUID('51dbcc52-a703-43dd-8de9-4467f58a8ade'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4OTEzNDksInN1YiI6ImFkbWluIn0.Wk55Rs2atSey8lMMwptGZOrf_E_YrLjV_l89nifhAYM', 'access_expire_time': datetime.datetime(2023, 4, 7, 18, 15, 49, 32278), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNjM4NDksInN1YiI6ImFkbWluIn0.q_FfOE8aAyCvR5pD4cKFI62Dquqc8wbGIejZu8wGKLc', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 18, 10, 49, 32452), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 18, 10, 49, 35932), 'updated_at': datetime.datetime(2023, 4, 7, 18, 10, 49, 35937)}
[2023-04-07 20:10:52 +0200] [28012] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:10:52 +0200] [28012] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:10:52 +0200] [28012] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:10:52 +0200] [28012] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:10:52 +0200] [28012] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 20:10:52 +0200] [28012] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 20:10:52 +0200] [28012] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 20:10:52 +0200] [28012] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 20:10:55 +0200] [28012] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 20:11:05 +0200] [28012] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:11:05 +0200] [28012] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:11:05 +0200] [28012] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:11:05 +0200] [28012] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:11:05 +0200] [28012] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 20:11:05 +0200] [28012] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '20a669b7-3e31-4cfc-be32-525822f0b2e3'}
[2023-04-07 20:11:05 +0200] [28012] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 20:11:05 +0200] [28012] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '20a669b7-3e31-4cfc-be32-525822f0b2e3'}
[2023-04-07 20:11:05 +0200] [28012] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 20:13:00 +0200] [28103] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:13:00 +0200] [28103] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:13:00 +0200] [28103] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:13:00 +0200] [28103] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:13:00 +0200] [28103] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 20:13:00 +0200] [28103] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '20a669b7-3e31-4cfc-be32-525822f0b2e3'}
[2023-04-07 20:13:00 +0200] [28103] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 20:13:00 +0200] [28103] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '20a669b7-3e31-4cfc-be32-525822f0b2e3'}
[2023-04-07 20:13:03 +0200] [28103] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 20:15:08 +0200] [28392] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:15:08 +0200] [28392] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:15:08 +0200] [28392] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:15:08 +0200] [28392] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:15:08 +0200] [28392] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 20:15:08 +0200] [28392] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '20a669b7-3e31-4cfc-be32-525822f0b2e3'}
[2023-04-07 20:15:08 +0200] [28392] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 20:15:08 +0200] [28392] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '20a669b7-3e31-4cfc-be32-525822f0b2e3'}
[2023-04-07 20:15:12 +0200] [28392] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 20:18:42 +0200] [28789] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 20:18:42 +0200] [28789] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 20:18:42 +0200] [28789] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:18:42 +0200] [28789] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:18:42 +0200] [28789] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:18:42 +0200] [28789] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 20:18:42 +0200] [28789] [TRACE] [services.auth_service] AuthService: Create session with user: 51dbcc52-a703-43dd-8de9-4467f58a8ade
[2023-04-07 20:18:42 +0200] [28789] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 20:18:42 +0200] [28789] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('51dbcc52-a703-43dd-8de9-4467f58a8ade') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 7, 18, 23, 42, 328994) refresh_expire_time=datetime.datetime(2023, 4, 9, 18, 18, 42, 329164) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4OTE4MjIsInN1YiI6ImFkbWluIn0.uHbtRCgsp_6qV0OPC-F_sXmFXiaGawCTtO94GRFzKDA' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNjQzMjIsInN1YiI6ImFkbWluIn0.Pdr_HKZU1XjmRnMUrFhcKe39f-VasdRaVInWmdGaRSc' blocked=False is_active=True
[2023-04-07 20:18:42 +0200] [28789] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('2e946279-b733-449d-a175-eed28642f05d'), 'user_id': UUID('51dbcc52-a703-43dd-8de9-4467f58a8ade'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4OTE4MjIsInN1YiI6ImFkbWluIn0.uHbtRCgsp_6qV0OPC-F_sXmFXiaGawCTtO94GRFzKDA', 'access_expire_time': datetime.datetime(2023, 4, 7, 18, 23, 42, 328994), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNjQzMjIsInN1YiI6ImFkbWluIn0.Pdr_HKZU1XjmRnMUrFhcKe39f-VasdRaVInWmdGaRSc', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 18, 18, 42, 329164), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 18, 18, 42, 332439), 'updated_at': datetime.datetime(2023, 4, 7, 18, 18, 42, 332444)}
[2023-04-07 20:18:46 +0200] [28789] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:18:46 +0200] [28789] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:18:46 +0200] [28789] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:18:46 +0200] [28789] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:18:46 +0200] [28789] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 20:18:46 +0200] [28789] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 20:18:46 +0200] [28789] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 20:18:46 +0200] [28789] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 20:18:50 +0200] [28789] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 20:19:05 +0200] [28789] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:19:05 +0200] [28789] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:19:05 +0200] [28789] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:19:05 +0200] [28789] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:19:05 +0200] [28789] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 20:19:05 +0200] [28789] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '20a669b7-3e31-4cfc-be32-525822f0b2e3'}
[2023-04-07 20:19:05 +0200] [28789] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 20:19:05 +0200] [28789] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '20a669b7-3e31-4cfc-be32-525822f0b2e3'}
[2023-04-07 20:19:05 +0200] [28789] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 20:21:53 +0200] [29115] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:21:53 +0200] [29115] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:21:53 +0200] [29115] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:21:53 +0200] [29115] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:21:53 +0200] [29115] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 20:21:53 +0200] [29115] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '20a669b7-3e31-4cfc-be32-525822f0b2e3'}
[2023-04-07 20:21:53 +0200] [29115] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 20:21:53 +0200] [29115] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '20a669b7-3e31-4cfc-be32-525822f0b2e3'}
[2023-04-07 20:21:57 +0200] [29115] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 20:23:00 +0200] [29180] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:23:00 +0200] [29180] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:23:00 +0200] [29180] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:23:00 +0200] [29180] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:23:00 +0200] [29180] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 20:23:00 +0200] [29180] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '20a669b7-3e31-4cfc-be32-525822f0b2e3'}
[2023-04-07 20:23:00 +0200] [29180] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 20:23:00 +0200] [29180] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '20a669b7-3e31-4cfc-be32-525822f0b2e3'}
[2023-04-07 20:23:04 +0200] [29180] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 20:24:00 +0200] [29215] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:24:05 +0200] [29215] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 20:24:05 +0200] [29215] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 20:24:05 +0200] [29215] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:24:05 +0200] [29215] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:24:05 +0200] [29215] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:24:06 +0200] [29215] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 20:24:06 +0200] [29215] [TRACE] [services.auth_service] AuthService: Create session with user: 51dbcc52-a703-43dd-8de9-4467f58a8ade
[2023-04-07 20:24:06 +0200] [29215] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 20:24:06 +0200] [29215] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('51dbcc52-a703-43dd-8de9-4467f58a8ade') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 7, 18, 29, 6, 81240) refresh_expire_time=datetime.datetime(2023, 4, 9, 18, 24, 6, 81378) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4OTIxNDYsInN1YiI6ImFkbWluIn0.ZVqFnerfiKwh8QyOMHlyGLWsQdRXRqVT4q-hCAjayhs' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNjQ2NDYsInN1YiI6ImFkbWluIn0.u3masW7tJksEBDyf-KHLyxeGpYo3YvieAHq40I1-QO8' blocked=False is_active=True
[2023-04-07 20:24:06 +0200] [29215] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('23960bb0-8629-43be-8097-f0bae0abcbf6'), 'user_id': UUID('51dbcc52-a703-43dd-8de9-4467f58a8ade'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4OTIxNDYsInN1YiI6ImFkbWluIn0.ZVqFnerfiKwh8QyOMHlyGLWsQdRXRqVT4q-hCAjayhs', 'access_expire_time': datetime.datetime(2023, 4, 7, 18, 29, 6, 81240), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNjQ2NDYsInN1YiI6ImFkbWluIn0.u3masW7tJksEBDyf-KHLyxeGpYo3YvieAHq40I1-QO8', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 18, 24, 6, 81378), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 18, 24, 6, 84742), 'updated_at': datetime.datetime(2023, 4, 7, 18, 24, 6, 84747)}
[2023-04-07 20:24:08 +0200] [29215] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:24:08 +0200] [29215] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:24:08 +0200] [29215] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:24:08 +0200] [29215] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:24:08 +0200] [29215] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 20:24:08 +0200] [29215] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '20a669b7-3e31-4cfc-be32-525822f0b2e3'}
[2023-04-07 20:24:08 +0200] [29215] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 20:24:08 +0200] [29215] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '20a669b7-3e31-4cfc-be32-525822f0b2e3'}
[2023-04-07 20:24:11 +0200] [29215] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 20:24:32 +0200] [29266] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:24:32 +0200] [29266] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:24:32 +0200] [29266] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:24:32 +0200] [29266] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:24:32 +0200] [29266] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 20:24:32 +0200] [29266] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '20a669b7-3e31-4cfc-be32-525822f0b2e3'}
[2023-04-07 20:24:32 +0200] [29266] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 20:24:32 +0200] [29266] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '20a669b7-3e31-4cfc-be32-525822f0b2e3'}
[2023-04-07 20:24:36 +0200] [29266] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 20:24:36 +0200] [29266] [INFO] [services.teacher_service] TeacherService: Get teacher by id: 20a669b7-3e31-4cfc-be32-525822f0b2e3
[2023-04-07 20:24:36 +0200] [29266] [INFO] [db.dao.base_dao] TeacherModel DAO: Get db entry by id: 20a669b7-3e31-4cfc-be32-525822f0b2e3
[2023-04-07 20:24:36 +0200] [29266] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-07 20:26:51 +0200] [29345] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:26:51 +0200] [29345] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:26:51 +0200] [29345] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:26:51 +0200] [29345] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:26:51 +0200] [29345] [INFO] [services.schedule_service] ScheduleService: Create schedule automatically
[2023-04-07 20:26:51 +0200] [29345] [TRACE] [services.schedule_service] ScheduleService: Create schedule automatically with passed data: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson_number=<LessonsEnum.TWO: '2'> group_number=<AcademicGroupsEnum.FIRST_1: '101'> module_id='ad88b24f-9c3b-4221-8274-08a46b8672a6'
[2023-04-07 20:26:51 +0200] [29345] [INFO] [services.lesson_service] LessonService: Get lesson by number
[2023-04-07 20:26:51 +0200] [29345] [TRACE] [services.lesson_service] LessonService: Get lesson by number: 2
[2023-04-07 20:26:51 +0200] [29345] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-07 20:26:51 +0200] [29345] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.TWO: '2'>}
[2023-04-07 20:26:56 +0200] [29345] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-07 20:26:56 +0200] [29345] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 20:26:56 +0200] [29345] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.FIRST_1: '101'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.TWO: '2'>}
[2023-04-07 20:26:56 +0200] [29345] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 20:27:03 +0200] [29345] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:27:03 +0200] [29345] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:27:03 +0200] [29345] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:27:03 +0200] [29345] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:27:03 +0200] [29345] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 20:27:03 +0200] [29345] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '20a669b7-3e31-4cfc-be32-525822f0b2e3'}
[2023-04-07 20:27:03 +0200] [29345] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 20:27:03 +0200] [29345] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '20a669b7-3e31-4cfc-be32-525822f0b2e3'}
[2023-04-07 20:27:04 +0200] [29345] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 20:27:04 +0200] [29345] [INFO] [services.teacher_service] TeacherService: Get teacher by id: 20a669b7-3e31-4cfc-be32-525822f0b2e3
[2023-04-07 20:27:04 +0200] [29345] [INFO] [db.dao.base_dao] TeacherModel DAO: Get db entry by id: 20a669b7-3e31-4cfc-be32-525822f0b2e3
[2023-04-07 20:27:04 +0200] [29345] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-07 20:28:42 +0200] [29551] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:28:42 +0200] [29551] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:28:42 +0200] [29551] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:28:42 +0200] [29551] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:28:42 +0200] [29551] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 20:28:42 +0200] [29551] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '20a669b7-3e31-4cfc-be32-525822f0b2e3'}
[2023-04-07 20:28:42 +0200] [29551] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 20:28:42 +0200] [29551] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '20a669b7-3e31-4cfc-be32-525822f0b2e3'}
[2023-04-07 20:28:45 +0200] [29551] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 20:28:45 +0200] [29551] [INFO] [services.teacher_service] TeacherService: Get teacher by id: 20a669b7-3e31-4cfc-be32-525822f0b2e3
[2023-04-07 20:28:45 +0200] [29551] [INFO] [db.dao.base_dao] TeacherModel DAO: Get db entry by id: 20a669b7-3e31-4cfc-be32-525822f0b2e3
[2023-04-07 20:28:45 +0200] [29551] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-07 20:29:24 +0200] [29593] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:29:30 +0200] [29593] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 20:29:30 +0200] [29593] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 20:29:30 +0200] [29593] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:29:30 +0200] [29593] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:29:30 +0200] [29593] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:29:31 +0200] [29593] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 20:29:31 +0200] [29593] [TRACE] [services.auth_service] AuthService: Create session with user: 51dbcc52-a703-43dd-8de9-4467f58a8ade
[2023-04-07 20:29:31 +0200] [29593] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 20:29:31 +0200] [29593] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('51dbcc52-a703-43dd-8de9-4467f58a8ade') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 7, 18, 34, 31, 9252) refresh_expire_time=datetime.datetime(2023, 4, 9, 18, 29, 31, 9389) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4OTI0NzEsInN1YiI6ImFkbWluIn0.91ybTUvTvH5C-J-8xremhLVKLH5oTwIf_ZKBo9pHz5I' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNjQ5NzEsInN1YiI6ImFkbWluIn0.5Az_zE_djU1vc0tfJwho4YtoLiDSoCnSCFGtNOiwkMg' blocked=False is_active=True
[2023-04-07 20:29:31 +0200] [29593] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('233471fc-53cc-4a51-9682-e9282d526fec'), 'user_id': UUID('51dbcc52-a703-43dd-8de9-4467f58a8ade'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4OTI0NzEsInN1YiI6ImFkbWluIn0.91ybTUvTvH5C-J-8xremhLVKLH5oTwIf_ZKBo9pHz5I', 'access_expire_time': datetime.datetime(2023, 4, 7, 18, 34, 31, 9252), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNjQ5NzEsInN1YiI6ImFkbWluIn0.5Az_zE_djU1vc0tfJwho4YtoLiDSoCnSCFGtNOiwkMg', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 18, 29, 31, 9389), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 18, 29, 31, 12801), 'updated_at': datetime.datetime(2023, 4, 7, 18, 29, 31, 12806)}
[2023-04-07 20:29:33 +0200] [29593] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:29:33 +0200] [29593] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:29:33 +0200] [29593] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:29:33 +0200] [29593] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:29:33 +0200] [29593] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 20:29:33 +0200] [29593] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '20a669b7-3e31-4cfc-be32-525822f0b2e3'}
[2023-04-07 20:29:33 +0200] [29593] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 20:29:33 +0200] [29593] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '20a669b7-3e31-4cfc-be32-525822f0b2e3'}
[2023-04-07 20:29:36 +0200] [29593] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 20:29:36 +0200] [29593] [INFO] [services.teacher_service] TeacherService: Get teacher by id: 20a669b7-3e31-4cfc-be32-525822f0b2e3
[2023-04-07 20:29:36 +0200] [29593] [INFO] [db.dao.base_dao] TeacherModel DAO: Get db entry by id: 20a669b7-3e31-4cfc-be32-525822f0b2e3
[2023-04-07 20:29:36 +0200] [29593] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-07 20:32:13 +0200] [29705] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:32:13 +0200] [29705] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:32:13 +0200] [29705] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:32:13 +0200] [29705] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:32:13 +0200] [29705] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 20:32:13 +0200] [29705] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '20a669b7-3e31-4cfc-be32-525822f0b2e3'}
[2023-04-07 20:32:13 +0200] [29705] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 20:32:13 +0200] [29705] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '20a669b7-3e31-4cfc-be32-525822f0b2e3'}
[2023-04-07 20:32:17 +0200] [29705] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 20:34:57 +0200] [29808] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:35:01 +0200] [29808] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 20:35:01 +0200] [29808] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 20:35:01 +0200] [29808] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:35:01 +0200] [29808] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:35:01 +0200] [29808] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:35:02 +0200] [29808] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 20:35:02 +0200] [29808] [TRACE] [services.auth_service] AuthService: Create session with user: 51dbcc52-a703-43dd-8de9-4467f58a8ade
[2023-04-07 20:35:02 +0200] [29808] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 20:35:02 +0200] [29808] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('51dbcc52-a703-43dd-8de9-4467f58a8ade') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 7, 18, 40, 2, 252711) refresh_expire_time=datetime.datetime(2023, 4, 9, 18, 35, 2, 252853) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4OTI4MDIsInN1YiI6ImFkbWluIn0.42K0R4b_BfGMGmmX8QqlSg_VbuwLt5VfqC3zocM22Lw' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNjUzMDIsInN1YiI6ImFkbWluIn0.Bqd6F-6lFGm3tPVC3GiH6rAOTQPWXSGSZl1EYHBn9Is' blocked=False is_active=True
[2023-04-07 20:35:02 +0200] [29808] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('defea115-71bf-4178-a819-978ae9373253'), 'user_id': UUID('51dbcc52-a703-43dd-8de9-4467f58a8ade'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4OTI4MDIsInN1YiI6ImFkbWluIn0.42K0R4b_BfGMGmmX8QqlSg_VbuwLt5VfqC3zocM22Lw', 'access_expire_time': datetime.datetime(2023, 4, 7, 18, 40, 2, 252711), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNjUzMDIsInN1YiI6ImFkbWluIn0.Bqd6F-6lFGm3tPVC3GiH6rAOTQPWXSGSZl1EYHBn9Is', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 18, 35, 2, 252853), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 18, 35, 2, 256020), 'updated_at': datetime.datetime(2023, 4, 7, 18, 35, 2, 256026)}
[2023-04-07 20:35:04 +0200] [29808] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:35:04 +0200] [29808] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:35:04 +0200] [29808] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:35:04 +0200] [29808] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:35:04 +0200] [29808] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 20:35:04 +0200] [29808] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 20:35:04 +0200] [29808] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 20:35:04 +0200] [29808] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 20:35:07 +0200] [29808] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 20:35:12 +0200] [29808] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:35:12 +0200] [29808] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:35:12 +0200] [29808] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:35:12 +0200] [29808] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:35:12 +0200] [29808] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 20:35:12 +0200] [29808] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '20a669b7-3e31-4cfc-be32-525822f0b2e3'}
[2023-04-07 20:35:12 +0200] [29808] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 20:35:12 +0200] [29808] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '20a669b7-3e31-4cfc-be32-525822f0b2e3'}
[2023-04-07 20:35:12 +0200] [29808] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 20:35:12 +0200] [29808] [INFO] [services.teacher_service] TeacherService: Get teacher by id: 20a669b7-3e31-4cfc-be32-525822f0b2e3
[2023-04-07 20:35:12 +0200] [29808] [INFO] [db.dao.base_dao] TeacherModel DAO: Get db entry by id: 20a669b7-3e31-4cfc-be32-525822f0b2e3
[2023-04-07 20:35:12 +0200] [29808] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-07 20:36:19 +0200] [29886] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:36:19 +0200] [29886] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:36:19 +0200] [29886] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:36:19 +0200] [29886] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:36:19 +0200] [29886] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 20:36:19 +0200] [29886] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '20a669b7-3e31-4cfc-be32-525822f0b2e3'}
[2023-04-07 20:36:19 +0200] [29886] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 20:36:19 +0200] [29886] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '20a669b7-3e31-4cfc-be32-525822f0b2e3'}
[2023-04-07 20:36:22 +0200] [29886] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 20:36:22 +0200] [29886] [INFO] [services.teacher_service] TeacherService: Get teacher by id: 20a669b7-3e31-4cfc-be32-525822f0b2e3
[2023-04-07 20:36:22 +0200] [29886] [INFO] [db.dao.base_dao] TeacherModel DAO: Get db entry by id: 20a669b7-3e31-4cfc-be32-525822f0b2e3
[2023-04-07 20:36:22 +0200] [29886] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-07 20:43:49 +0200] [30301] [INFO] [services.user_service] UserService: Create user
[2023-04-07 20:43:49 +0200] [30301] [TRACE] [services.user_service] UserService: Create user with passed data role='admin' login='admin' password='1234567!' email='admin' id=None first_name='admin' second_name=None last_name='admin' birth_date='28-02-2002' registration_token='admin'
[2023-04-07 20:43:49 +0200] [30301] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:43:49 +0200] [30301] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:43:49 +0200] [30301] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:43:49 +0200] [30301] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:43:49 +0200] [30301] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'admin'}
[2023-04-07 20:43:49 +0200] [30301] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:43:50 +0200] [30301] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-07 20:43:50 +0200] [30301] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$QQUJ5VaK1I0LN9d4lzifl.fCNKE3x5nmG5gALLyu/krnNbM7VtoSu' email='admin' id=None
[2023-04-07 20:43:50 +0200] [30301] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('a6799622-e068-4c2f-8193-47c4f316e8e4'), 'login': 'admin', 'email': 'admin', 'password': '$2b$12$QQUJ5VaK1I0LN9d4lzifl.fCNKE3x5nmG5gALLyu/krnNbM7VtoSu', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 18, 43, 50, 153405), 'updated_at': datetime.datetime(2023, 4, 7, 18, 43, 50, 153410)}
[2023-04-07 20:43:55 +0200] [30301] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 20:43:55 +0200] [30301] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 20:43:55 +0200] [30301] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:43:55 +0200] [30301] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:43:55 +0200] [30301] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:43:55 +0200] [30301] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 20:43:55 +0200] [30301] [TRACE] [services.auth_service] AuthService: Create session with user: a6799622-e068-4c2f-8193-47c4f316e8e4
[2023-04-07 20:43:55 +0200] [30301] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 20:43:55 +0200] [30301] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('a6799622-e068-4c2f-8193-47c4f316e8e4') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 7, 18, 48, 55, 263527) refresh_expire_time=datetime.datetime(2023, 4, 9, 18, 43, 55, 263688) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4OTMzMzUsInN1YiI6ImFkbWluIn0.QlBs_TnJoHflXph0Svyl9r-xz_MvplAln7k_7AruFMM' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNjU4MzUsInN1YiI6ImFkbWluIn0.34rcfqPbjomnUFg7aifzI9BSRWTv5h-Hkt7JPKT8I-k' blocked=False is_active=True
[2023-04-07 20:43:55 +0200] [30301] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('997eccfa-94c2-4c43-802c-231d7a40fb7c'), 'user_id': UUID('a6799622-e068-4c2f-8193-47c4f316e8e4'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4OTMzMzUsInN1YiI6ImFkbWluIn0.QlBs_TnJoHflXph0Svyl9r-xz_MvplAln7k_7AruFMM', 'access_expire_time': datetime.datetime(2023, 4, 7, 18, 48, 55, 263527), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNjU4MzUsInN1YiI6ImFkbWluIn0.34rcfqPbjomnUFg7aifzI9BSRWTv5h-Hkt7JPKT8I-k', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 18, 43, 55, 263688), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 18, 43, 55, 266356), 'updated_at': datetime.datetime(2023, 4, 7, 18, 43, 55, 266360)}
[2023-04-07 20:44:14 +0200] [30301] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:44:14 +0200] [30301] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:44:14 +0200] [30301] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:44:14 +0200] [30301] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:44:14 +0200] [30301] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-07 20:44:14 +0200] [30301] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data start_time='09:00' end_time='10:00' lesson_number=<LessonsEnum.ONE: '1'>
[2023-04-07 20:44:14 +0200] [30301] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 1
[2023-04-07 20:44:14 +0200] [30301] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-07 20:44:14 +0200] [30301] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-07 20:44:16 +0200] [30301] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-07 20:44:16 +0200] [30301] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 09:00:00 - 10:00:00
[2023-04-07 20:44:16 +0200] [30301] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-07 20:44:16 +0200] [30301] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 09:00:00 - 10:00:00
[2023-04-07 20:44:16 +0200] [30301] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database []
[2023-04-07 20:44:16 +0200] [30301] [INFO] [db.dao.base_dao] LessonModel DAO: Create db entry
[2023-04-07 20:44:16 +0200] [30301] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed for creation: start_time=datetime.time(9, 0) end_time=datetime.time(10, 0) lesson_number=<LessonsEnum.ONE: '1'>
[2023-04-07 20:44:17 +0200] [30301] [DEBUG] [db.dao.base_dao] LessonModel DAO: Created entry in database: {'id': UUID('11012adf-8d77-4617-bf8e-ef3b97d92924'), 'lesson_number': <LessonsEnum.ONE: '1'>, 'start_time': datetime.time(9, 0), 'end_time': datetime.time(10, 0)}
[2023-04-07 20:44:26 +0200] [30301] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:44:26 +0200] [30301] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:44:26 +0200] [30301] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:44:26 +0200] [30301] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:44:26 +0200] [30301] [INFO] [services.room_service] RoomService: Create room
[2023-04-07 20:44:26 +0200] [30301] [TRACE] [services.room_service] RoomService: Create room with passed data room_number=102 class_type=<ClassTypesEnum.LECTURE: 'lecture'>
[2023-04-07 20:44:26 +0200] [30301] [DEBUG] [services.room_service] RoomService: Check if room with same number exists: 102
[2023-04-07 20:44:26 +0200] [30301] [INFO] [db.dao.base_dao] RoomModel DAO: Get db entry by parameters
[2023-04-07 20:44:26 +0200] [30301] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: params: {'room_number': 102}
[2023-04-07 20:44:27 +0200] [30301] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 20:44:27 +0200] [30301] [INFO] [db.dao.base_dao] RoomModel DAO: Create db entry
[2023-04-07 20:44:27 +0200] [30301] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed for creation: room_number=102 class_type=<ClassTypesEnum.LECTURE: 'lecture'>
[2023-04-07 20:44:27 +0200] [30301] [DEBUG] [db.dao.base_dao] RoomModel DAO: Created entry in database: {'id': UUID('5da9f0d4-a6a4-41b6-ae6d-4725ef521781'), 'room_number': 102, 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>}
[2023-04-07 20:44:37 +0200] [30301] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:44:37 +0200] [30301] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:44:37 +0200] [30301] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:44:37 +0200] [30301] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:44:37 +0200] [30301] [INFO] [services.module_service] ModuleService: Create module
[2023-04-07 20:44:37 +0200] [30301] [TRACE] [services.module_service] ModuleService: Create module with passed data module_name='module_1' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-07 20:44:37 +0200] [30301] [INFO] [services.module_service] ModuleService: Check if module with same parameters exists.
[2023-04-07 20:44:37 +0200] [30301] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-07 20:44:37 +0200] [30301] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'module_name': 'module_1', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-07 20:44:39 +0200] [30301] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-07 20:44:39 +0200] [30301] [INFO] [db.dao.base_dao] ModuleModel DAO: Create db entry
[2023-04-07 20:44:39 +0200] [30301] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed for creation: module_name='module_1' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-07 20:44:39 +0200] [30301] [DEBUG] [db.dao.base_dao] ModuleModel DAO: Created entry in database: {'id': UUID('2c4ffe8a-229b-4ddd-9ae8-7d5588d67e03'), 'module_name': 'module_1', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-07 20:44:44 +0200] [30301] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:44:44 +0200] [30301] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:44:44 +0200] [30301] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:44:44 +0200] [30301] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:44:44 +0200] [30301] [INFO] [services.teacher_service] TeacherService: Create teachers
[2023-04-07 20:44:44 +0200] [30301] [TRACE] [services.teacher_service] TeacherService: Register teachers with passed data [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date='28-02-2002'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date='28-02-2002')]
[2023-04-07 20:44:44 +0200] [30301] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string1' second_name='string1' last_name='string' birth_date='28-02-2002'
[2023-04-07 20:44:44 +0200] [30301] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-07 20:44:44 +0200] [30301] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-07 20:44:44 +0200] [30301] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-07 20:44:44 +0200] [30301] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string3' second_name=None last_name='string3' birth_date='28-02-2002'
[2023-04-07 20:44:44 +0200] [30301] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-07 20:44:44 +0200] [30301] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-07 20:44:44 +0200] [30301] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-07 20:44:44 +0200] [30301] [DEBUG] [services.teacher_service] TeacherService: Teachers to be registered after check: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='0bpJ2JQvOn0Mtg'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='k4jHZ-QdXXUgZQ')]
[2023-04-07 20:44:44 +0200] [30301] [INFO] [db.dao.base_dao] TeacherModel DAO: Create db entry
[2023-04-07 20:44:44 +0200] [30301] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed for creation: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='0bpJ2JQvOn0Mtg'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='k4jHZ-QdXXUgZQ')]
[2023-04-07 20:44:44 +0200] [30301] [DEBUG] [db.dao.base_dao] TeacherModel DAO: Created entries in database: [{'id': UUID('772bcc24-5bca-400f-a534-fa61c4545dd8'), 'registration_token': '0bpJ2JQvOn0Mtg', 'registered_user': False, 'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 7, 18, 44, 44, 925288), 'updated_at': datetime.datetime(2023, 4, 7, 18, 44, 44, 925291), 'deleted_at': None}, {'id': UUID('c2460da1-15eb-4dba-981e-eddfc6b7f249'), 'registration_token': 'k4jHZ-QdXXUgZQ', 'registered_user': False, 'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 7, 18, 44, 44, 952360), 'updated_at': datetime.datetime(2023, 4, 7, 18, 44, 44, 952367), 'deleted_at': None}]
[2023-04-07 20:44:44 +0200] [30301] [DEBUG] [services.teacher_service] TeacherService: Received the answer from database: [<db.models.TeacherModel.TeacherModel object at 0x7f28c81fb1c0>, <db.models.TeacherModel.TeacherModel object at 0x7f28c8b59520>]
[2023-04-07 20:45:02 +0200] [30301] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:45:02 +0200] [30301] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:45:02 +0200] [30301] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:45:02 +0200] [30301] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:45:02 +0200] [30301] [INFO] [services.schedule_service] ScheduleService: Create schedule automatically
[2023-04-07 20:45:02 +0200] [30301] [TRACE] [services.schedule_service] ScheduleService: Create schedule automatically with passed data: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson_number=<LessonsEnum.ONE: '1'> group_number=<AcademicGroupsEnum.FIRST_1: '101'> module_id='2c4ffe8a-229b-4ddd-9ae8-7d5588d67e03'
[2023-04-07 20:45:02 +0200] [30301] [INFO] [services.lesson_service] LessonService: Get lesson by number
[2023-04-07 20:45:02 +0200] [30301] [TRACE] [services.lesson_service] LessonService: Get lesson by number: 1
[2023-04-07 20:45:02 +0200] [30301] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-07 20:45:02 +0200] [30301] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-07 20:45:02 +0200] [30301] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-07 20:45:02 +0200] [30301] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 20:45:02 +0200] [30301] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.FIRST_1: '101'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 20:45:02 +0200] [30301] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 20:45:02 +0200] [30301] [INFO] [services.module_service] ModuleService: Get module by id: 2c4ffe8a-229b-4ddd-9ae8-7d5588d67e03
[2023-04-07 20:45:02 +0200] [30301] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-07 20:45:02 +0200] [30301] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': '2c4ffe8a-229b-4ddd-9ae8-7d5588d67e03'}
[2023-04-07 20:45:02 +0200] [30301] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-07 20:45:02 +0200] [30301] [INFO] [db.dao.base_dao] RoomModel DAO: Get all db entries by parameters
[2023-04-07 20:45:02 +0200] [30301] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: skip: 0, limit: None, params: {'class_type': <ClassTypesEnum.LECTURE: 'lecture'>}
[2023-04-07 20:45:02 +0200] [30301] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 20:45:02 +0200] [30301] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Get db entry by parameters
[2023-04-07 20:45:02 +0200] [30301] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed to filter: params: {'room_id': UUID('5da9f0d4-a6a4-41b6-ae6d-4725ef521781'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 20:45:02 +0200] [30301] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: received a response from the database
[2023-04-07 20:45:02 +0200] [30301] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get db entry by parameters
[2023-04-07 20:45:02 +0200] [30301] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: params: {'semester': <SemestersEnum.FIRST: '1'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson_number': <LessonsEnum.ONE: '1'>, 'module_id': '2c4ffe8a-229b-4ddd-9ae8-7d5588d67e03'}
[2023-04-07 20:45:02 +0200] [30301] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 20:45:31 +0200] [30301] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:45:31 +0200] [30301] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:45:31 +0200] [30301] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:45:31 +0200] [30301] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:45:31 +0200] [30301] [INFO] [services.module_service] ModuleService: Get module by id: 2c4ffe8a-229b-4ddd-9ae8-7d5588d67e03
[2023-04-07 20:45:31 +0200] [30301] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-07 20:45:31 +0200] [30301] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': '2c4ffe8a-229b-4ddd-9ae8-7d5588d67e03'}
[2023-04-07 20:45:31 +0200] [30301] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-07 20:45:31 +0200] [30301] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-07 20:45:31 +0200] [30301] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: 772bcc24-5bca-400f-a534-fa61c4545dd8
[2023-04-07 20:45:31 +0200] [30301] [INFO] [services.teacher_service] TeacherService: Get teacher by id: 772bcc24-5bca-400f-a534-fa61c4545dd8
[2023-04-07 20:45:31 +0200] [30301] [INFO] [db.dao.base_dao] TeacherModel DAO: Get db entry by id: 772bcc24-5bca-400f-a534-fa61c4545dd8
[2023-04-07 20:45:31 +0200] [30301] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-07 20:45:31 +0200] [30301] [TRACE] [services.teacher_service] TeacherService: Module 2c4ffe8a-229b-4ddd-9ae8-7d5588d67e03 will be added to teacher's modules.
[2023-04-07 20:45:31 +0200] [30301] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-07 20:45:31 +0200] [30301] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: [<db.models.ModuleModel.ModuleModel object at 0x7f28c80a96d0>]
[2023-04-07 20:45:53 +0200] [30301] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:45:53 +0200] [30301] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:45:53 +0200] [30301] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:45:53 +0200] [30301] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:45:53 +0200] [30301] [INFO] [services.schedule_service] ScheduleService: Create schedule automatically
[2023-04-07 20:45:53 +0200] [30301] [TRACE] [services.schedule_service] ScheduleService: Create schedule automatically with passed data: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson_number=<LessonsEnum.ONE: '1'> group_number=<AcademicGroupsEnum.FIRST_1: '101'> module_id='2c4ffe8a-229b-4ddd-9ae8-7d5588d67e03'
[2023-04-07 20:45:53 +0200] [30301] [INFO] [services.lesson_service] LessonService: Get lesson by number
[2023-04-07 20:45:53 +0200] [30301] [TRACE] [services.lesson_service] LessonService: Get lesson by number: 1
[2023-04-07 20:45:53 +0200] [30301] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-07 20:45:53 +0200] [30301] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-07 20:45:53 +0200] [30301] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-07 20:45:53 +0200] [30301] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 20:45:53 +0200] [30301] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.FIRST_1: '101'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 20:45:53 +0200] [30301] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 20:45:53 +0200] [30301] [INFO] [services.module_service] ModuleService: Get module by id: 2c4ffe8a-229b-4ddd-9ae8-7d5588d67e03
[2023-04-07 20:45:53 +0200] [30301] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-07 20:45:53 +0200] [30301] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': '2c4ffe8a-229b-4ddd-9ae8-7d5588d67e03'}
[2023-04-07 20:45:53 +0200] [30301] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-07 20:45:53 +0200] [30301] [INFO] [db.dao.base_dao] RoomModel DAO: Get all db entries by parameters
[2023-04-07 20:45:53 +0200] [30301] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: skip: 0, limit: None, params: {'class_type': <ClassTypesEnum.LECTURE: 'lecture'>}
[2023-04-07 20:45:53 +0200] [30301] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 20:45:53 +0200] [30301] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Get db entry by parameters
[2023-04-07 20:45:53 +0200] [30301] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed to filter: params: {'room_id': UUID('5da9f0d4-a6a4-41b6-ae6d-4725ef521781'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 20:45:53 +0200] [30301] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: received a response from the database
[2023-04-07 20:45:53 +0200] [30301] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Get db entry by parameters
[2023-04-07 20:45:53 +0200] [30301] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed to filter: params: {'teacher_id': UUID('772bcc24-5bca-400f-a534-fa61c4545dd8'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 20:45:53 +0200] [30301] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: received a response from the database
[2023-04-07 20:45:53 +0200] [30301] [INFO] [services.teacher_service] TeacherService: Set teacher busy
[2023-04-07 20:45:53 +0200] [30301] [TRACE] [services.teacher_service] TeacherService: Set teacher busy: teacher_id: 772bcc24-5bca-400f-a534-fa61c4545dd8, data: is_busy=True weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.ONE: '1'>
[2023-04-07 20:45:53 +0200] [30301] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Get db entry by parameters
[2023-04-07 20:45:53 +0200] [30301] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed to filter: params: {'teacher_id': UUID('772bcc24-5bca-400f-a534-fa61c4545dd8'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 20:45:53 +0200] [30301] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: received a response from the database
[2023-04-07 20:45:53 +0200] [30301] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Create db entry
[2023-04-07 20:45:53 +0200] [30301] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True teacher_id=UUID('772bcc24-5bca-400f-a534-fa61c4545dd8')
[2023-04-07 20:45:53 +0200] [30301] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: Created entry in database: {'teacher_id': UUID('772bcc24-5bca-400f-a534-fa61c4545dd8'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>, 'is_busy': True}
[2023-04-07 20:45:53 +0200] [30301] [INFO] [services.group_service] GroupService: Set group busy
[2023-04-07 20:45:53 +0200] [30301] [TRACE] [services.group_service] GroupService: Set group busy: group_number: 101, data: is_busy=True weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.ONE: '1'>
[2023-04-07 20:45:53 +0200] [30301] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 20:45:53 +0200] [30301] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.FIRST_1: '101'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 20:45:53 +0200] [30301] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 20:45:53 +0200] [30301] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Create db entry
[2023-04-07 20:45:53 +0200] [30301] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True group_number=<AcademicGroupsEnum.FIRST_1: '101'>
[2023-04-07 20:45:53 +0200] [30301] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: Created entry in database: {'group_number': <AcademicGroupsEnum.FIRST_1: '101'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>, 'is_busy': True}
[2023-04-07 20:45:53 +0200] [30301] [INFO] [services.room_service] RoomService: Set room busy
[2023-04-07 20:45:53 +0200] [30301] [TRACE] [services.room_service] RoomService: Set room busy: room_number: 102, data: is_busy=True weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.ONE: '1'>
[2023-04-07 20:45:53 +0200] [30301] [INFO] [services.room_service] RoomService: Get room by number
[2023-04-07 20:45:53 +0200] [30301] [TRACE] [services.room_service] RoomService: Get room by number: 102
[2023-04-07 20:45:53 +0200] [30301] [INFO] [db.dao.base_dao] RoomModel DAO: Get db entry by parameters
[2023-04-07 20:45:53 +0200] [30301] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: params: {'room_number': 102}
[2023-04-07 20:45:53 +0200] [30301] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 20:45:53 +0200] [30301] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Get db entry by parameters
[2023-04-07 20:45:53 +0200] [30301] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed to filter: params: {'room_id': UUID('5da9f0d4-a6a4-41b6-ae6d-4725ef521781'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 20:45:53 +0200] [30301] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: received a response from the database
[2023-04-07 20:45:53 +0200] [30301] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Create db entry
[2023-04-07 20:45:53 +0200] [30301] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True room_id=UUID('5da9f0d4-a6a4-41b6-ae6d-4725ef521781')
[2023-04-07 20:45:53 +0200] [30301] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: Created entry in database: {'room_id': UUID('5da9f0d4-a6a4-41b6-ae6d-4725ef521781'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>, 'is_busy': True}
[2023-04-07 20:45:53 +0200] [30301] [INFO] [db.dao.base_dao] ScheduleModel DAO: Create db entry
[2023-04-07 20:45:53 +0200] [30301] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed for creation: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson_number=<LessonsEnum.ONE: '1'> group_number=<AcademicGroupsEnum.FIRST_1: '101'> module_id='2c4ffe8a-229b-4ddd-9ae8-7d5588d67e03' room_number=102 teacher_id=UUID('772bcc24-5bca-400f-a534-fa61c4545dd8')
[2023-04-07 20:45:54 +0200] [30301] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: Created entry in database: {'id': UUID('f8df3a9a-446a-4e29-8855-5a8765df5658'), 'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson_number': <LessonsEnum.ONE: '1'>, 'module_id': UUID('2c4ffe8a-229b-4ddd-9ae8-7d5588d67e03'), 'room_number': 102, 'teacher_id': UUID('772bcc24-5bca-400f-a534-fa61c4545dd8'), 'created_at': datetime.datetime(2023, 4, 7, 18, 45, 53, 988643), 'updated_at': datetime.datetime(2023, 4, 7, 18, 45, 53, 988647)}
[2023-04-07 20:46:00 +0200] [30301] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:46:00 +0200] [30301] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:46:00 +0200] [30301] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:46:00 +0200] [30301] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:46:00 +0200] [30301] [INFO] [services.schedule_service] ScheduleService: Create schedule automatically
[2023-04-07 20:46:00 +0200] [30301] [TRACE] [services.schedule_service] ScheduleService: Create schedule automatically with passed data: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson_number=<LessonsEnum.ONE: '1'> group_number=<AcademicGroupsEnum.SECOND_1: '102'> module_id='2c4ffe8a-229b-4ddd-9ae8-7d5588d67e03'
[2023-04-07 20:46:00 +0200] [30301] [INFO] [services.lesson_service] LessonService: Get lesson by number
[2023-04-07 20:46:00 +0200] [30301] [TRACE] [services.lesson_service] LessonService: Get lesson by number: 1
[2023-04-07 20:46:00 +0200] [30301] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-07 20:46:00 +0200] [30301] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-07 20:46:00 +0200] [30301] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-07 20:46:00 +0200] [30301] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 20:46:00 +0200] [30301] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.SECOND_1: '102'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 20:46:00 +0200] [30301] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 20:46:00 +0200] [30301] [INFO] [services.module_service] ModuleService: Get module by id: 2c4ffe8a-229b-4ddd-9ae8-7d5588d67e03
[2023-04-07 20:46:00 +0200] [30301] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-07 20:46:00 +0200] [30301] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': '2c4ffe8a-229b-4ddd-9ae8-7d5588d67e03'}
[2023-04-07 20:46:00 +0200] [30301] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-07 20:46:00 +0200] [30301] [INFO] [db.dao.base_dao] RoomModel DAO: Get all db entries by parameters
[2023-04-07 20:46:00 +0200] [30301] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: skip: 0, limit: None, params: {'class_type': <ClassTypesEnum.LECTURE: 'lecture'>}
[2023-04-07 20:46:00 +0200] [30301] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 20:46:00 +0200] [30301] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Get db entry by parameters
[2023-04-07 20:46:00 +0200] [30301] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed to filter: params: {'room_id': UUID('5da9f0d4-a6a4-41b6-ae6d-4725ef521781'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 20:46:00 +0200] [30301] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: received a response from the database
[2023-04-07 20:46:00 +0200] [30301] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get db entry by parameters
[2023-04-07 20:46:00 +0200] [30301] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: params: {'semester': <SemestersEnum.FIRST: '1'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson_number': <LessonsEnum.ONE: '1'>, 'module_id': '2c4ffe8a-229b-4ddd-9ae8-7d5588d67e03'}
[2023-04-07 20:46:00 +0200] [30301] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 20:46:00 +0200] [30301] [INFO] [services.group_service] GroupService: Set group busy
[2023-04-07 20:46:00 +0200] [30301] [TRACE] [services.group_service] GroupService: Set group busy: group_number: 102, data: is_busy=True weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.ONE: '1'>
[2023-04-07 20:46:00 +0200] [30301] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 20:46:00 +0200] [30301] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.SECOND_1: '102'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 20:46:00 +0200] [30301] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 20:46:00 +0200] [30301] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Create db entry
[2023-04-07 20:46:00 +0200] [30301] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True group_number=<AcademicGroupsEnum.SECOND_1: '102'>
[2023-04-07 20:46:00 +0200] [30301] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: Created entry in database: {'group_number': <AcademicGroupsEnum.SECOND_1: '102'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>, 'is_busy': True}
[2023-04-07 20:46:00 +0200] [30301] [INFO] [db.dao.base_dao] ScheduleModel DAO: Create db entry
[2023-04-07 20:46:00 +0200] [30301] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed for creation: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson_number=<LessonsEnum.ONE: '1'> group_number=<AcademicGroupsEnum.SECOND_1: '102'> module_id='2c4ffe8a-229b-4ddd-9ae8-7d5588d67e03' room_number=102 teacher_id=UUID('772bcc24-5bca-400f-a534-fa61c4545dd8')
[2023-04-07 20:46:00 +0200] [30301] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: Created entry in database: {'id': UUID('94a726b5-bf0c-4d59-aac7-fbb480a97b2d'), 'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.SECOND_1: '102'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson_number': <LessonsEnum.ONE: '1'>, 'module_id': UUID('2c4ffe8a-229b-4ddd-9ae8-7d5588d67e03'), 'room_number': 102, 'teacher_id': UUID('772bcc24-5bca-400f-a534-fa61c4545dd8'), 'created_at': datetime.datetime(2023, 4, 7, 18, 46, 0, 555217), 'updated_at': datetime.datetime(2023, 4, 7, 18, 46, 0, 555220)}
[2023-04-07 20:46:22 +0200] [30301] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:46:22 +0200] [30301] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:46:22 +0200] [30301] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:46:22 +0200] [30301] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:46:22 +0200] [30301] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-07 20:46:22 +0200] [30301] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data start_time='11:00' end_time='12:00' lesson_number=<LessonsEnum.TWO: '2'>
[2023-04-07 20:46:22 +0200] [30301] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 2
[2023-04-07 20:46:22 +0200] [30301] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-07 20:46:22 +0200] [30301] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.TWO: '2'>}
[2023-04-07 20:46:22 +0200] [30301] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-07 20:46:22 +0200] [30301] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 11:00:00 - 12:00:00
[2023-04-07 20:46:22 +0200] [30301] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-07 20:46:22 +0200] [30301] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 11:00:00 - 12:00:00
[2023-04-07 20:46:22 +0200] [30301] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database []
[2023-04-07 20:46:22 +0200] [30301] [INFO] [db.dao.base_dao] LessonModel DAO: Create db entry
[2023-04-07 20:46:22 +0200] [30301] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed for creation: start_time=datetime.time(11, 0) end_time=datetime.time(12, 0) lesson_number=<LessonsEnum.TWO: '2'>
[2023-04-07 20:46:22 +0200] [30301] [DEBUG] [db.dao.base_dao] LessonModel DAO: Created entry in database: {'id': UUID('25f0bb4d-9e40-4a2c-b077-65c251121192'), 'lesson_number': <LessonsEnum.TWO: '2'>, 'start_time': datetime.time(11, 0), 'end_time': datetime.time(12, 0)}
[2023-04-07 20:46:31 +0200] [30301] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:46:31 +0200] [30301] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:46:31 +0200] [30301] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:46:31 +0200] [30301] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:46:31 +0200] [30301] [INFO] [services.schedule_service] ScheduleService: Create schedule automatically
[2023-04-07 20:46:31 +0200] [30301] [TRACE] [services.schedule_service] ScheduleService: Create schedule automatically with passed data: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson_number=<LessonsEnum.TWO: '2'> group_number=<AcademicGroupsEnum.SECOND_1: '102'> module_id='2c4ffe8a-229b-4ddd-9ae8-7d5588d67e03'
[2023-04-07 20:46:31 +0200] [30301] [INFO] [services.lesson_service] LessonService: Get lesson by number
[2023-04-07 20:46:31 +0200] [30301] [TRACE] [services.lesson_service] LessonService: Get lesson by number: 2
[2023-04-07 20:46:31 +0200] [30301] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-07 20:46:31 +0200] [30301] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.TWO: '2'>}
[2023-04-07 20:46:31 +0200] [30301] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-07 20:46:31 +0200] [30301] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 20:46:31 +0200] [30301] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.SECOND_1: '102'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.TWO: '2'>}
[2023-04-07 20:46:31 +0200] [30301] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 20:46:31 +0200] [30301] [INFO] [services.module_service] ModuleService: Get module by id: 2c4ffe8a-229b-4ddd-9ae8-7d5588d67e03
[2023-04-07 20:46:31 +0200] [30301] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-07 20:46:31 +0200] [30301] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': '2c4ffe8a-229b-4ddd-9ae8-7d5588d67e03'}
[2023-04-07 20:46:31 +0200] [30301] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-07 20:46:31 +0200] [30301] [INFO] [db.dao.base_dao] RoomModel DAO: Get all db entries by parameters
[2023-04-07 20:46:31 +0200] [30301] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: skip: 0, limit: None, params: {'class_type': <ClassTypesEnum.LECTURE: 'lecture'>}
[2023-04-07 20:46:31 +0200] [30301] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 20:46:31 +0200] [30301] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Get db entry by parameters
[2023-04-07 20:46:31 +0200] [30301] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed to filter: params: {'room_id': UUID('5da9f0d4-a6a4-41b6-ae6d-4725ef521781'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.TWO: '2'>}
[2023-04-07 20:46:31 +0200] [30301] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: received a response from the database
[2023-04-07 20:46:31 +0200] [30301] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Get db entry by parameters
[2023-04-07 20:46:31 +0200] [30301] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed to filter: params: {'teacher_id': UUID('772bcc24-5bca-400f-a534-fa61c4545dd8'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.TWO: '2'>}
[2023-04-07 20:46:31 +0200] [30301] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: received a response from the database
[2023-04-07 20:46:31 +0200] [30301] [INFO] [services.teacher_service] TeacherService: Set teacher busy
[2023-04-07 20:46:31 +0200] [30301] [TRACE] [services.teacher_service] TeacherService: Set teacher busy: teacher_id: 772bcc24-5bca-400f-a534-fa61c4545dd8, data: is_busy=True weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.TWO: '2'>
[2023-04-07 20:46:31 +0200] [30301] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Get db entry by parameters
[2023-04-07 20:46:31 +0200] [30301] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed to filter: params: {'teacher_id': UUID('772bcc24-5bca-400f-a534-fa61c4545dd8'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.TWO: '2'>}
[2023-04-07 20:46:31 +0200] [30301] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: received a response from the database
[2023-04-07 20:46:31 +0200] [30301] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Create db entry
[2023-04-07 20:46:31 +0200] [30301] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.TWO: '2'> is_busy=True teacher_id=UUID('772bcc24-5bca-400f-a534-fa61c4545dd8')
[2023-04-07 20:46:31 +0200] [30301] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: Created entry in database: {'teacher_id': UUID('772bcc24-5bca-400f-a534-fa61c4545dd8'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.TWO: '2'>, 'is_busy': True}
[2023-04-07 20:46:31 +0200] [30301] [INFO] [services.group_service] GroupService: Set group busy
[2023-04-07 20:46:31 +0200] [30301] [TRACE] [services.group_service] GroupService: Set group busy: group_number: 102, data: is_busy=True weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.TWO: '2'>
[2023-04-07 20:46:31 +0200] [30301] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 20:46:31 +0200] [30301] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.SECOND_1: '102'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.TWO: '2'>}
[2023-04-07 20:46:31 +0200] [30301] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 20:46:31 +0200] [30301] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Create db entry
[2023-04-07 20:46:31 +0200] [30301] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.TWO: '2'> is_busy=True group_number=<AcademicGroupsEnum.SECOND_1: '102'>
[2023-04-07 20:46:31 +0200] [30301] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: Created entry in database: {'group_number': <AcademicGroupsEnum.SECOND_1: '102'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.TWO: '2'>, 'is_busy': True}
[2023-04-07 20:46:31 +0200] [30301] [INFO] [services.room_service] RoomService: Set room busy
[2023-04-07 20:46:31 +0200] [30301] [TRACE] [services.room_service] RoomService: Set room busy: room_number: 102, data: is_busy=True weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.TWO: '2'>
[2023-04-07 20:46:31 +0200] [30301] [INFO] [services.room_service] RoomService: Get room by number
[2023-04-07 20:46:31 +0200] [30301] [TRACE] [services.room_service] RoomService: Get room by number: 102
[2023-04-07 20:46:31 +0200] [30301] [INFO] [db.dao.base_dao] RoomModel DAO: Get db entry by parameters
[2023-04-07 20:46:31 +0200] [30301] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: params: {'room_number': 102}
[2023-04-07 20:46:31 +0200] [30301] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 20:46:31 +0200] [30301] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Get db entry by parameters
[2023-04-07 20:46:31 +0200] [30301] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed to filter: params: {'room_id': UUID('5da9f0d4-a6a4-41b6-ae6d-4725ef521781'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.TWO: '2'>}
[2023-04-07 20:46:31 +0200] [30301] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: received a response from the database
[2023-04-07 20:46:31 +0200] [30301] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Create db entry
[2023-04-07 20:46:31 +0200] [30301] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.TWO: '2'> is_busy=True room_id=UUID('5da9f0d4-a6a4-41b6-ae6d-4725ef521781')
[2023-04-07 20:46:31 +0200] [30301] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: Created entry in database: {'room_id': UUID('5da9f0d4-a6a4-41b6-ae6d-4725ef521781'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.TWO: '2'>, 'is_busy': True}
[2023-04-07 20:46:31 +0200] [30301] [INFO] [db.dao.base_dao] ScheduleModel DAO: Create db entry
[2023-04-07 20:46:31 +0200] [30301] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed for creation: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson_number=<LessonsEnum.TWO: '2'> group_number=<AcademicGroupsEnum.SECOND_1: '102'> module_id='2c4ffe8a-229b-4ddd-9ae8-7d5588d67e03' room_number=102 teacher_id=UUID('772bcc24-5bca-400f-a534-fa61c4545dd8')
[2023-04-07 20:46:31 +0200] [30301] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: Created entry in database: {'id': UUID('818cba92-5da8-48ea-8b67-37da028596bc'), 'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.SECOND_1: '102'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson_number': <LessonsEnum.TWO: '2'>, 'module_id': UUID('2c4ffe8a-229b-4ddd-9ae8-7d5588d67e03'), 'room_number': 102, 'teacher_id': UUID('772bcc24-5bca-400f-a534-fa61c4545dd8'), 'created_at': datetime.datetime(2023, 4, 7, 18, 46, 31, 804279), 'updated_at': datetime.datetime(2023, 4, 7, 18, 46, 31, 804283)}
[2023-04-07 20:46:35 +0200] [30301] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:46:35 +0200] [30301] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:46:35 +0200] [30301] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:46:35 +0200] [30301] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:46:35 +0200] [30301] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 20:46:35 +0200] [30301] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '772bcc24-5bca-400f-a534-fa61c4545dd8'}
[2023-04-07 20:46:35 +0200] [30301] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 20:46:35 +0200] [30301] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '772bcc24-5bca-400f-a534-fa61c4545dd8'}
[2023-04-07 20:46:35 +0200] [30301] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 20:46:35 +0200] [30301] [INFO] [services.teacher_service] TeacherService: Get teacher by id: 772bcc24-5bca-400f-a534-fa61c4545dd8
[2023-04-07 20:46:35 +0200] [30301] [INFO] [db.dao.base_dao] TeacherModel DAO: Get db entry by id: 772bcc24-5bca-400f-a534-fa61c4545dd8
[2023-04-07 20:46:35 +0200] [30301] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-07 20:54:47 +0200] [31643] [INFO] [services.user_service] UserService: Create user
[2023-04-07 20:54:47 +0200] [31643] [TRACE] [services.user_service] UserService: Create user with passed data role='admin' login='admin' password='1234567!' email='admin' id=None first_name='admin' second_name=None last_name='admin' birth_date='28-02-2002' registration_token='admin'
[2023-04-07 20:54:47 +0200] [31643] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:54:47 +0200] [31643] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:54:47 +0200] [31643] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:54:47 +0200] [31643] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:54:47 +0200] [31643] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'admin'}
[2023-04-07 20:54:47 +0200] [31643] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:54:47 +0200] [31643] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-07 20:54:47 +0200] [31643] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$.2uf9QxGfbmDlx02WLTLneTOmR.rE6HFvFnHkRAl30M6xjiqxlPli' email='admin' id=None
[2023-04-07 20:54:47 +0200] [31643] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('77282e83-a7a1-49c3-bf9a-1d04db020fce'), 'login': 'admin', 'email': 'admin', 'password': '$2b$12$.2uf9QxGfbmDlx02WLTLneTOmR.rE6HFvFnHkRAl30M6xjiqxlPli', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 18, 54, 47, 913948), 'updated_at': datetime.datetime(2023, 4, 7, 18, 54, 47, 913957)}
[2023-04-07 20:54:49 +0200] [31643] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 20:54:49 +0200] [31643] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 20:54:49 +0200] [31643] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:54:49 +0200] [31643] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:54:49 +0200] [31643] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:54:50 +0200] [31643] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 20:54:50 +0200] [31643] [TRACE] [services.auth_service] AuthService: Create session with user: 77282e83-a7a1-49c3-bf9a-1d04db020fce
[2023-04-07 20:54:50 +0200] [31643] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 20:54:50 +0200] [31643] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('77282e83-a7a1-49c3-bf9a-1d04db020fce') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 7, 18, 59, 50, 222517) refresh_expire_time=datetime.datetime(2023, 4, 9, 18, 54, 50, 222816) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4OTM5OTAsInN1YiI6ImFkbWluIn0.anraVko0jV6RJXwq6IFo7Q97xlwxGDQK6UQilF8PSoY' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNjY0OTAsInN1YiI6ImFkbWluIn0.tKtCYtXf0VuHG90DIwEtrFK8yQHJMObCy8dIj7wwgDs' blocked=False is_active=True
[2023-04-07 20:54:50 +0200] [31643] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('6b50f147-fe6f-477d-9674-87da77051700'), 'user_id': UUID('77282e83-a7a1-49c3-bf9a-1d04db020fce'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4OTM5OTAsInN1YiI6ImFkbWluIn0.anraVko0jV6RJXwq6IFo7Q97xlwxGDQK6UQilF8PSoY', 'access_expire_time': datetime.datetime(2023, 4, 7, 18, 59, 50, 222517), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNjY0OTAsInN1YiI6ImFkbWluIn0.tKtCYtXf0VuHG90DIwEtrFK8yQHJMObCy8dIj7wwgDs', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 18, 54, 50, 222816), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 18, 54, 50, 227614), 'updated_at': datetime.datetime(2023, 4, 7, 18, 54, 50, 227624)}
[2023-04-07 20:54:57 +0200] [31643] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:54:57 +0200] [31643] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:54:57 +0200] [31643] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:54:57 +0200] [31643] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:54:57 +0200] [31643] [INFO] [services.teacher_service] TeacherService: Create teachers
[2023-04-07 20:54:57 +0200] [31643] [TRACE] [services.teacher_service] TeacherService: Register teachers with passed data [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date='28-02-2002'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date='28-02-2002')]
[2023-04-07 20:54:57 +0200] [31643] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string1' second_name='string1' last_name='string' birth_date='28-02-2002'
[2023-04-07 20:54:57 +0200] [31643] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-07 20:54:57 +0200] [31643] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-07 20:54:57 +0200] [31643] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-07 20:54:57 +0200] [31643] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string3' second_name=None last_name='string3' birth_date='28-02-2002'
[2023-04-07 20:54:57 +0200] [31643] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-07 20:54:57 +0200] [31643] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-07 20:54:57 +0200] [31643] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-07 20:54:57 +0200] [31643] [DEBUG] [services.teacher_service] TeacherService: Teachers to be registered after check: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='VLGXPQSALdDgVw'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='V-ILIc5PbEprqg')]
[2023-04-07 20:54:57 +0200] [31643] [INFO] [db.dao.base_dao] TeacherModel DAO: Create db entry
[2023-04-07 20:54:57 +0200] [31643] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed for creation: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='VLGXPQSALdDgVw'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='V-ILIc5PbEprqg')]
[2023-04-07 20:55:00 +0200] [31643] [DEBUG] [db.dao.base_dao] TeacherModel DAO: Created entries in database: [{'id': UUID('428a10a2-c450-4490-8783-f09b9056eed4'), 'registration_token': 'VLGXPQSALdDgVw', 'registered_user': False, 'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 7, 18, 54, 57, 559956), 'updated_at': datetime.datetime(2023, 4, 7, 18, 54, 57, 559964), 'deleted_at': None}, {'id': UUID('53c7424d-b5e7-4884-bb1a-76af2db851e5'), 'registration_token': 'V-ILIc5PbEprqg', 'registered_user': False, 'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 7, 18, 55, 0, 395081), 'updated_at': datetime.datetime(2023, 4, 7, 18, 55, 0, 395087), 'deleted_at': None}]
[2023-04-07 20:55:00 +0200] [31643] [DEBUG] [services.teacher_service] TeacherService: Received the answer from database: [<db.models.TeacherModel.TeacherModel object at 0x7fe270f1fb50>, <db.models.TeacherModel.TeacherModel object at 0x7fe2706455e0>]
[2023-04-07 20:55:06 +0200] [31643] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:55:06 +0200] [31643] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:55:06 +0200] [31643] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:55:06 +0200] [31643] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:55:06 +0200] [31643] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-07 20:55:06 +0200] [31643] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data start_time='11:00' end_time='12:00' lesson_number=<LessonsEnum.TWO: '2'>
[2023-04-07 20:55:06 +0200] [31643] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 2
[2023-04-07 20:55:06 +0200] [31643] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-07 20:55:06 +0200] [31643] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.TWO: '2'>}
[2023-04-07 20:55:06 +0200] [31643] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-07 20:55:06 +0200] [31643] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 11:00:00 - 12:00:00
[2023-04-07 20:55:06 +0200] [31643] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-07 20:55:06 +0200] [31643] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 11:00:00 - 12:00:00
[2023-04-07 20:55:06 +0200] [31643] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database []
[2023-04-07 20:55:06 +0200] [31643] [INFO] [db.dao.base_dao] LessonModel DAO: Create db entry
[2023-04-07 20:55:06 +0200] [31643] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed for creation: start_time=datetime.time(11, 0) end_time=datetime.time(12, 0) lesson_number=<LessonsEnum.TWO: '2'>
[2023-04-07 20:55:06 +0200] [31643] [DEBUG] [db.dao.base_dao] LessonModel DAO: Created entry in database: {'id': UUID('503e76ad-adcb-48ba-8b06-49c968c4e594'), 'lesson_number': <LessonsEnum.TWO: '2'>, 'start_time': datetime.time(11, 0), 'end_time': datetime.time(12, 0)}
[2023-04-07 20:55:14 +0200] [31643] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:55:14 +0200] [31643] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:55:14 +0200] [31643] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:55:14 +0200] [31643] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:55:14 +0200] [31643] [INFO] [services.room_service] RoomService: Create room
[2023-04-07 20:55:14 +0200] [31643] [TRACE] [services.room_service] RoomService: Create room with passed data room_number=102 class_type=<ClassTypesEnum.LECTURE: 'lecture'>
[2023-04-07 20:55:14 +0200] [31643] [DEBUG] [services.room_service] RoomService: Check if room with same number exists: 102
[2023-04-07 20:55:14 +0200] [31643] [INFO] [db.dao.base_dao] RoomModel DAO: Get db entry by parameters
[2023-04-07 20:55:14 +0200] [31643] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: params: {'room_number': 102}
[2023-04-07 20:55:14 +0200] [31643] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 20:55:14 +0200] [31643] [INFO] [db.dao.base_dao] RoomModel DAO: Create db entry
[2023-04-07 20:55:14 +0200] [31643] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed for creation: room_number=102 class_type=<ClassTypesEnum.LECTURE: 'lecture'>
[2023-04-07 20:55:14 +0200] [31643] [DEBUG] [db.dao.base_dao] RoomModel DAO: Created entry in database: {'id': UUID('fa8cd734-7597-4dfa-a47c-82d2faaa0fff'), 'room_number': 102, 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>}
[2023-04-07 20:55:17 +0200] [31643] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:55:17 +0200] [31643] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:55:17 +0200] [31643] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:55:17 +0200] [31643] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:55:17 +0200] [31643] [INFO] [services.module_service] ModuleService: Create module
[2023-04-07 20:55:17 +0200] [31643] [TRACE] [services.module_service] ModuleService: Create module with passed data module_name='module_1' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-07 20:55:17 +0200] [31643] [INFO] [services.module_service] ModuleService: Check if module with same parameters exists.
[2023-04-07 20:55:17 +0200] [31643] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-07 20:55:17 +0200] [31643] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'module_name': 'module_1', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-07 20:55:17 +0200] [31643] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-07 20:55:17 +0200] [31643] [INFO] [db.dao.base_dao] ModuleModel DAO: Create db entry
[2023-04-07 20:55:17 +0200] [31643] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed for creation: module_name='module_1' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-07 20:55:17 +0200] [31643] [DEBUG] [db.dao.base_dao] ModuleModel DAO: Created entry in database: {'id': UUID('3f184b0d-3e84-4aff-b956-e257952e5816'), 'module_name': 'module_1', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-07 20:55:30 +0200] [31643] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:55:30 +0200] [31643] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:55:30 +0200] [31643] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:55:30 +0200] [31643] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:55:30 +0200] [31643] [INFO] [services.module_service] ModuleService: Get module by id: 3f184b0d-3e84-4aff-b956-e257952e5816
[2023-04-07 20:55:30 +0200] [31643] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-07 20:55:30 +0200] [31643] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': '3f184b0d-3e84-4aff-b956-e257952e5816'}
[2023-04-07 20:55:30 +0200] [31643] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-07 20:55:30 +0200] [31643] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-07 20:55:30 +0200] [31643] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: 428a10a2-c450-4490-8783-f09b9056eed4
[2023-04-07 20:55:30 +0200] [31643] [INFO] [services.teacher_service] TeacherService: Get teacher by id: 428a10a2-c450-4490-8783-f09b9056eed4
[2023-04-07 20:55:30 +0200] [31643] [INFO] [db.dao.base_dao] TeacherModel DAO: Get db entry by id: 428a10a2-c450-4490-8783-f09b9056eed4
[2023-04-07 20:55:30 +0200] [31643] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-07 20:55:30 +0200] [31643] [TRACE] [services.teacher_service] TeacherService: Module 3f184b0d-3e84-4aff-b956-e257952e5816 will be added to teacher's modules.
[2023-04-07 20:55:30 +0200] [31643] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-07 20:55:30 +0200] [31643] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: [<db.models.ModuleModel.ModuleModel object at 0x7fe270579940>]
[2023-04-07 20:55:35 +0200] [31643] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:55:35 +0200] [31643] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:55:35 +0200] [31643] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:55:35 +0200] [31643] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:55:35 +0200] [31643] [INFO] [services.schedule_service] ScheduleService: Create schedule automatically
[2023-04-07 20:55:35 +0200] [31643] [TRACE] [services.schedule_service] ScheduleService: Create schedule automatically with passed data: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson_number=<LessonsEnum.TWO: '2'> group_number=<AcademicGroupsEnum.SECOND_1: '102'> module_id='3f184b0d-3e84-4aff-b956-e257952e5816'
[2023-04-07 20:55:35 +0200] [31643] [INFO] [services.lesson_service] LessonService: Get lesson by number
[2023-04-07 20:55:35 +0200] [31643] [TRACE] [services.lesson_service] LessonService: Get lesson by number: 2
[2023-04-07 20:55:35 +0200] [31643] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-07 20:55:35 +0200] [31643] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.TWO: '2'>}
[2023-04-07 20:55:36 +0200] [31643] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-07 20:55:36 +0200] [31643] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 20:55:36 +0200] [31643] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.SECOND_1: '102'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.TWO: '2'>}
[2023-04-07 20:55:36 +0200] [31643] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 20:55:36 +0200] [31643] [INFO] [services.module_service] ModuleService: Get module by id: 3f184b0d-3e84-4aff-b956-e257952e5816
[2023-04-07 20:55:36 +0200] [31643] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-07 20:55:36 +0200] [31643] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': '3f184b0d-3e84-4aff-b956-e257952e5816'}
[2023-04-07 20:55:36 +0200] [31643] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-07 20:55:36 +0200] [31643] [INFO] [db.dao.base_dao] RoomModel DAO: Get all db entries by parameters
[2023-04-07 20:55:36 +0200] [31643] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: skip: 0, limit: None, params: {'class_type': <ClassTypesEnum.LECTURE: 'lecture'>}
[2023-04-07 20:55:36 +0200] [31643] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 20:55:36 +0200] [31643] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Get db entry by parameters
[2023-04-07 20:55:36 +0200] [31643] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed to filter: params: {'room_id': UUID('fa8cd734-7597-4dfa-a47c-82d2faaa0fff'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.TWO: '2'>}
[2023-04-07 20:55:36 +0200] [31643] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: received a response from the database
[2023-04-07 20:55:36 +0200] [31643] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Get db entry by parameters
[2023-04-07 20:55:36 +0200] [31643] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed to filter: params: {'teacher_id': UUID('428a10a2-c450-4490-8783-f09b9056eed4'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.TWO: '2'>}
[2023-04-07 20:55:36 +0200] [31643] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: received a response from the database
[2023-04-07 20:55:36 +0200] [31643] [INFO] [services.teacher_service] TeacherService: Set teacher busy
[2023-04-07 20:55:36 +0200] [31643] [TRACE] [services.teacher_service] TeacherService: Set teacher busy: teacher_id: 428a10a2-c450-4490-8783-f09b9056eed4, data: is_busy=True weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.TWO: '2'>
[2023-04-07 20:55:36 +0200] [31643] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Get db entry by parameters
[2023-04-07 20:55:36 +0200] [31643] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed to filter: params: {'teacher_id': UUID('428a10a2-c450-4490-8783-f09b9056eed4'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.TWO: '2'>}
[2023-04-07 20:55:36 +0200] [31643] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: received a response from the database
[2023-04-07 20:55:36 +0200] [31643] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Create db entry
[2023-04-07 20:55:36 +0200] [31643] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.TWO: '2'> is_busy=True teacher_id=UUID('428a10a2-c450-4490-8783-f09b9056eed4')
[2023-04-07 20:55:36 +0200] [31643] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: Created entry in database: {'teacher_id': UUID('428a10a2-c450-4490-8783-f09b9056eed4'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.TWO: '2'>, 'is_busy': True}
[2023-04-07 20:55:36 +0200] [31643] [INFO] [services.group_service] GroupService: Set group busy
[2023-04-07 20:55:36 +0200] [31643] [TRACE] [services.group_service] GroupService: Set group busy: group_number: 102, data: is_busy=True weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.TWO: '2'>
[2023-04-07 20:55:36 +0200] [31643] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 20:55:36 +0200] [31643] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.SECOND_1: '102'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.TWO: '2'>}
[2023-04-07 20:55:36 +0200] [31643] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 20:55:36 +0200] [31643] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Create db entry
[2023-04-07 20:55:36 +0200] [31643] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.TWO: '2'> is_busy=True group_number=<AcademicGroupsEnum.SECOND_1: '102'>
[2023-04-07 20:55:36 +0200] [31643] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: Created entry in database: {'group_number': <AcademicGroupsEnum.SECOND_1: '102'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.TWO: '2'>, 'is_busy': True}
[2023-04-07 20:55:36 +0200] [31643] [INFO] [services.room_service] RoomService: Set room busy
[2023-04-07 20:55:36 +0200] [31643] [TRACE] [services.room_service] RoomService: Set room busy: room_number: 102, data: is_busy=True weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.TWO: '2'>
[2023-04-07 20:55:36 +0200] [31643] [INFO] [services.room_service] RoomService: Get room by number
[2023-04-07 20:55:36 +0200] [31643] [TRACE] [services.room_service] RoomService: Get room by number: 102
[2023-04-07 20:55:36 +0200] [31643] [INFO] [db.dao.base_dao] RoomModel DAO: Get db entry by parameters
[2023-04-07 20:55:36 +0200] [31643] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: params: {'room_number': 102}
[2023-04-07 20:55:36 +0200] [31643] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 20:55:36 +0200] [31643] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Get db entry by parameters
[2023-04-07 20:55:36 +0200] [31643] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed to filter: params: {'room_id': UUID('fa8cd734-7597-4dfa-a47c-82d2faaa0fff'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.TWO: '2'>}
[2023-04-07 20:55:36 +0200] [31643] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: received a response from the database
[2023-04-07 20:55:36 +0200] [31643] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Create db entry
[2023-04-07 20:55:36 +0200] [31643] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.TWO: '2'> is_busy=True room_id=UUID('fa8cd734-7597-4dfa-a47c-82d2faaa0fff')
[2023-04-07 20:55:36 +0200] [31643] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: Created entry in database: {'room_id': UUID('fa8cd734-7597-4dfa-a47c-82d2faaa0fff'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.TWO: '2'>, 'is_busy': True}
[2023-04-07 20:55:36 +0200] [31643] [INFO] [db.dao.base_dao] ScheduleModel DAO: Create db entry
[2023-04-07 20:55:36 +0200] [31643] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed for creation: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson_number=<LessonsEnum.TWO: '2'> group_number=<AcademicGroupsEnum.SECOND_1: '102'> module_id='3f184b0d-3e84-4aff-b956-e257952e5816' room_number=102 teacher_id=UUID('428a10a2-c450-4490-8783-f09b9056eed4')
[2023-04-07 20:55:36 +0200] [31643] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: Created entry in database: {'id': UUID('fa32a0dd-8d2d-4978-a62b-227008c669eb'), 'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.SECOND_1: '102'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson_number': <LessonsEnum.TWO: '2'>, 'module_id': UUID('3f184b0d-3e84-4aff-b956-e257952e5816'), 'room_number': 102, 'teacher_id': UUID('428a10a2-c450-4490-8783-f09b9056eed4'), 'created_at': datetime.datetime(2023, 4, 7, 18, 55, 36, 134263), 'updated_at': datetime.datetime(2023, 4, 7, 18, 55, 36, 134272)}
[2023-04-07 20:55:40 +0200] [31643] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:55:40 +0200] [31643] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:55:40 +0200] [31643] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:55:40 +0200] [31643] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:55:40 +0200] [31643] [INFO] [services.schedule_service] ScheduleService: Create schedule automatically
[2023-04-07 20:55:40 +0200] [31643] [TRACE] [services.schedule_service] ScheduleService: Create schedule automatically with passed data: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson_number=<LessonsEnum.TWO: '2'> group_number=<AcademicGroupsEnum.FIRST_1: '101'> module_id='3f184b0d-3e84-4aff-b956-e257952e5816'
[2023-04-07 20:55:40 +0200] [31643] [INFO] [services.lesson_service] LessonService: Get lesson by number
[2023-04-07 20:55:40 +0200] [31643] [TRACE] [services.lesson_service] LessonService: Get lesson by number: 2
[2023-04-07 20:55:40 +0200] [31643] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-07 20:55:40 +0200] [31643] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.TWO: '2'>}
[2023-04-07 20:55:41 +0200] [31643] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-07 20:55:41 +0200] [31643] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 20:55:41 +0200] [31643] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.FIRST_1: '101'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.TWO: '2'>}
[2023-04-07 20:55:41 +0200] [31643] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 20:55:41 +0200] [31643] [INFO] [services.module_service] ModuleService: Get module by id: 3f184b0d-3e84-4aff-b956-e257952e5816
[2023-04-07 20:55:41 +0200] [31643] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-07 20:55:41 +0200] [31643] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': '3f184b0d-3e84-4aff-b956-e257952e5816'}
[2023-04-07 20:55:41 +0200] [31643] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-07 20:55:41 +0200] [31643] [INFO] [db.dao.base_dao] RoomModel DAO: Get all db entries by parameters
[2023-04-07 20:55:41 +0200] [31643] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: skip: 0, limit: None, params: {'class_type': <ClassTypesEnum.LECTURE: 'lecture'>}
[2023-04-07 20:55:41 +0200] [31643] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 20:55:41 +0200] [31643] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Get db entry by parameters
[2023-04-07 20:55:41 +0200] [31643] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed to filter: params: {'room_id': UUID('fa8cd734-7597-4dfa-a47c-82d2faaa0fff'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.TWO: '2'>}
[2023-04-07 20:55:41 +0200] [31643] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: received a response from the database
[2023-04-07 20:55:41 +0200] [31643] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get db entry by parameters
[2023-04-07 20:55:41 +0200] [31643] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: params: {'semester': <SemestersEnum.FIRST: '1'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson_number': <LessonsEnum.TWO: '2'>, 'module_id': '3f184b0d-3e84-4aff-b956-e257952e5816'}
[2023-04-07 20:55:41 +0200] [31643] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 20:55:41 +0200] [31643] [INFO] [services.group_service] GroupService: Set group busy
[2023-04-07 20:55:41 +0200] [31643] [TRACE] [services.group_service] GroupService: Set group busy: group_number: 101, data: is_busy=True weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.TWO: '2'>
[2023-04-07 20:55:41 +0200] [31643] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 20:55:41 +0200] [31643] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.FIRST_1: '101'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.TWO: '2'>}
[2023-04-07 20:55:41 +0200] [31643] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 20:55:41 +0200] [31643] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Create db entry
[2023-04-07 20:55:41 +0200] [31643] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.TWO: '2'> is_busy=True group_number=<AcademicGroupsEnum.FIRST_1: '101'>
[2023-04-07 20:55:41 +0200] [31643] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: Created entry in database: {'group_number': <AcademicGroupsEnum.FIRST_1: '101'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.TWO: '2'>, 'is_busy': True}
[2023-04-07 20:55:41 +0200] [31643] [INFO] [db.dao.base_dao] ScheduleModel DAO: Create db entry
[2023-04-07 20:55:41 +0200] [31643] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed for creation: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson_number=<LessonsEnum.TWO: '2'> group_number=<AcademicGroupsEnum.FIRST_1: '101'> module_id='3f184b0d-3e84-4aff-b956-e257952e5816' room_number=102 teacher_id=UUID('428a10a2-c450-4490-8783-f09b9056eed4')
[2023-04-07 20:55:41 +0200] [31643] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: Created entry in database: {'id': UUID('4f92a90d-233d-4326-9806-f809d498bf20'), 'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson_number': <LessonsEnum.TWO: '2'>, 'module_id': UUID('3f184b0d-3e84-4aff-b956-e257952e5816'), 'room_number': 102, 'teacher_id': UUID('428a10a2-c450-4490-8783-f09b9056eed4'), 'created_at': datetime.datetime(2023, 4, 7, 18, 55, 41, 232836), 'updated_at': datetime.datetime(2023, 4, 7, 18, 55, 41, 232840)}
[2023-04-07 20:56:01 +0200] [31643] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:56:01 +0200] [31643] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:56:01 +0200] [31643] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:56:01 +0200] [31643] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:56:01 +0200] [31643] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-07 20:56:01 +0200] [31643] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data start_time='09:00' end_time='10:00' lesson_number=<LessonsEnum.ONE: '1'>
[2023-04-07 20:56:01 +0200] [31643] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 1
[2023-04-07 20:56:01 +0200] [31643] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-07 20:56:01 +0200] [31643] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-07 20:56:01 +0200] [31643] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-07 20:56:01 +0200] [31643] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 09:00:00 - 10:00:00
[2023-04-07 20:56:01 +0200] [31643] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-07 20:56:01 +0200] [31643] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 09:00:00 - 10:00:00
[2023-04-07 20:56:01 +0200] [31643] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database []
[2023-04-07 20:56:01 +0200] [31643] [INFO] [db.dao.base_dao] LessonModel DAO: Create db entry
[2023-04-07 20:56:01 +0200] [31643] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed for creation: start_time=datetime.time(9, 0) end_time=datetime.time(10, 0) lesson_number=<LessonsEnum.ONE: '1'>
[2023-04-07 20:56:01 +0200] [31643] [DEBUG] [db.dao.base_dao] LessonModel DAO: Created entry in database: {'id': UUID('cc413bc4-a28d-4105-a3fa-495986f3e57f'), 'lesson_number': <LessonsEnum.ONE: '1'>, 'start_time': datetime.time(9, 0), 'end_time': datetime.time(10, 0)}
[2023-04-07 20:56:07 +0200] [31643] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:56:07 +0200] [31643] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:56:07 +0200] [31643] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:56:07 +0200] [31643] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:56:07 +0200] [31643] [INFO] [services.schedule_service] ScheduleService: Create schedule automatically
[2023-04-07 20:56:07 +0200] [31643] [TRACE] [services.schedule_service] ScheduleService: Create schedule automatically with passed data: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson_number=<LessonsEnum.ONE: '1'> group_number=<AcademicGroupsEnum.FIRST_1: '101'> module_id='3f184b0d-3e84-4aff-b956-e257952e5816'
[2023-04-07 20:56:07 +0200] [31643] [INFO] [services.lesson_service] LessonService: Get lesson by number
[2023-04-07 20:56:07 +0200] [31643] [TRACE] [services.lesson_service] LessonService: Get lesson by number: 1
[2023-04-07 20:56:07 +0200] [31643] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-07 20:56:07 +0200] [31643] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-07 20:56:07 +0200] [31643] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-07 20:56:07 +0200] [31643] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 20:56:07 +0200] [31643] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.FIRST_1: '101'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 20:56:07 +0200] [31643] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 20:56:07 +0200] [31643] [INFO] [services.module_service] ModuleService: Get module by id: 3f184b0d-3e84-4aff-b956-e257952e5816
[2023-04-07 20:56:07 +0200] [31643] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-07 20:56:07 +0200] [31643] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': '3f184b0d-3e84-4aff-b956-e257952e5816'}
[2023-04-07 20:56:07 +0200] [31643] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-07 20:56:07 +0200] [31643] [INFO] [db.dao.base_dao] RoomModel DAO: Get all db entries by parameters
[2023-04-07 20:56:07 +0200] [31643] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: skip: 0, limit: None, params: {'class_type': <ClassTypesEnum.LECTURE: 'lecture'>}
[2023-04-07 20:56:07 +0200] [31643] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 20:56:07 +0200] [31643] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Get db entry by parameters
[2023-04-07 20:56:07 +0200] [31643] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed to filter: params: {'room_id': UUID('fa8cd734-7597-4dfa-a47c-82d2faaa0fff'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 20:56:07 +0200] [31643] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: received a response from the database
[2023-04-07 20:56:07 +0200] [31643] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Get db entry by parameters
[2023-04-07 20:56:07 +0200] [31643] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed to filter: params: {'teacher_id': UUID('428a10a2-c450-4490-8783-f09b9056eed4'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 20:56:07 +0200] [31643] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: received a response from the database
[2023-04-07 20:56:07 +0200] [31643] [INFO] [services.teacher_service] TeacherService: Set teacher busy
[2023-04-07 20:56:07 +0200] [31643] [TRACE] [services.teacher_service] TeacherService: Set teacher busy: teacher_id: 428a10a2-c450-4490-8783-f09b9056eed4, data: is_busy=True weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.ONE: '1'>
[2023-04-07 20:56:07 +0200] [31643] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Get db entry by parameters
[2023-04-07 20:56:07 +0200] [31643] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed to filter: params: {'teacher_id': UUID('428a10a2-c450-4490-8783-f09b9056eed4'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 20:56:07 +0200] [31643] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: received a response from the database
[2023-04-07 20:56:07 +0200] [31643] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Create db entry
[2023-04-07 20:56:07 +0200] [31643] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True teacher_id=UUID('428a10a2-c450-4490-8783-f09b9056eed4')
[2023-04-07 20:56:07 +0200] [31643] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: Created entry in database: {'teacher_id': UUID('428a10a2-c450-4490-8783-f09b9056eed4'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>, 'is_busy': True}
[2023-04-07 20:56:07 +0200] [31643] [INFO] [services.group_service] GroupService: Set group busy
[2023-04-07 20:56:07 +0200] [31643] [TRACE] [services.group_service] GroupService: Set group busy: group_number: 101, data: is_busy=True weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.ONE: '1'>
[2023-04-07 20:56:07 +0200] [31643] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 20:56:07 +0200] [31643] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.FIRST_1: '101'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 20:56:07 +0200] [31643] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 20:56:07 +0200] [31643] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Create db entry
[2023-04-07 20:56:07 +0200] [31643] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True group_number=<AcademicGroupsEnum.FIRST_1: '101'>
[2023-04-07 20:56:07 +0200] [31643] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: Created entry in database: {'group_number': <AcademicGroupsEnum.FIRST_1: '101'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>, 'is_busy': True}
[2023-04-07 20:56:07 +0200] [31643] [INFO] [services.room_service] RoomService: Set room busy
[2023-04-07 20:56:07 +0200] [31643] [TRACE] [services.room_service] RoomService: Set room busy: room_number: 102, data: is_busy=True weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.ONE: '1'>
[2023-04-07 20:56:07 +0200] [31643] [INFO] [services.room_service] RoomService: Get room by number
[2023-04-07 20:56:07 +0200] [31643] [TRACE] [services.room_service] RoomService: Get room by number: 102
[2023-04-07 20:56:07 +0200] [31643] [INFO] [db.dao.base_dao] RoomModel DAO: Get db entry by parameters
[2023-04-07 20:56:07 +0200] [31643] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: params: {'room_number': 102}
[2023-04-07 20:56:07 +0200] [31643] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 20:56:07 +0200] [31643] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Get db entry by parameters
[2023-04-07 20:56:07 +0200] [31643] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed to filter: params: {'room_id': UUID('fa8cd734-7597-4dfa-a47c-82d2faaa0fff'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 20:56:07 +0200] [31643] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: received a response from the database
[2023-04-07 20:56:07 +0200] [31643] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Create db entry
[2023-04-07 20:56:07 +0200] [31643] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True room_id=UUID('fa8cd734-7597-4dfa-a47c-82d2faaa0fff')
[2023-04-07 20:56:07 +0200] [31643] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: Created entry in database: {'room_id': UUID('fa8cd734-7597-4dfa-a47c-82d2faaa0fff'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>, 'is_busy': True}
[2023-04-07 20:56:07 +0200] [31643] [INFO] [db.dao.base_dao] ScheduleModel DAO: Create db entry
[2023-04-07 20:56:07 +0200] [31643] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed for creation: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson_number=<LessonsEnum.ONE: '1'> group_number=<AcademicGroupsEnum.FIRST_1: '101'> module_id='3f184b0d-3e84-4aff-b956-e257952e5816' room_number=102 teacher_id=UUID('428a10a2-c450-4490-8783-f09b9056eed4')
[2023-04-07 20:56:07 +0200] [31643] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: Created entry in database: {'id': UUID('40c592ca-956e-4f67-ac9a-84b9b30b5930'), 'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson_number': <LessonsEnum.ONE: '1'>, 'module_id': UUID('3f184b0d-3e84-4aff-b956-e257952e5816'), 'room_number': 102, 'teacher_id': UUID('428a10a2-c450-4490-8783-f09b9056eed4'), 'created_at': datetime.datetime(2023, 4, 7, 18, 56, 7, 545497), 'updated_at': datetime.datetime(2023, 4, 7, 18, 56, 7, 545502)}
[2023-04-07 20:56:11 +0200] [31643] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 20:56:11 +0200] [31643] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 20:56:11 +0200] [31643] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 20:56:11 +0200] [31643] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 20:56:11 +0200] [31643] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 20:56:11 +0200] [31643] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '428a10a2-c450-4490-8783-f09b9056eed4'}
[2023-04-07 20:56:11 +0200] [31643] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 20:56:11 +0200] [31643] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '428a10a2-c450-4490-8783-f09b9056eed4'}
[2023-04-07 20:56:11 +0200] [31643] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 20:56:11 +0200] [31643] [INFO] [services.teacher_service] TeacherService: Get teacher by id: 428a10a2-c450-4490-8783-f09b9056eed4
[2023-04-07 20:56:11 +0200] [31643] [INFO] [db.dao.base_dao] TeacherModel DAO: Get db entry by id: 428a10a2-c450-4490-8783-f09b9056eed4
[2023-04-07 20:56:11 +0200] [31643] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-07 21:08:58 +0200] [32831] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 21:09:01 +0200] [32831] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 21:09:01 +0200] [32831] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 21:09:01 +0200] [32831] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 21:09:01 +0200] [32831] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 21:09:01 +0200] [32831] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 21:09:01 +0200] [32831] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 21:09:01 +0200] [32831] [TRACE] [services.auth_service] AuthService: Create session with user: 77282e83-a7a1-49c3-bf9a-1d04db020fce
[2023-04-07 21:09:01 +0200] [32831] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 21:09:01 +0200] [32831] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('77282e83-a7a1-49c3-bf9a-1d04db020fce') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 7, 19, 14, 1, 975568) refresh_expire_time=datetime.datetime(2023, 4, 9, 19, 9, 1, 975749) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4OTQ4NDEsInN1YiI6ImFkbWluIn0.wxAxIjJBuVvsk88UpdtXXT9kVFhye8BSwNVG86x069M' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNjczNDEsInN1YiI6ImFkbWluIn0.TKYblwAOkHW7CtNUtXbBTuGgqQNPPQo287_f1VwOWiw' blocked=False is_active=True
[2023-04-07 21:09:01 +0200] [32831] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('c5d156e5-b43c-410b-99fe-6c9ff0da4b72'), 'user_id': UUID('77282e83-a7a1-49c3-bf9a-1d04db020fce'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4OTQ4NDEsInN1YiI6ImFkbWluIn0.wxAxIjJBuVvsk88UpdtXXT9kVFhye8BSwNVG86x069M', 'access_expire_time': datetime.datetime(2023, 4, 7, 19, 14, 1, 975568), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNjczNDEsInN1YiI6ImFkbWluIn0.TKYblwAOkHW7CtNUtXbBTuGgqQNPPQo287_f1VwOWiw', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 19, 9, 1, 975749), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 19, 9, 1, 979782), 'updated_at': datetime.datetime(2023, 4, 7, 19, 9, 1, 979789)}
[2023-04-07 21:09:04 +0200] [32831] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 21:09:04 +0200] [32831] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 21:09:04 +0200] [32831] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 21:09:04 +0200] [32831] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 21:09:04 +0200] [32831] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 21:09:04 +0200] [32831] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '428a10a2-c450-4490-8783-f09b9056eed4'}
[2023-04-07 21:09:04 +0200] [32831] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 21:09:04 +0200] [32831] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '428a10a2-c450-4490-8783-f09b9056eed4'}
[2023-04-07 21:09:07 +0200] [32831] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 21:09:07 +0200] [32831] [INFO] [services.teacher_service] TeacherService: Get teacher by id: 428a10a2-c450-4490-8783-f09b9056eed4
[2023-04-07 21:09:07 +0200] [32831] [INFO] [db.dao.base_dao] TeacherModel DAO: Get db entry by id: 428a10a2-c450-4490-8783-f09b9056eed4
[2023-04-07 21:09:08 +0200] [32831] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-07 21:09:24 +0200] [32831] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 21:09:24 +0200] [32831] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 21:09:24 +0200] [32831] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 21:09:24 +0200] [32831] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 21:09:24 +0200] [32831] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 21:09:24 +0200] [32831] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 21:09:24 +0200] [32831] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 21:09:24 +0200] [32831] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 21:09:24 +0200] [32831] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 21:12:00 +0200] [32970] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 21:12:00 +0200] [32970] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 21:12:00 +0200] [32970] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 21:12:00 +0200] [32970] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 21:12:07 +0200] [32970] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 21:12:07 +0200] [32970] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 21:12:07 +0200] [32970] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 21:12:07 +0200] [32970] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 21:12:07 +0200] [32970] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 21:12:07 +0200] [32970] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 21:12:07 +0200] [32970] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 21:12:07 +0200] [32970] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 21:12:10 +0200] [32970] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 21:12:32 +0200] [32970] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 21:12:32 +0200] [32970] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 21:12:32 +0200] [32970] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 21:12:32 +0200] [32970] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 21:12:32 +0200] [32970] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 21:12:32 +0200] [32970] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '428a10a2-c450-4490-8783-f09b9056eed4'}
[2023-04-07 21:12:32 +0200] [32970] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 21:12:32 +0200] [32970] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '428a10a2-c450-4490-8783-f09b9056eed4'}
[2023-04-07 21:12:32 +0200] [32970] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 21:12:32 +0200] [32970] [INFO] [services.teacher_service] TeacherService: Get teacher by id: 428a10a2-c450-4490-8783-f09b9056eed4
[2023-04-07 21:12:32 +0200] [32970] [INFO] [db.dao.base_dao] TeacherModel DAO: Get db entry by id: 428a10a2-c450-4490-8783-f09b9056eed4
[2023-04-07 21:12:32 +0200] [32970] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-07 21:12:44 +0200] [32970] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 21:12:44 +0200] [32970] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 21:12:44 +0200] [32970] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 21:12:44 +0200] [32970] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 21:14:24 +0200] [33077] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 21:14:29 +0200] [33077] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 21:14:29 +0200] [33077] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 21:14:29 +0200] [33077] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 21:14:29 +0200] [33077] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 21:14:29 +0200] [33077] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 21:14:30 +0200] [33077] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 21:14:30 +0200] [33077] [TRACE] [services.auth_service] AuthService: Create session with user: 77282e83-a7a1-49c3-bf9a-1d04db020fce
[2023-04-07 21:14:30 +0200] [33077] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 21:14:30 +0200] [33077] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('77282e83-a7a1-49c3-bf9a-1d04db020fce') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 7, 19, 19, 30, 96790) refresh_expire_time=datetime.datetime(2023, 4, 9, 19, 14, 30, 96923) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4OTUxNzAsInN1YiI6ImFkbWluIn0.IEWBlnXmG6OlXG_bdHx1DZXe9n69dPyow77gSLt0bHw' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNjc2NzAsInN1YiI6ImFkbWluIn0.2PV6XFlmO5n45zo10PelMhXcGe2BOF8LLj32IPUCi_E' blocked=False is_active=True
[2023-04-07 21:14:30 +0200] [33077] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('d14846bd-2acb-471e-8388-5ed714b05e03'), 'user_id': UUID('77282e83-a7a1-49c3-bf9a-1d04db020fce'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4OTUxNzAsInN1YiI6ImFkbWluIn0.IEWBlnXmG6OlXG_bdHx1DZXe9n69dPyow77gSLt0bHw', 'access_expire_time': datetime.datetime(2023, 4, 7, 19, 19, 30, 96790), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNjc2NzAsInN1YiI6ImFkbWluIn0.2PV6XFlmO5n45zo10PelMhXcGe2BOF8LLj32IPUCi_E', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 19, 14, 30, 96923), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 19, 14, 30, 100259), 'updated_at': datetime.datetime(2023, 4, 7, 19, 14, 30, 100263)}
[2023-04-07 21:14:32 +0200] [33077] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 21:14:32 +0200] [33077] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 21:14:32 +0200] [33077] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 21:14:32 +0200] [33077] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 21:16:06 +0200] [33239] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 21:16:06 +0200] [33239] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 21:16:06 +0200] [33239] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 21:16:06 +0200] [33239] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 21:16:06 +0200] [33239] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 21:16:07 +0200] [33239] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 21:16:07 +0200] [33239] [TRACE] [services.auth_service] AuthService: Create session with user: 77282e83-a7a1-49c3-bf9a-1d04db020fce
[2023-04-07 21:16:07 +0200] [33239] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 21:16:07 +0200] [33239] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('77282e83-a7a1-49c3-bf9a-1d04db020fce') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 7, 19, 21, 7, 264726) refresh_expire_time=datetime.datetime(2023, 4, 9, 19, 16, 7, 264889) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4OTUyNjcsInN1YiI6ImFkbWluIn0.IK6A42-w1nA_5IVuQaLUluhvUrLQiHk539AXjXRShzk' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNjc3NjcsInN1YiI6ImFkbWluIn0.QAWZXatVYzcR-GDZ-1WuRwSij33ZEC0eyYkIxYToD_g' blocked=False is_active=True
[2023-04-07 21:16:07 +0200] [33239] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('60eebd68-0a99-4ae2-bdcf-d5444659c44f'), 'user_id': UUID('77282e83-a7a1-49c3-bf9a-1d04db020fce'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4OTUyNjcsInN1YiI6ImFkbWluIn0.IK6A42-w1nA_5IVuQaLUluhvUrLQiHk539AXjXRShzk', 'access_expire_time': datetime.datetime(2023, 4, 7, 19, 21, 7, 264726), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNjc3NjcsInN1YiI6ImFkbWluIn0.QAWZXatVYzcR-GDZ-1WuRwSij33ZEC0eyYkIxYToD_g', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 19, 16, 7, 264889), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 19, 16, 7, 267976), 'updated_at': datetime.datetime(2023, 4, 7, 19, 16, 7, 267980)}
[2023-04-07 21:16:14 +0200] [33239] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 21:16:14 +0200] [33239] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 21:16:14 +0200] [33239] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 21:16:14 +0200] [33239] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 21:17:14 +0200] [33277] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 21:17:14 +0200] [33277] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 21:17:14 +0200] [33277] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 21:17:14 +0200] [33277] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 21:17:30 +0200] [33277] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 21:17:30 +0200] [33277] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 21:17:30 +0200] [33277] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 21:17:30 +0200] [33277] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 21:17:30 +0200] [33277] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 21:17:30 +0200] [33277] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '428a10a2-c450-4490-8783-f09b9056eed4'}
[2023-04-07 21:17:30 +0200] [33277] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 21:17:30 +0200] [33277] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '428a10a2-c450-4490-8783-f09b9056eed4'}
[2023-04-07 21:17:32 +0200] [33277] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 21:17:32 +0200] [33277] [INFO] [services.teacher_service] TeacherService: Get teacher by id: 428a10a2-c450-4490-8783-f09b9056eed4
[2023-04-07 21:17:32 +0200] [33277] [INFO] [db.dao.base_dao] TeacherModel DAO: Get db entry by id: 428a10a2-c450-4490-8783-f09b9056eed4
[2023-04-07 21:17:33 +0200] [33277] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-07 21:17:39 +0200] [33277] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 21:17:39 +0200] [33277] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 21:17:39 +0200] [33277] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 21:17:39 +0200] [33277] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 21:17:39 +0200] [33277] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 21:17:39 +0200] [33277] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 21:17:39 +0200] [33277] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 21:17:39 +0200] [33277] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 21:17:39 +0200] [33277] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 21:18:18 +0200] [33277] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 21:18:18 +0200] [33277] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 21:18:18 +0200] [33277] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 21:18:18 +0200] [33277] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 21:18:31 +0200] [33277] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 21:18:31 +0200] [33277] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 21:18:31 +0200] [33277] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 21:18:31 +0200] [33277] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 21:18:31 +0200] [33277] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 21:18:31 +0200] [33277] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '1234567890'}
[2023-04-07 21:18:31 +0200] [33277] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 21:18:31 +0200] [33277] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '1234567890'}
[2023-04-07 21:20:34 +0200] [33421] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 21:20:34 +0200] [33421] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 21:20:34 +0200] [33421] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 21:20:34 +0200] [33421] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 21:20:34 +0200] [33421] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 21:20:34 +0200] [33421] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '1234567890'}
[2023-04-07 21:20:34 +0200] [33421] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 21:20:34 +0200] [33421] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '1234567890'}
