[2023-04-06 20:06:56 +0200] [18154] [INFO] [services.auth_service] AuthService: Login user
[2023-04-06 20:06:56 +0200] [18154] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-06 20:06:56 +0200] [18154] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 20:06:56 +0200] [18154] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-06 20:06:56 +0200] [18154] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 20:06:56 +0200] [18154] [INFO] [services.auth_service] AuthService: Create session
[2023-04-06 20:06:56 +0200] [18154] [TRACE] [services.auth_service] AuthService: Create session with user: efd97175-e187-4ce7-9a4a-286992943857
[2023-04-06 20:06:56 +0200] [18154] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-06 20:06:56 +0200] [18154] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('efd97175-e187-4ce7-9a4a-286992943857') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 6, 18, 11, 56, 339805) refresh_expire_time=datetime.datetime(2023, 4, 8, 18, 6, 56, 339950) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MDQ3MTYsInN1YiI6ImFkbWluIn0.VVZzp5aFBWsq3y7B2siX7douab_BYZRBpH0qBpQFdQc' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5NzcyMTYsInN1YiI6ImFkbWluIn0.FxTyNo1nP1dqsogJlbox9YwnMpMYFJzmOVAHmp-Drkk' blocked=False is_active=True
[2023-04-06 20:06:56 +0200] [18154] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('0b3a93b0-c9bf-4649-911a-de659b93db9b'), 'user_id': UUID('efd97175-e187-4ce7-9a4a-286992943857'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MDQ3MTYsInN1YiI6ImFkbWluIn0.VVZzp5aFBWsq3y7B2siX7douab_BYZRBpH0qBpQFdQc', 'access_expire_time': datetime.datetime(2023, 4, 6, 18, 11, 56, 339805), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5NzcyMTYsInN1YiI6ImFkbWluIn0.FxTyNo1nP1dqsogJlbox9YwnMpMYFJzmOVAHmp-Drkk', 'refresh_expire_time': datetime.datetime(2023, 4, 8, 18, 6, 56, 339950), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 6, 18, 6, 56, 344611), 'updated_at': datetime.datetime(2023, 4, 6, 18, 6, 56, 344618)}
[2023-04-06 20:07:22 +0200] [18154] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-06 20:07:31 +0200] [18154] [INFO] [services.auth_service] AuthService: Login user
[2023-04-06 20:07:31 +0200] [18154] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-06 20:07:31 +0200] [18154] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 20:07:31 +0200] [18154] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-06 20:07:31 +0200] [18154] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 20:07:32 +0200] [18154] [INFO] [services.auth_service] AuthService: Create session
[2023-04-06 20:07:32 +0200] [18154] [TRACE] [services.auth_service] AuthService: Create session with user: efd97175-e187-4ce7-9a4a-286992943857
[2023-04-06 20:07:32 +0200] [18154] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-06 20:07:32 +0200] [18154] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('efd97175-e187-4ce7-9a4a-286992943857') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 6, 18, 12, 32, 40788) refresh_expire_time=datetime.datetime(2023, 4, 8, 18, 7, 32, 40918) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MDQ3NTIsInN1YiI6ImFkbWluIn0.7TVhKHyGeHPOjDcOv_M_GjxSO_VBexwmJTMouchbSOM' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5NzcyNTIsInN1YiI6ImFkbWluIn0.DjwBjEFIjFX4TBfmt2ChyJqRN9vb4ctM5Wc8aiPxVIE' blocked=False is_active=True
[2023-04-06 20:07:32 +0200] [18154] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('3b22036c-a57a-41f3-ba3c-48dffbfa648c'), 'user_id': UUID('efd97175-e187-4ce7-9a4a-286992943857'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MDQ3NTIsInN1YiI6ImFkbWluIn0.7TVhKHyGeHPOjDcOv_M_GjxSO_VBexwmJTMouchbSOM', 'access_expire_time': datetime.datetime(2023, 4, 6, 18, 12, 32, 40788), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5NzcyNTIsInN1YiI6ImFkbWluIn0.DjwBjEFIjFX4TBfmt2ChyJqRN9vb4ctM5Wc8aiPxVIE', 'refresh_expire_time': datetime.datetime(2023, 4, 8, 18, 7, 32, 40918), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 6, 18, 7, 32, 42893), 'updated_at': datetime.datetime(2023, 4, 6, 18, 7, 32, 42898)}
[2023-04-06 20:07:40 +0200] [18154] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-06 20:07:40 +0200] [18154] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 20:07:40 +0200] [18154] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-06 20:07:40 +0200] [18154] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 20:07:40 +0200] [18154] [INFO] [services.student_service] StudentService: Create students
[2023-04-06 20:07:40 +0200] [18154] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-06 20:07:40 +0200] [18154] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_1' second_name=None last_name='student_1' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-06 20:07:40 +0200] [18154] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-06 20:07:40 +0200] [18154] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-06 20:07:42 +0200] [18154] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 20:07:42 +0200] [18154] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='sbuQsc7ksxz6Fw')]
[2023-04-06 20:07:42 +0200] [18154] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-06 20:07:42 +0200] [18154] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='sbuQsc7ksxz6Fw')]
[2023-04-06 20:07:42 +0200] [18154] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('ac30e355-068d-4ec9-94b1-b0c66606e848'), 'registration_token': 'sbuQsc7ksxz6Fw', 'registered_user': False, 'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 6, 18, 7, 42, 528006), 'updated_at': datetime.datetime(2023, 4, 6, 18, 7, 42, 528010), 'deleted_at': None}]
[2023-04-06 20:07:42 +0200] [18154] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7f71878c5d00>]
[2023-04-06 20:09:31 +0200] [18154] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-06 20:13:04 +0200] [18154] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-06 21:13:56 +0200] [24119] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by parameters
[2023-04-06 21:13:56 +0200] [24119] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: params: {'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': '28-02-2002'}
[2023-04-06 21:16:45 +0200] [24276] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by parameters
[2023-04-06 21:16:45 +0200] [24276] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: params: {'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 21:16:47 +0200] [24276] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 21:21:09 +0200] [24523] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by parameters
[2023-04-06 21:21:09 +0200] [24523] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: params: {'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 21:21:10 +0200] [24523] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 21:21:11 +0200] [24523] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-06 21:21:11 +0200] [24523] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='student' login='user' password='$2b$12$6sV8ZHVnYvvUVxlDrdTiwu7gCDFV8AcE7ovszPsxtTBTRReSnDfj.' email='user@user' id=UUID('ac30e355-068d-4ec9-94b1-b0c66606e848') first_name='student_1' second_name=None last_name='student_1' birth_date=datetime.datetime(2002, 2, 28, 0, 0) registration_token='sbuQsc7ksxz6Fw'
[2023-04-06 21:23:31 +0200] [24675] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by parameters
[2023-04-06 21:23:31 +0200] [24675] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: params: {'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 21:23:32 +0200] [24675] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 21:23:32 +0200] [24675] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-06 21:23:32 +0200] [24675] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='student' login='user' password='$2b$12$Jyc/mPCJBilf2K6KzZsfGOcp/VpzLvaaNCPWacUA0BeW25sUsy2OK' email='user@user' id=UUID('ac30e355-068d-4ec9-94b1-b0c66606e848')
[2023-04-06 21:23:32 +0200] [24675] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('ac30e355-068d-4ec9-94b1-b0c66606e848'), 'login': 'user', 'email': 'user@user', 'password': '$2b$12$Jyc/mPCJBilf2K6KzZsfGOcp/VpzLvaaNCPWacUA0BeW25sUsy2OK', 'role': 'student', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 6, 19, 23, 32, 979039), 'updated_at': datetime.datetime(2023, 4, 6, 19, 23, 32, 979044)}
[2023-04-06 21:25:19 +0200] [24872] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by parameters
[2023-04-06 21:25:19 +0200] [24872] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: params: {'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 21:25:20 +0200] [24872] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 21:25:20 +0200] [24872] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-06 21:25:20 +0200] [24872] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='student' login='user' password='$2b$12$9KFg/cf1PvbVWs9fEiaPSe5/x8kTMjtPo2FfPXgZuJNkVrTnFZL.K' email='user@user' id=UUID('ac30e355-068d-4ec9-94b1-b0c66606e848')
[2023-04-06 21:36:12 +0200] [25532] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-06 21:36:16 +0200] [25532] [INFO] [services.auth_service] AuthService: Login user
[2023-04-06 21:36:16 +0200] [25532] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-06 21:36:16 +0200] [25532] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:36:16 +0200] [25532] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-06 21:36:16 +0200] [25532] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:36:16 +0200] [25532] [INFO] [services.auth_service] AuthService: Create session
[2023-04-06 21:36:16 +0200] [25532] [TRACE] [services.auth_service] AuthService: Create session with user: efd97175-e187-4ce7-9a4a-286992943857
[2023-04-06 21:36:16 +0200] [25532] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-06 21:36:16 +0200] [25532] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('efd97175-e187-4ce7-9a4a-286992943857') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 6, 19, 41, 16, 419181) refresh_expire_time=datetime.datetime(2023, 4, 8, 19, 36, 16, 419313) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTAwNzYsInN1YiI6ImFkbWluIn0.6_B1Xap0v_mJOq1T8BMriCZZCoPpqxrMZvRj6SEXUtg' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5ODI1NzYsInN1YiI6ImFkbWluIn0.-wWk2CRUv2erBiFdVN9vy8EwVtVk0aeTnSzsEL7lRKE' blocked=False is_active=True
[2023-04-06 21:36:16 +0200] [25532] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('6b4532b6-f627-443c-9d7f-7dcc54e068e5'), 'user_id': UUID('efd97175-e187-4ce7-9a4a-286992943857'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTAwNzYsInN1YiI6ImFkbWluIn0.6_B1Xap0v_mJOq1T8BMriCZZCoPpqxrMZvRj6SEXUtg', 'access_expire_time': datetime.datetime(2023, 4, 6, 19, 41, 16, 419181), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5ODI1NzYsInN1YiI6ImFkbWluIn0.-wWk2CRUv2erBiFdVN9vy8EwVtVk0aeTnSzsEL7lRKE', 'refresh_expire_time': datetime.datetime(2023, 4, 8, 19, 36, 16, 419313), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 6, 19, 36, 16, 422487), 'updated_at': datetime.datetime(2023, 4, 6, 19, 36, 16, 422491)}
[2023-04-06 21:36:18 +0200] [25532] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-06 21:36:18 +0200] [25532] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:36:18 +0200] [25532] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-06 21:36:18 +0200] [25532] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:36:18 +0200] [25532] [INFO] [services.student_service] StudentService: Create students
[2023-04-06 21:36:18 +0200] [25532] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_2', second_name=None, last_name='student_2', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-06 21:36:18 +0200] [25532] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_2' second_name=None last_name='student_2' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-06 21:36:18 +0200] [25532] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-06 21:36:18 +0200] [25532] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_2', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-06 21:36:19 +0200] [25532] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 21:36:19 +0200] [25532] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_2', second_name=None, last_name='student_2', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='0ooDsqsiKJUuYw')]
[2023-04-06 21:36:19 +0200] [25532] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-06 21:36:19 +0200] [25532] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_2', second_name=None, last_name='student_2', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='0ooDsqsiKJUuYw')]
[2023-04-06 21:36:19 +0200] [25532] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('a0f5075e-71a6-49cd-8fc4-9f282d0084e4'), 'registration_token': '0ooDsqsiKJUuYw', 'registered_user': False, 'first_name': 'student_2', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 6, 19, 36, 19, 958191), 'updated_at': datetime.datetime(2023, 4, 6, 19, 36, 19, 958195), 'deleted_at': None}]
[2023-04-06 21:36:19 +0200] [25532] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7f29fb4b8e50>]
[2023-04-06 21:36:29 +0200] [25532] [INFO] [services.student_service] StudentService: Get student by parameters: {'first_name': 'student_2', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 21:36:29 +0200] [25532] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by parameters
[2023-04-06 21:36:29 +0200] [25532] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: params: {'first_name': 'student_2', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 21:36:29 +0200] [25532] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 21:40:27 +0200] [25808] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:40:27 +0200] [25808] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user'}
[2023-04-06 21:40:27 +0200] [25808] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:40:27 +0200] [25808] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:40:27 +0200] [25808] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'user@user'}
[2023-04-06 21:40:27 +0200] [25808] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:40:42 +0200] [25808] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:40:42 +0200] [25808] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user1'}
[2023-04-06 21:40:42 +0200] [25808] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:40:42 +0200] [25808] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:40:42 +0200] [25808] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'user@user'}
[2023-04-06 21:40:42 +0200] [25808] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:40:47 +0200] [25808] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:40:47 +0200] [25808] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user1'}
[2023-04-06 21:40:47 +0200] [25808] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:40:47 +0200] [25808] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:40:47 +0200] [25808] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'user1@user'}
[2023-04-06 21:40:47 +0200] [25808] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:40:47 +0200] [25808] [INFO] [services.student_service] StudentService: Get student by parameters: {'first_name': 'student_2', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 21:40:47 +0200] [25808] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by parameters
[2023-04-06 21:40:47 +0200] [25808] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: params: {'first_name': 'student_2', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 21:40:48 +0200] [25808] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 21:41:10 +0200] [25808] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:41:10 +0200] [25808] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user1'}
[2023-04-06 21:41:10 +0200] [25808] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:41:10 +0200] [25808] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:41:10 +0200] [25808] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'user1@user'}
[2023-04-06 21:41:10 +0200] [25808] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:41:10 +0200] [25808] [INFO] [services.student_service] StudentService: Get student by parameters: {'first_name': 'student_1', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 21:41:10 +0200] [25808] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by parameters
[2023-04-06 21:41:10 +0200] [25808] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: params: {'first_name': 'student_1', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 21:41:10 +0200] [25808] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 21:41:36 +0200] [25886] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:41:36 +0200] [25886] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user1'}
[2023-04-06 21:41:36 +0200] [25886] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:41:36 +0200] [25886] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:41:36 +0200] [25886] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'user1@user'}
[2023-04-06 21:41:36 +0200] [25886] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:41:36 +0200] [25886] [INFO] [services.student_service] StudentService: Get student by parameters: {'first_name': 'student_1', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 21:41:36 +0200] [25886] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by parameters
[2023-04-06 21:41:36 +0200] [25886] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: params: {'first_name': 'student_1', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 21:41:38 +0200] [25886] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 21:41:50 +0200] [25886] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:41:50 +0200] [25886] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user1'}
[2023-04-06 21:41:50 +0200] [25886] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:41:50 +0200] [25886] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:41:50 +0200] [25886] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'user1@user'}
[2023-04-06 21:41:50 +0200] [25886] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:41:50 +0200] [25886] [INFO] [services.student_service] StudentService: Get student by parameters: {'first_name': 'student_2', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 21:41:50 +0200] [25886] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by parameters
[2023-04-06 21:41:50 +0200] [25886] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: params: {'first_name': 'student_2', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 21:41:50 +0200] [25886] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 21:41:50 +0200] [25886] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-06 21:41:50 +0200] [25886] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='student' login='user1' password='$2b$12$RDX6i0L5QWdYEITJp6hhaO7iMm4TDKlexjCPyCFnIdaSfHo1rh66W' email='user1@user' id=UUID('a0f5075e-71a6-49cd-8fc4-9f282d0084e4')
[2023-04-06 21:41:50 +0200] [25886] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('a0f5075e-71a6-49cd-8fc4-9f282d0084e4'), 'login': 'user1', 'email': 'user1@user', 'password': '$2b$12$RDX6i0L5QWdYEITJp6hhaO7iMm4TDKlexjCPyCFnIdaSfHo1rh66W', 'role': 'student', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 6, 19, 41, 50, 408667), 'updated_at': datetime.datetime(2023, 4, 6, 19, 41, 50, 408673)}
[2023-04-06 21:47:49 +0200] [26226] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:47:49 +0200] [26226] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user1'}
[2023-04-06 21:47:49 +0200] [26226] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:47:49 +0200] [26226] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:47:49 +0200] [26226] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'user1@user'}
[2023-04-06 21:47:49 +0200] [26226] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:48:01 +0200] [26226] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-06 21:48:05 +0200] [26226] [INFO] [services.auth_service] AuthService: Login user
[2023-04-06 21:48:05 +0200] [26226] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-06 21:48:05 +0200] [26226] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:48:05 +0200] [26226] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-06 21:48:05 +0200] [26226] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:48:05 +0200] [26226] [INFO] [services.auth_service] AuthService: Create session
[2023-04-06 21:48:05 +0200] [26226] [TRACE] [services.auth_service] AuthService: Create session with user: efd97175-e187-4ce7-9a4a-286992943857
[2023-04-06 21:48:05 +0200] [26226] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-06 21:48:05 +0200] [26226] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('efd97175-e187-4ce7-9a4a-286992943857') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 6, 19, 53, 5, 288707) refresh_expire_time=datetime.datetime(2023, 4, 8, 19, 48, 5, 288844) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTA3ODUsInN1YiI6ImFkbWluIn0.yAVbW2eIQhnpWdiu4CJ6u7H2QbWqOZ6hHbRXYlJlbh4' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5ODMyODUsInN1YiI6ImFkbWluIn0.oPVu_O7_m_gOWPfR6bYd71yuGtjN_T-dTwEma7q72NM' blocked=False is_active=True
[2023-04-06 21:48:05 +0200] [26226] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('46dff4f9-6f6f-4bca-8882-093605b4732f'), 'user_id': UUID('efd97175-e187-4ce7-9a4a-286992943857'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTA3ODUsInN1YiI6ImFkbWluIn0.yAVbW2eIQhnpWdiu4CJ6u7H2QbWqOZ6hHbRXYlJlbh4', 'access_expire_time': datetime.datetime(2023, 4, 6, 19, 53, 5, 288707), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5ODMyODUsInN1YiI6ImFkbWluIn0.oPVu_O7_m_gOWPfR6bYd71yuGtjN_T-dTwEma7q72NM', 'refresh_expire_time': datetime.datetime(2023, 4, 8, 19, 48, 5, 288844), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 6, 19, 48, 5, 292085), 'updated_at': datetime.datetime(2023, 4, 6, 19, 48, 5, 292089)}
[2023-04-06 21:48:06 +0200] [26226] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-06 21:48:06 +0200] [26226] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:48:06 +0200] [26226] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-06 21:48:06 +0200] [26226] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:48:06 +0200] [26226] [INFO] [services.student_service] StudentService: Create students
[2023-04-06 21:48:06 +0200] [26226] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_3', second_name=None, last_name='student_3', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-06 21:48:06 +0200] [26226] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_3' second_name=None last_name='student_3' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-06 21:48:06 +0200] [26226] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-06 21:48:06 +0200] [26226] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_3', 'second_name': None, 'last_name': 'student_3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-06 21:48:08 +0200] [26226] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 21:48:08 +0200] [26226] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_3', second_name=None, last_name='student_3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='4GhXfmxepQ7Log')]
[2023-04-06 21:48:08 +0200] [26226] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-06 21:48:08 +0200] [26226] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_3', second_name=None, last_name='student_3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='4GhXfmxepQ7Log')]
[2023-04-06 21:48:08 +0200] [26226] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('78c1d9ab-ecfe-4f17-b308-086284b44a27'), 'registration_token': '4GhXfmxepQ7Log', 'registered_user': False, 'first_name': 'student_3', 'second_name': None, 'last_name': 'student_3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 6, 19, 48, 8, 292080), 'updated_at': datetime.datetime(2023, 4, 6, 19, 48, 8, 292084), 'deleted_at': None}]
[2023-04-06 21:48:08 +0200] [26226] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7f482e07ed30>]
[2023-04-06 21:48:31 +0200] [26226] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:48:31 +0200] [26226] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user11'}
[2023-04-06 21:48:31 +0200] [26226] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:48:31 +0200] [26226] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:48:31 +0200] [26226] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'user11@user'}
[2023-04-06 21:48:31 +0200] [26226] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:48:31 +0200] [26226] [INFO] [services.student_service] StudentService: Get student by parameters: {'first_name': 'student_3', 'second_name': None, 'last_name': 'student_3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 21:48:31 +0200] [26226] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by parameters
[2023-04-06 21:48:31 +0200] [26226] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: params: {'first_name': 'student_3', 'second_name': None, 'last_name': 'student_3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 21:48:31 +0200] [26226] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 21:48:31 +0200] [26226] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-06 21:48:31 +0200] [26226] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='student' login='user11' password='$2b$12$ZrHmRBe9p/7bzXenIit.JuAFWw/NpoNtoAMnTE8V1Y0vnQNBIK9fm' email='user11@user' id=UUID('78c1d9ab-ecfe-4f17-b308-086284b44a27')
[2023-04-06 21:48:31 +0200] [26226] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('78c1d9ab-ecfe-4f17-b308-086284b44a27'), 'login': 'user11', 'email': 'user11@user', 'password': '$2b$12$ZrHmRBe9p/7bzXenIit.JuAFWw/NpoNtoAMnTE8V1Y0vnQNBIK9fm', 'role': 'student', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 6, 19, 48, 31, 438092), 'updated_at': datetime.datetime(2023, 4, 6, 19, 48, 31, 438097)}
[2023-04-06 21:49:13 +0200] [26337] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-06 21:49:13 +0200] [26337] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:49:13 +0200] [26337] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-06 21:49:13 +0200] [26337] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:49:13 +0200] [26337] [INFO] [services.student_service] StudentService: Create students
[2023-04-06 21:49:13 +0200] [26337] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_4', second_name=None, last_name='student_4', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-06 21:49:13 +0200] [26337] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_4' second_name=None last_name='student_4' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-06 21:49:13 +0200] [26337] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-06 21:49:13 +0200] [26337] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_4', 'second_name': None, 'last_name': 'student_4', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-06 21:49:15 +0200] [26337] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 21:49:15 +0200] [26337] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_4', second_name=None, last_name='student_4', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='4bZItwu5yaWVMA')]
[2023-04-06 21:49:15 +0200] [26337] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-06 21:49:15 +0200] [26337] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_4', second_name=None, last_name='student_4', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='4bZItwu5yaWVMA')]
[2023-04-06 21:49:15 +0200] [26337] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('614bb483-e7ec-42af-9c3e-06d8c7e9e082'), 'registration_token': '4bZItwu5yaWVMA', 'registered_user': False, 'first_name': 'student_4', 'second_name': None, 'last_name': 'student_4', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 6, 19, 49, 15, 209883), 'updated_at': datetime.datetime(2023, 4, 6, 19, 49, 15, 209886), 'deleted_at': None}]
[2023-04-06 21:49:15 +0200] [26337] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7f271f886dc0>]
[2023-04-06 21:49:39 +0200] [26337] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:49:39 +0200] [26337] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user121'}
[2023-04-06 21:49:39 +0200] [26337] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:49:39 +0200] [26337] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:49:39 +0200] [26337] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'user211@user'}
[2023-04-06 21:49:39 +0200] [26337] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:49:39 +0200] [26337] [INFO] [services.student_service] StudentService: Get student by parameters: {'first_name': 'student_4', 'second_name': None, 'last_name': 'student_4', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 21:49:39 +0200] [26337] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by parameters
[2023-04-06 21:49:39 +0200] [26337] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: params: {'first_name': 'student_4', 'second_name': None, 'last_name': 'student_4', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 21:49:39 +0200] [26337] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 21:49:39 +0200] [26337] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-06 21:49:39 +0200] [26337] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='student' login='user121' password='$2b$12$I3feXP1Gl0MxLgG3oqCKX.XPLOeQPf26cCFvwOw73qg.csAqxgZ8u' email='user211@user' id=UUID('614bb483-e7ec-42af-9c3e-06d8c7e9e082')
[2023-04-06 21:49:39 +0200] [26337] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('614bb483-e7ec-42af-9c3e-06d8c7e9e082'), 'login': 'user121', 'email': 'user211@user', 'password': '$2b$12$I3feXP1Gl0MxLgG3oqCKX.XPLOeQPf26cCFvwOw73qg.csAqxgZ8u', 'role': 'student', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 6, 19, 49, 39, 988501), 'updated_at': datetime.datetime(2023, 4, 6, 19, 49, 39, 988505)}
[2023-04-06 21:49:39 +0200] [26337] [INFO] [services.student_service] StudentService: Update student
[2023-04-06 21:49:39 +0200] [26337] [TRACE] [services.student_service] StudentService: Patch student with id: 614bb483-e7ec-42af-9c3e-06d8c7e9e082 - with following data: True
[2023-04-06 21:49:39 +0200] [26337] [INFO] [db.dao.base_dao] StudentModel DAO: Update db entry
[2023-04-06 21:49:39 +0200] [26337] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for update: item_id: 614bb483-e7ec-42af-9c3e-06d8c7e9e082, patch_data: True
[2023-04-06 21:51:51 +0200] [26543] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-06 21:51:51 +0200] [26543] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:51:51 +0200] [26543] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-06 21:51:51 +0200] [26543] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:51:51 +0200] [26543] [INFO] [services.student_service] StudentService: Create students
[2023-04-06 21:51:51 +0200] [26543] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_5', second_name=None, last_name='student_5', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-06 21:51:51 +0200] [26543] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_5' second_name=None last_name='student_5' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-06 21:51:51 +0200] [26543] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-06 21:51:51 +0200] [26543] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_5', 'second_name': None, 'last_name': 'student_5', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-06 21:51:52 +0200] [26543] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 21:51:52 +0200] [26543] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_5', second_name=None, last_name='student_5', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='88M3SBYEBWyTyg')]
[2023-04-06 21:51:52 +0200] [26543] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-06 21:51:52 +0200] [26543] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_5', second_name=None, last_name='student_5', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='88M3SBYEBWyTyg')]
[2023-04-06 21:51:52 +0200] [26543] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('63ffe213-589b-4524-81df-823589173c98'), 'registration_token': '88M3SBYEBWyTyg', 'registered_user': False, 'first_name': 'student_5', 'second_name': None, 'last_name': 'student_5', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 6, 19, 51, 52, 411195), 'updated_at': datetime.datetime(2023, 4, 6, 19, 51, 52, 411201), 'deleted_at': None}]
[2023-04-06 21:51:52 +0200] [26543] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7fa22c6549d0>]
[2023-04-06 21:52:18 +0200] [26543] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:52:18 +0200] [26543] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user1621'}
[2023-04-06 21:52:18 +0200] [26543] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:52:18 +0200] [26543] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:52:18 +0200] [26543] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'user2611@user'}
[2023-04-06 21:52:18 +0200] [26543] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:52:18 +0200] [26543] [INFO] [services.student_service] StudentService: Get student by parameters: {'first_name': 'student_5', 'second_name': None, 'last_name': 'student_5', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 21:52:18 +0200] [26543] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by parameters
[2023-04-06 21:52:18 +0200] [26543] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: params: {'first_name': 'student_5', 'second_name': None, 'last_name': 'student_5', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 21:52:18 +0200] [26543] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 21:52:19 +0200] [26543] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-06 21:52:19 +0200] [26543] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='student' login='user1621' password='$2b$12$ryqmWVA2bTKxYBa5WWPbZOQz7/2Ns8zHfzsDfQHzlwvn3VZ3frECe' email='user2611@user' id=UUID('63ffe213-589b-4524-81df-823589173c98')
[2023-04-06 21:52:19 +0200] [26543] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('63ffe213-589b-4524-81df-823589173c98'), 'login': 'user1621', 'email': 'user2611@user', 'password': '$2b$12$ryqmWVA2bTKxYBa5WWPbZOQz7/2Ns8zHfzsDfQHzlwvn3VZ3frECe', 'role': 'student', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 6, 19, 52, 19, 59251), 'updated_at': datetime.datetime(2023, 4, 6, 19, 52, 19, 59258)}
[2023-04-06 21:52:19 +0200] [26543] [INFO] [services.student_service] StudentService: Update student
[2023-04-06 21:52:19 +0200] [26543] [TRACE] [services.student_service] StudentService: Patch student with id: 63ffe213-589b-4524-81df-823589173c98 - with following data: True
[2023-04-06 21:52:19 +0200] [26543] [INFO] [db.dao.base_dao] StudentModel DAO: Update db entry
[2023-04-06 21:52:19 +0200] [26543] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for update: item_id: 63ffe213-589b-4524-81df-823589173c98, patch_data: True
[2023-04-06 21:53:47 +0200] [26674] [INFO] [services.auth_service] AuthService: Login user
[2023-04-06 21:53:47 +0200] [26674] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-06 21:53:47 +0200] [26674] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:53:47 +0200] [26674] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-06 21:53:47 +0200] [26674] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:53:48 +0200] [26674] [INFO] [services.auth_service] AuthService: Create session
[2023-04-06 21:53:48 +0200] [26674] [TRACE] [services.auth_service] AuthService: Create session with user: efd97175-e187-4ce7-9a4a-286992943857
[2023-04-06 21:53:48 +0200] [26674] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-06 21:53:48 +0200] [26674] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('efd97175-e187-4ce7-9a4a-286992943857') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 6, 19, 58, 48, 106476) refresh_expire_time=datetime.datetime(2023, 4, 8, 19, 53, 48, 106651) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTExMjgsInN1YiI6ImFkbWluIn0.4eUcxzX3aEB123yDlNhzLzYuxuanjumI2xeU9NZMR10' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5ODM2MjgsInN1YiI6ImFkbWluIn0.baJbC9zkRIkhpRTTLGgswhbpptDxtBLx5A70txFflZU' blocked=False is_active=True
[2023-04-06 21:53:48 +0200] [26674] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('26f6c452-35bd-4530-8609-46c754296118'), 'user_id': UUID('efd97175-e187-4ce7-9a4a-286992943857'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTExMjgsInN1YiI6ImFkbWluIn0.4eUcxzX3aEB123yDlNhzLzYuxuanjumI2xeU9NZMR10', 'access_expire_time': datetime.datetime(2023, 4, 6, 19, 58, 48, 106476), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5ODM2MjgsInN1YiI6ImFkbWluIn0.baJbC9zkRIkhpRTTLGgswhbpptDxtBLx5A70txFflZU', 'refresh_expire_time': datetime.datetime(2023, 4, 8, 19, 53, 48, 106651), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 6, 19, 53, 48, 109875), 'updated_at': datetime.datetime(2023, 4, 6, 19, 53, 48, 109880)}
[2023-04-06 21:54:04 +0200] [26674] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-06 21:54:04 +0200] [26674] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:54:04 +0200] [26674] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-06 21:54:04 +0200] [26674] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:54:04 +0200] [26674] [INFO] [services.student_service] StudentService: Create students
[2023-04-06 21:54:04 +0200] [26674] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_6', second_name=None, last_name='student_6', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-06 21:54:04 +0200] [26674] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_6' second_name=None last_name='student_6' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-06 21:54:04 +0200] [26674] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-06 21:54:04 +0200] [26674] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_6', 'second_name': None, 'last_name': 'student_6', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-06 21:54:06 +0200] [26674] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 21:54:06 +0200] [26674] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_6', second_name=None, last_name='student_6', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='kq9z-cZQFqIiYQ')]
[2023-04-06 21:54:06 +0200] [26674] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-06 21:54:06 +0200] [26674] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_6', second_name=None, last_name='student_6', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='kq9z-cZQFqIiYQ')]
[2023-04-06 21:54:06 +0200] [26674] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('d030dfbb-1188-441c-93be-ff0e8d873f64'), 'registration_token': 'kq9z-cZQFqIiYQ', 'registered_user': False, 'first_name': 'student_6', 'second_name': None, 'last_name': 'student_6', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 6, 19, 54, 6, 12006), 'updated_at': datetime.datetime(2023, 4, 6, 19, 54, 6, 12009), 'deleted_at': None}]
[2023-04-06 21:54:06 +0200] [26674] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7faf18059d60>]
[2023-04-06 21:54:14 +0200] [26674] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:54:14 +0200] [26674] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user1621'}
[2023-04-06 21:54:14 +0200] [26674] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:54:14 +0200] [26674] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:54:14 +0200] [26674] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'user2611@user'}
[2023-04-06 21:54:14 +0200] [26674] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:54:17 +0200] [26674] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:54:17 +0200] [26674] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user1621'}
[2023-04-06 21:54:17 +0200] [26674] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:54:17 +0200] [26674] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:54:17 +0200] [26674] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'user2d611@user'}
[2023-04-06 21:54:17 +0200] [26674] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:54:21 +0200] [26674] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:54:21 +0200] [26674] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user1d621'}
[2023-04-06 21:54:21 +0200] [26674] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:54:21 +0200] [26674] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:54:21 +0200] [26674] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'user2d611@user'}
[2023-04-06 21:54:21 +0200] [26674] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:54:21 +0200] [26674] [INFO] [services.student_service] StudentService: Get student by parameters: {'first_name': 'student_6', 'second_name': None, 'last_name': 'student_6', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 21:54:21 +0200] [26674] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by parameters
[2023-04-06 21:54:21 +0200] [26674] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: params: {'first_name': 'student_6', 'second_name': None, 'last_name': 'student_6', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 21:54:21 +0200] [26674] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 21:54:21 +0200] [26674] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-06 21:54:21 +0200] [26674] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='student' login='user1d621' password='$2b$12$6nzWosbq7CHTOfLgs/KBBemr9xJ3/ZcdluiHuupWqNoKZHHzRu7n.' email='user2d611@user' id=UUID('d030dfbb-1188-441c-93be-ff0e8d873f64')
[2023-04-06 21:54:21 +0200] [26674] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('d030dfbb-1188-441c-93be-ff0e8d873f64'), 'login': 'user1d621', 'email': 'user2d611@user', 'password': '$2b$12$6nzWosbq7CHTOfLgs/KBBemr9xJ3/ZcdluiHuupWqNoKZHHzRu7n.', 'role': 'student', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 6, 19, 54, 21, 359806), 'updated_at': datetime.datetime(2023, 4, 6, 19, 54, 21, 359815)}
[2023-04-06 21:54:21 +0200] [26674] [INFO] [services.student_service] StudentService: Update student
[2023-04-06 21:54:21 +0200] [26674] [TRACE] [services.student_service] StudentService: Patch student with id: d030dfbb-1188-441c-93be-ff0e8d873f64 - with following data: True
[2023-04-06 21:54:21 +0200] [26674] [INFO] [db.dao.base_dao] StudentModel DAO: Update db entry
[2023-04-06 21:54:21 +0200] [26674] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for update: item_id: d030dfbb-1188-441c-93be-ff0e8d873f64, patch_data: True
[2023-04-06 21:56:42 +0200] [26848] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-06 21:56:42 +0200] [26848] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:56:42 +0200] [26848] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-06 21:56:42 +0200] [26848] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:56:42 +0200] [26848] [INFO] [services.student_service] StudentService: Create students
[2023-04-06 21:56:42 +0200] [26848] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_7', second_name=None, last_name='student_7', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-06 21:56:42 +0200] [26848] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_7' second_name=None last_name='student_7' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-06 21:56:42 +0200] [26848] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-06 21:56:42 +0200] [26848] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_7', 'second_name': None, 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-06 21:56:43 +0200] [26848] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 21:56:43 +0200] [26848] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_7', second_name=None, last_name='student_7', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='bETIINyGP1OrpQ')]
[2023-04-06 21:56:43 +0200] [26848] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-06 21:56:43 +0200] [26848] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_7', second_name=None, last_name='student_7', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='bETIINyGP1OrpQ')]
[2023-04-06 21:56:43 +0200] [26848] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('73a1bd20-0837-492b-92fa-9911f1268a61'), 'registration_token': 'bETIINyGP1OrpQ', 'registered_user': False, 'first_name': 'student_7', 'second_name': None, 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 6, 19, 56, 43, 568039), 'updated_at': datetime.datetime(2023, 4, 6, 19, 56, 43, 568043), 'deleted_at': None}]
[2023-04-06 21:56:43 +0200] [26848] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7f9d0c1a8100>]
[2023-04-06 21:56:59 +0200] [26848] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:56:59 +0200] [26848] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user1d6421'}
[2023-04-06 21:56:59 +0200] [26848] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:56:59 +0200] [26848] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:56:59 +0200] [26848] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'user2d611@user'}
[2023-04-06 21:56:59 +0200] [26848] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:57:08 +0200] [26848] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:57:08 +0200] [26848] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user1sd6421'}
[2023-04-06 21:57:08 +0200] [26848] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:57:08 +0200] [26848] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:57:08 +0200] [26848] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'user2ssd611@user'}
[2023-04-06 21:57:08 +0200] [26848] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:57:08 +0200] [26848] [INFO] [services.student_service] StudentService: Get student by parameters: {'first_name': 'student_7', 'second_name': None, 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 21:57:08 +0200] [26848] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by parameters
[2023-04-06 21:57:08 +0200] [26848] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: params: {'first_name': 'student_7', 'second_name': None, 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 21:57:08 +0200] [26848] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 21:57:08 +0200] [26848] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-06 21:57:08 +0200] [26848] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='student' login='user1sd6421' password='$2b$12$/XrwD0q8Rljv9JPUALfVku3rovPATYqRl2wuIJQ7co0D4dlolTFT6' email='user2ssd611@user' id=UUID('73a1bd20-0837-492b-92fa-9911f1268a61')
[2023-04-06 21:57:08 +0200] [26848] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('73a1bd20-0837-492b-92fa-9911f1268a61'), 'login': 'user1sd6421', 'email': 'user2ssd611@user', 'password': '$2b$12$/XrwD0q8Rljv9JPUALfVku3rovPATYqRl2wuIJQ7co0D4dlolTFT6', 'role': 'student', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 6, 19, 57, 8, 773061), 'updated_at': datetime.datetime(2023, 4, 6, 19, 57, 8, 773065)}
[2023-04-06 21:57:08 +0200] [26848] [INFO] [services.student_service] StudentService: Set student registered_user field
[2023-04-06 21:57:08 +0200] [26848] [TRACE] [services.student_service] StudentService: Patch student with id: 73a1bd20-0837-492b-92fa-9911f1268a61 - set registered_user: True
[2023-04-06 21:57:08 +0200] [26848] [INFO] [db.dao.base_dao] StudentModel DAO: Update db entry
[2023-04-06 21:57:08 +0200] [26848] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for update: item_id: 73a1bd20-0837-492b-92fa-9911f1268a61, patch_data: ('registered_user', True)
[2023-04-06 21:57:30 +0200] [26900] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:57:30 +0200] [26900] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user1sd6421'}
[2023-04-06 21:57:30 +0200] [26900] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:57:30 +0200] [26900] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:57:30 +0200] [26900] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'user2ssd611@user'}
[2023-04-06 21:57:30 +0200] [26900] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:57:48 +0200] [26900] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-06 21:57:48 +0200] [26900] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:57:48 +0200] [26900] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-06 21:57:48 +0200] [26900] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:57:48 +0200] [26900] [INFO] [services.student_service] StudentService: Create students
[2023-04-06 21:57:48 +0200] [26900] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_8', second_name=None, last_name='student_8', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-06 21:57:48 +0200] [26900] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_8' second_name=None last_name='student_8' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-06 21:57:48 +0200] [26900] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-06 21:57:48 +0200] [26900] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_8', 'second_name': None, 'last_name': 'student_8', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-06 21:57:49 +0200] [26900] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 21:57:49 +0200] [26900] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_8', second_name=None, last_name='student_8', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='B_T00UoV8zplBA')]
[2023-04-06 21:57:49 +0200] [26900] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-06 21:57:49 +0200] [26900] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_8', second_name=None, last_name='student_8', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='B_T00UoV8zplBA')]
[2023-04-06 21:57:49 +0200] [26900] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('e97f67f5-7728-47cd-82ed-743fd1c98eee'), 'registration_token': 'B_T00UoV8zplBA', 'registered_user': False, 'first_name': 'student_8', 'second_name': None, 'last_name': 'student_8', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 6, 19, 57, 49, 430498), 'updated_at': datetime.datetime(2023, 4, 6, 19, 57, 49, 430502), 'deleted_at': None}]
[2023-04-06 21:57:49 +0200] [26900] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7fd3b41cb700>]
[2023-04-06 21:58:04 +0200] [26900] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:58:04 +0200] [26900] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user14sd6421'}
[2023-04-06 21:58:04 +0200] [26900] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:58:04 +0200] [26900] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:58:04 +0200] [26900] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'user25ssd611@user'}
[2023-04-06 21:58:04 +0200] [26900] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:58:04 +0200] [26900] [INFO] [services.student_service] StudentService: Get student by parameters: {'first_name': 'student_8', 'second_name': None, 'last_name': 'student_8', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 21:58:04 +0200] [26900] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by parameters
[2023-04-06 21:58:04 +0200] [26900] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: params: {'first_name': 'student_8', 'second_name': None, 'last_name': 'student_8', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 21:58:04 +0200] [26900] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 21:58:04 +0200] [26900] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-06 21:58:04 +0200] [26900] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='student' login='user14sd6421' password='$2b$12$vAzIYjCsclbPgaQa7t19S.15bOnziiQmiU/D8z1eW.i.4JC99PM3u' email='user25ssd611@user' id=UUID('e97f67f5-7728-47cd-82ed-743fd1c98eee')
[2023-04-06 21:58:04 +0200] [26900] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('e97f67f5-7728-47cd-82ed-743fd1c98eee'), 'login': 'user14sd6421', 'email': 'user25ssd611@user', 'password': '$2b$12$vAzIYjCsclbPgaQa7t19S.15bOnziiQmiU/D8z1eW.i.4JC99PM3u', 'role': 'student', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 6, 19, 58, 4, 774256), 'updated_at': datetime.datetime(2023, 4, 6, 19, 58, 4, 774261)}
[2023-04-06 21:58:04 +0200] [26900] [INFO] [services.student_service] StudentService: Set student registered_user field
[2023-04-06 21:58:04 +0200] [26900] [TRACE] [services.student_service] StudentService: Patch student with id: e97f67f5-7728-47cd-82ed-743fd1c98eee - set registered_user: True
[2023-04-06 21:58:04 +0200] [26900] [INFO] [db.dao.base_dao] StudentModel DAO: Update db entry
[2023-04-06 21:58:04 +0200] [26900] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for update: item_id: e97f67f5-7728-47cd-82ed-743fd1c98eee, patch_data: registered_user=True
[2023-04-06 21:58:04 +0200] [26900] [DEBUG] [db.dao.base_dao] StudentModel DAO: Received updated entry from the database
[2023-04-06 21:58:21 +0200] [26900] [INFO] [services.auth_service] AuthService: Login user
[2023-04-06 21:58:21 +0200] [26900] [TRACE] [services.auth_service] AuthService: Login user: user14sd6421
[2023-04-06 21:58:21 +0200] [26900] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:58:21 +0200] [26900] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user14sd6421'}
[2023-04-06 21:58:21 +0200] [26900] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:58:22 +0200] [26900] [INFO] [services.auth_service] AuthService: Create session
[2023-04-06 21:58:22 +0200] [26900] [TRACE] [services.auth_service] AuthService: Create session with user: e97f67f5-7728-47cd-82ed-743fd1c98eee
[2023-04-06 21:58:22 +0200] [26900] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-06 21:58:22 +0200] [26900] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('e97f67f5-7728-47cd-82ed-743fd1c98eee') login='user14sd6421' role='student' access_expire_time=datetime.datetime(2023, 4, 6, 20, 3, 22, 119753) refresh_expire_time=datetime.datetime(2023, 4, 8, 19, 58, 22, 119894) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTE0MDIsInN1YiI6InVzZXIxNHNkNjQyMSJ9.stCu7vWy_AePiW4hWXFHiv61uTlfFFJfCLR0EnRv2wQ' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5ODM5MDIsInN1YiI6InVzZXIxNHNkNjQyMSJ9.8LXHIHA1d0kAH2H3iuDvdPOyVE25rbViiXrCA3IP2cc' blocked=False is_active=True
[2023-04-06 21:58:22 +0200] [26900] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('48233ba2-b9fb-42ea-af93-4037d1519900'), 'user_id': UUID('e97f67f5-7728-47cd-82ed-743fd1c98eee'), 'login': 'user14sd6421', 'role': 'student', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTE0MDIsInN1YiI6InVzZXIxNHNkNjQyMSJ9.stCu7vWy_AePiW4hWXFHiv61uTlfFFJfCLR0EnRv2wQ', 'access_expire_time': datetime.datetime(2023, 4, 6, 20, 3, 22, 119753), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5ODM5MDIsInN1YiI6InVzZXIxNHNkNjQyMSJ9.8LXHIHA1d0kAH2H3iuDvdPOyVE25rbViiXrCA3IP2cc', 'refresh_expire_time': datetime.datetime(2023, 4, 8, 19, 58, 22, 119894), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 6, 19, 58, 22, 122729), 'updated_at': datetime.datetime(2023, 4, 6, 19, 58, 22, 122732)}
[2023-04-06 21:58:48 +0200] [26900] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-06 21:58:48 +0200] [26900] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 21:58:48 +0200] [26900] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user14sd6421'}
[2023-04-06 21:58:48 +0200] [26900] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 21:58:48 +0200] [26900] [ERROR] [utils.rights_restriction] 
NoneType: None
[2023-04-06 22:01:11 +0200] [27129] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-06 22:01:11 +0200] [27129] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 22:01:11 +0200] [27129] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user14sd6421'}
[2023-04-06 22:01:11 +0200] [27129] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 22:01:11 +0200] [27129] [ERROR] [utils.rights_restriction] 
NoneType: None
[2023-04-06 22:01:44 +0200] [27129] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-06 22:01:44 +0200] [27129] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 22:01:44 +0200] [27129] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user14sd6421'}
[2023-04-06 22:01:44 +0200] [27129] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 22:01:44 +0200] [27129] [ERROR] [utils.rights_restriction] 
NoneType: None
[2023-04-06 22:02:32 +0200] [27199] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-06 22:02:32 +0200] [27199] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 22:02:32 +0200] [27199] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user14sd6421'}
[2023-04-06 22:02:32 +0200] [27199] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 22:02:32 +0200] [27199] [ERROR] [utils.rights_restriction] 
NoneType: None
[2023-04-06 22:03:09 +0200] [27232] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-06 22:03:09 +0200] [27232] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 22:03:09 +0200] [27232] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user14sd6421'}
[2023-04-06 22:03:09 +0200] [27232] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 22:03:09 +0200] [27232] [ERROR] [utils.rights_restriction] 
NoneType: None
[2023-04-06 22:03:59 +0200] [27288] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-06 22:04:29 +0200] [27288] [INFO] [services.auth_service] AuthService: Login user
[2023-04-06 22:04:29 +0200] [27288] [TRACE] [services.auth_service] AuthService: Login user: user14sd6421
[2023-04-06 22:04:29 +0200] [27288] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 22:04:29 +0200] [27288] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user14sd6421'}
[2023-04-06 22:04:29 +0200] [27288] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 22:04:29 +0200] [27288] [INFO] [services.auth_service] AuthService: Create session
[2023-04-06 22:04:29 +0200] [27288] [TRACE] [services.auth_service] AuthService: Create session with user: e97f67f5-7728-47cd-82ed-743fd1c98eee
[2023-04-06 22:04:29 +0200] [27288] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-06 22:04:29 +0200] [27288] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('e97f67f5-7728-47cd-82ed-743fd1c98eee') login='user14sd6421' role='student' access_expire_time=datetime.datetime(2023, 4, 6, 20, 9, 29, 629743) refresh_expire_time=datetime.datetime(2023, 4, 8, 20, 4, 29, 629946) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTE3NjksInN1YiI6InVzZXIxNHNkNjQyMSJ9.WMwyy5Dv7NjPOoWFp7iqPdX2pEmAurxB2suBKFt2XuE' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5ODQyNjksInN1YiI6InVzZXIxNHNkNjQyMSJ9.lXIkwNO1BbvwSSyDxHQ6Fa5BXY0j1Wz-Cz0jAcOZ4Ok' blocked=False is_active=True
[2023-04-06 22:04:29 +0200] [27288] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('bc6830c4-1d74-4f30-868c-0f37eed44d33'), 'user_id': UUID('e97f67f5-7728-47cd-82ed-743fd1c98eee'), 'login': 'user14sd6421', 'role': 'student', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTE3NjksInN1YiI6InVzZXIxNHNkNjQyMSJ9.WMwyy5Dv7NjPOoWFp7iqPdX2pEmAurxB2suBKFt2XuE', 'access_expire_time': datetime.datetime(2023, 4, 6, 20, 9, 29, 629743), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5ODQyNjksInN1YiI6InVzZXIxNHNkNjQyMSJ9.lXIkwNO1BbvwSSyDxHQ6Fa5BXY0j1Wz-Cz0jAcOZ4Ok', 'refresh_expire_time': datetime.datetime(2023, 4, 8, 20, 4, 29, 629946), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 6, 20, 4, 29, 634494), 'updated_at': datetime.datetime(2023, 4, 6, 20, 4, 29, 634501)}
[2023-04-06 22:04:32 +0200] [27288] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-06 22:04:32 +0200] [27288] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 22:04:32 +0200] [27288] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user14sd6421'}
[2023-04-06 22:04:32 +0200] [27288] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 22:04:32 +0200] [27288] [ERROR] [utils.rights_restriction] 
NoneType: None
[2023-04-06 22:05:06 +0200] [27408] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-06 22:05:06 +0200] [27408] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 22:05:06 +0200] [27408] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user14sd6421'}
[2023-04-06 22:05:06 +0200] [27408] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 22:05:06 +0200] [27408] [INFO] [services.student_service] StudentService: Get student by id: e97f67f5-7728-47cd-82ed-743fd1c98eee
[2023-04-06 22:05:06 +0200] [27408] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by id: e97f67f5-7728-47cd-82ed-743fd1c98eee
[2023-04-06 22:05:07 +0200] [27408] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 22:05:31 +0200] [27436] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-06 22:05:31 +0200] [27436] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 22:05:31 +0200] [27436] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user14sd6421'}
[2023-04-06 22:05:32 +0200] [27436] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 22:05:32 +0200] [27436] [INFO] [services.student_service] StudentService: Get student by id: e97f67f5-7728-47cd-82ed-743fd1c98eee
[2023-04-06 22:05:32 +0200] [27436] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by id: e97f67f5-7728-47cd-82ed-743fd1c98eee
[2023-04-06 22:05:33 +0200] [27436] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 22:06:53 +0200] [27508] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 22:06:53 +0200] [27508] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user14sd6421'}
[2023-04-06 22:06:53 +0200] [27508] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 22:06:53 +0200] [27508] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 22:06:53 +0200] [27508] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'user25ssd611@user'}
[2023-04-06 22:06:53 +0200] [27508] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 22:07:14 +0200] [27508] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 22:07:14 +0200] [27508] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': '11111'}
[2023-04-06 22:07:14 +0200] [27508] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 22:07:14 +0200] [27508] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 22:07:14 +0200] [27508] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'user2115ssd611@user'}
[2023-04-06 22:07:14 +0200] [27508] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 22:07:14 +0200] [27508] [INFO] [services.student_service] StudentService: Get student by parameters: {'first_name': 'student_8', 'second_name': None, 'last_name': 'student_8', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 22:07:14 +0200] [27508] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by parameters
[2023-04-06 22:07:14 +0200] [27508] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: params: {'first_name': 'student_8', 'second_name': None, 'last_name': 'student_8', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 22:07:15 +0200] [27508] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 22:07:29 +0200] [27508] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 22:07:29 +0200] [27508] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': '11111'}
[2023-04-06 22:07:29 +0200] [27508] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 22:07:29 +0200] [27508] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 22:07:29 +0200] [27508] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'user2115ssd611@user'}
[2023-04-06 22:07:29 +0200] [27508] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 22:07:29 +0200] [27508] [INFO] [services.student_service] StudentService: Get student by parameters: {'first_name': 'student_9', 'second_name': None, 'last_name': 'student_8', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 22:07:29 +0200] [27508] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by parameters
[2023-04-06 22:07:29 +0200] [27508] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: params: {'first_name': 'student_9', 'second_name': None, 'last_name': 'student_8', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 22:07:29 +0200] [27508] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 22:43:46 +0200] [29417] [INFO] [services.auth_service] AuthService: Login user
[2023-04-06 22:43:46 +0200] [29417] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-06 22:43:46 +0200] [29417] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 22:43:46 +0200] [29417] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-06 22:43:46 +0200] [29417] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 22:43:46 +0200] [29417] [INFO] [services.auth_service] AuthService: Create session
[2023-04-06 22:43:46 +0200] [29417] [TRACE] [services.auth_service] AuthService: Create session with user: efd97175-e187-4ce7-9a4a-286992943857
[2023-04-06 22:43:46 +0200] [29417] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-06 22:43:46 +0200] [29417] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('efd97175-e187-4ce7-9a4a-286992943857') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 6, 20, 48, 46, 629528) refresh_expire_time=datetime.datetime(2023, 4, 8, 20, 43, 46, 629693) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTQxMjYsInN1YiI6ImFkbWluIn0.4uJpMd7OU1ia9E4qZW4fUcuH3tWfwpj8yOkhcLKLD08' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5ODY2MjYsInN1YiI6ImFkbWluIn0.UqBJ7WiWQb1FWNGKaU6sh3xc3ODFNUh88epm5IrDgc8' blocked=False is_active=True
[2023-04-06 22:43:46 +0200] [29417] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('f14df2b1-dea0-4110-ad1d-fce7149ed2af'), 'user_id': UUID('efd97175-e187-4ce7-9a4a-286992943857'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTQxMjYsInN1YiI6ImFkbWluIn0.4uJpMd7OU1ia9E4qZW4fUcuH3tWfwpj8yOkhcLKLD08', 'access_expire_time': datetime.datetime(2023, 4, 6, 20, 48, 46, 629528), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5ODY2MjYsInN1YiI6ImFkbWluIn0.UqBJ7WiWQb1FWNGKaU6sh3xc3ODFNUh88epm5IrDgc8', 'refresh_expire_time': datetime.datetime(2023, 4, 8, 20, 43, 46, 629693), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 6, 20, 43, 46, 633226), 'updated_at': datetime.datetime(2023, 4, 6, 20, 43, 46, 633231)}
[2023-04-06 22:43:49 +0200] [29417] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-06 22:43:49 +0200] [29417] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 22:43:49 +0200] [29417] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-06 22:43:49 +0200] [29417] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 22:43:49 +0200] [29417] [INFO] [services.student_service] StudentService: Create students
[2023-04-06 22:43:49 +0200] [29417] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_9', second_name=None, last_name='student_9', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-06 22:43:49 +0200] [29417] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_9' second_name=None last_name='student_9' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-06 22:43:49 +0200] [29417] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-06 22:43:49 +0200] [29417] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_9', 'second_name': None, 'last_name': 'student_9', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-06 22:43:50 +0200] [29417] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 22:43:50 +0200] [29417] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_9', second_name=None, last_name='student_9', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='Hc60JnsrOCIsAQ')]
[2023-04-06 22:43:50 +0200] [29417] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-06 22:43:50 +0200] [29417] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_9', second_name=None, last_name='student_9', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='Hc60JnsrOCIsAQ')]
[2023-04-06 22:43:50 +0200] [29417] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('2420fa20-b45e-4e20-96a3-fd017c5eda49'), 'registration_token': 'Hc60JnsrOCIsAQ', 'registered_user': False, 'first_name': 'student_9', 'second_name': None, 'last_name': 'student_9', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 6, 20, 43, 50, 661608), 'updated_at': datetime.datetime(2023, 4, 6, 20, 43, 50, 661613), 'deleted_at': None}]
[2023-04-06 22:43:50 +0200] [29417] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7f4f250fe700>]
[2023-04-06 22:44:19 +0200] [29417] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 22:44:19 +0200] [29417] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': '113111'}
[2023-04-06 22:44:19 +0200] [29417] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 22:44:19 +0200] [29417] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 22:44:19 +0200] [29417] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'us4er2115ssd611@user'}
[2023-04-06 22:44:19 +0200] [29417] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 22:44:19 +0200] [29417] [INFO] [services.student_service] StudentService: Get student by parameters: {'first_name': 'student_9', 'second_name': None, 'last_name': 'student_9', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 22:44:19 +0200] [29417] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by parameters
[2023-04-06 22:44:19 +0200] [29417] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: params: {'first_name': 'student_9', 'second_name': None, 'last_name': 'student_9', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 22:44:19 +0200] [29417] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 22:44:27 +0200] [29417] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 22:44:27 +0200] [29417] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': '113111'}
[2023-04-06 22:44:27 +0200] [29417] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 22:44:27 +0200] [29417] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 22:44:27 +0200] [29417] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'us4er2115ssd611@user'}
[2023-04-06 22:44:27 +0200] [29417] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 22:44:27 +0200] [29417] [INFO] [services.student_service] StudentService: Get student by parameters: {'first_name': 'student_9', 'second_name': None, 'last_name': 'student_9', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 22:44:27 +0200] [29417] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by parameters
[2023-04-06 22:44:27 +0200] [29417] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: params: {'first_name': 'student_9', 'second_name': None, 'last_name': 'student_9', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 22:44:27 +0200] [29417] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 22:44:28 +0200] [29417] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-06 22:44:28 +0200] [29417] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='student' login='113111' password='$2b$12$FliVHhXc7hU6vPeIpkmHauw4wOXPevZgd5RTmUE3z2wXNZpfH2NEu' email='us4er2115ssd611@user' id=UUID('2420fa20-b45e-4e20-96a3-fd017c5eda49')
[2023-04-06 22:44:28 +0200] [29417] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('2420fa20-b45e-4e20-96a3-fd017c5eda49'), 'login': '113111', 'email': 'us4er2115ssd611@user', 'password': '$2b$12$FliVHhXc7hU6vPeIpkmHauw4wOXPevZgd5RTmUE3z2wXNZpfH2NEu', 'role': 'student', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 6, 20, 44, 28, 173010), 'updated_at': datetime.datetime(2023, 4, 6, 20, 44, 28, 173014)}
[2023-04-06 22:44:28 +0200] [29417] [INFO] [services.student_service] StudentService: Set student registered_user field
[2023-04-06 22:44:28 +0200] [29417] [TRACE] [services.student_service] StudentService: Patch student with id: 2420fa20-b45e-4e20-96a3-fd017c5eda49 - set registered_user: True
[2023-04-06 22:44:28 +0200] [29417] [INFO] [db.dao.base_dao] StudentModel DAO: Update db entry
[2023-04-06 22:44:28 +0200] [29417] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for update: item_id: 2420fa20-b45e-4e20-96a3-fd017c5eda49, patch_data: registered_user=True
[2023-04-06 22:44:28 +0200] [29417] [DEBUG] [db.dao.base_dao] StudentModel DAO: Received updated entry from the database
[2023-04-06 22:44:50 +0200] [29417] [INFO] [services.auth_service] AuthService: Login user
[2023-04-06 22:44:50 +0200] [29417] [TRACE] [services.auth_service] AuthService: Login user: 113111
[2023-04-06 22:44:50 +0200] [29417] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 22:44:50 +0200] [29417] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': '113111'}
[2023-04-06 22:44:50 +0200] [29417] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 22:44:50 +0200] [29417] [INFO] [services.auth_service] AuthService: Create session
[2023-04-06 22:44:50 +0200] [29417] [TRACE] [services.auth_service] AuthService: Create session with user: 2420fa20-b45e-4e20-96a3-fd017c5eda49
[2023-04-06 22:44:50 +0200] [29417] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-06 22:44:50 +0200] [29417] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('2420fa20-b45e-4e20-96a3-fd017c5eda49') login='113111' role='student' access_expire_time=datetime.datetime(2023, 4, 6, 20, 49, 50, 693004) refresh_expire_time=datetime.datetime(2023, 4, 8, 20, 44, 50, 693130) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTQxOTAsInN1YiI6IjExMzExMSJ9.X4ISiO0j9wSEsYCIoWnDA4P2F7A501BmrxqmiHWNySU' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5ODY2OTAsInN1YiI6IjExMzExMSJ9.DSpqUv82fm3UI7-CBmlaoq1V8eALiNkz5dKOe1Mv2bs' blocked=False is_active=True
[2023-04-06 22:44:50 +0200] [29417] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('3fcddb34-8329-4954-9cfb-31b52c1e5754'), 'user_id': UUID('2420fa20-b45e-4e20-96a3-fd017c5eda49'), 'login': '113111', 'role': 'student', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTQxOTAsInN1YiI6IjExMzExMSJ9.X4ISiO0j9wSEsYCIoWnDA4P2F7A501BmrxqmiHWNySU', 'access_expire_time': datetime.datetime(2023, 4, 6, 20, 49, 50, 693004), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5ODY2OTAsInN1YiI6IjExMzExMSJ9.DSpqUv82fm3UI7-CBmlaoq1V8eALiNkz5dKOe1Mv2bs', 'refresh_expire_time': datetime.datetime(2023, 4, 8, 20, 44, 50, 693130), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 6, 20, 44, 50, 694846), 'updated_at': datetime.datetime(2023, 4, 6, 20, 44, 50, 694851)}
[2023-04-06 22:45:28 +0200] [29602] [INFO] [services.auth_service] AuthService: Login user
[2023-04-06 22:45:28 +0200] [29602] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-06 22:45:28 +0200] [29602] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 22:45:28 +0200] [29602] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-06 22:45:28 +0200] [29602] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 22:45:28 +0200] [29602] [INFO] [services.auth_service] AuthService: Create session
[2023-04-06 22:45:28 +0200] [29602] [TRACE] [services.auth_service] AuthService: Create session with user: efd97175-e187-4ce7-9a4a-286992943857
[2023-04-06 22:45:28 +0200] [29602] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-06 22:45:28 +0200] [29602] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('efd97175-e187-4ce7-9a4a-286992943857') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 6, 20, 50, 28, 500861) refresh_expire_time=datetime.datetime(2023, 4, 8, 20, 45, 28, 501029) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTQyMjgsInN1YiI6ImFkbWluIn0.HG-LcO5pLATPP-KrSao2VuNp4fRxfT3uoj5fsemehzE' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5ODY3MjgsInN1YiI6ImFkbWluIn0.Ly1Ixu4_8gqP8vbmbEXNQx3Ao8EJYmWjhqKkkGkU3iY' blocked=False is_active=True
[2023-04-06 22:45:28 +0200] [29602] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('01eb6afc-99a6-4029-8940-80774a7232ef'), 'user_id': UUID('efd97175-e187-4ce7-9a4a-286992943857'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTQyMjgsInN1YiI6ImFkbWluIn0.HG-LcO5pLATPP-KrSao2VuNp4fRxfT3uoj5fsemehzE', 'access_expire_time': datetime.datetime(2023, 4, 6, 20, 50, 28, 500861), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5ODY3MjgsInN1YiI6ImFkbWluIn0.Ly1Ixu4_8gqP8vbmbEXNQx3Ao8EJYmWjhqKkkGkU3iY', 'refresh_expire_time': datetime.datetime(2023, 4, 8, 20, 45, 28, 501029), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 6, 20, 45, 28, 504431), 'updated_at': datetime.datetime(2023, 4, 6, 20, 45, 28, 504435)}
[2023-04-06 22:49:22 +0200] [29735] [INFO] [services.auth_service] AuthService: Login user
[2023-04-06 22:49:22 +0200] [29735] [TRACE] [services.auth_service] AuthService: Login user: 113111
[2023-04-06 22:49:22 +0200] [29735] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 22:49:22 +0200] [29735] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': '113111'}
[2023-04-06 22:49:22 +0200] [29735] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 22:49:23 +0200] [29735] [INFO] [services.auth_service] AuthService: Create session
[2023-04-06 22:49:23 +0200] [29735] [TRACE] [services.auth_service] AuthService: Create session with user: 2420fa20-b45e-4e20-96a3-fd017c5eda49
[2023-04-06 22:49:23 +0200] [29735] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-06 22:49:23 +0200] [29735] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('2420fa20-b45e-4e20-96a3-fd017c5eda49') login='113111' role='student' access_expire_time=datetime.datetime(2023, 4, 6, 20, 54, 23, 77682) refresh_expire_time=datetime.datetime(2023, 4, 8, 20, 49, 23, 77850) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTQ0NjMsInN1YiI6IjExMzExMSJ9.p9_XqW_VwFf7ixC0wbskxjc-8aYXU92mymsy5b_sgSM' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5ODY5NjMsInN1YiI6IjExMzExMSJ9.Z04hn6l6ckc26Ia8cNglHf-GrJS1fHOodHaWL_-dfoo' blocked=False is_active=True
[2023-04-06 22:49:23 +0200] [29735] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('42c0185d-d5fa-432b-9bf7-fe45d32a0148'), 'user_id': UUID('2420fa20-b45e-4e20-96a3-fd017c5eda49'), 'login': '113111', 'role': 'student', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTQ0NjMsInN1YiI6IjExMzExMSJ9.p9_XqW_VwFf7ixC0wbskxjc-8aYXU92mymsy5b_sgSM', 'access_expire_time': datetime.datetime(2023, 4, 6, 20, 54, 23, 77682), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5ODY5NjMsInN1YiI6IjExMzExMSJ9.Z04hn6l6ckc26Ia8cNglHf-GrJS1fHOodHaWL_-dfoo', 'refresh_expire_time': datetime.datetime(2023, 4, 8, 20, 49, 23, 77850), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 6, 20, 49, 23, 81119), 'updated_at': datetime.datetime(2023, 4, 6, 20, 49, 23, 81123)}
[2023-04-06 22:49:31 +0200] [29735] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-06 22:49:31 +0200] [29735] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 22:49:31 +0200] [29735] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': '113111'}
[2023-04-06 22:49:31 +0200] [29735] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 22:49:31 +0200] [29735] [ERROR] [utils.rights_restriction] 
NoneType: None
[2023-04-06 22:49:47 +0200] [29735] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-06 22:49:47 +0200] [29735] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 22:49:47 +0200] [29735] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': '113111'}
[2023-04-06 22:49:47 +0200] [29735] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 22:49:47 +0200] [29735] [INFO] [services.student_service] StudentService: Get student by id: 2420fa20-b45e-4e20-96a3-fd017c5eda49
[2023-04-06 22:49:47 +0200] [29735] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by id: 2420fa20-b45e-4e20-96a3-fd017c5eda49
[2023-04-06 22:49:48 +0200] [29735] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 22:50:02 +0200] [29735] [INFO] [services.auth_service] AuthService: Login user
[2023-04-06 22:50:02 +0200] [29735] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-06 22:50:02 +0200] [29735] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 22:50:02 +0200] [29735] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-06 22:50:02 +0200] [29735] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 22:50:02 +0200] [29735] [INFO] [services.auth_service] AuthService: Create session
[2023-04-06 22:50:02 +0200] [29735] [TRACE] [services.auth_service] AuthService: Create session with user: efd97175-e187-4ce7-9a4a-286992943857
[2023-04-06 22:50:02 +0200] [29735] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-06 22:50:02 +0200] [29735] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('efd97175-e187-4ce7-9a4a-286992943857') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 6, 20, 55, 2, 552991) refresh_expire_time=datetime.datetime(2023, 4, 8, 20, 50, 2, 553138) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTQ1MDIsInN1YiI6ImFkbWluIn0.NKJMvS2hyHwJKwhYi9PG18WbcPfliBUzXxMwAzGBt6g' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5ODcwMDIsInN1YiI6ImFkbWluIn0.Y0QJa3YMMzVgbXwhjpB64zWXnQvVvrdTIke0fuw4SBc' blocked=False is_active=True
[2023-04-06 22:50:02 +0200] [29735] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('95681ca1-47b8-4781-81ef-3395888786dc'), 'user_id': UUID('efd97175-e187-4ce7-9a4a-286992943857'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTQ1MDIsInN1YiI6ImFkbWluIn0.NKJMvS2hyHwJKwhYi9PG18WbcPfliBUzXxMwAzGBt6g', 'access_expire_time': datetime.datetime(2023, 4, 6, 20, 55, 2, 552991), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5ODcwMDIsInN1YiI6ImFkbWluIn0.Y0QJa3YMMzVgbXwhjpB64zWXnQvVvrdTIke0fuw4SBc', 'refresh_expire_time': datetime.datetime(2023, 4, 8, 20, 50, 2, 553138), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 6, 20, 50, 2, 555099), 'updated_at': datetime.datetime(2023, 4, 6, 20, 50, 2, 555103)}
[2023-04-06 22:50:05 +0200] [29735] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-06 22:50:05 +0200] [29735] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 22:50:05 +0200] [29735] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-06 22:50:05 +0200] [29735] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 22:50:05 +0200] [29735] [ERROR] [utils.rights_restriction] 
NoneType: None
[2023-04-06 22:50:09 +0200] [29735] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-06 22:50:09 +0200] [29735] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 22:50:09 +0200] [29735] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-06 22:50:09 +0200] [29735] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 22:50:09 +0200] [29735] [ERROR] [utils.rights_restriction] 
NoneType: None
[2023-04-06 23:24:06 +0200] [31450] [INFO] [services.auth_service] AuthService: Login user
[2023-04-06 23:24:06 +0200] [31450] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-06 23:24:06 +0200] [31450] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 23:24:06 +0200] [31450] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-06 23:24:06 +0200] [31450] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 23:24:06 +0200] [31450] [INFO] [services.auth_service] AuthService: Create session
[2023-04-06 23:24:06 +0200] [31450] [TRACE] [services.auth_service] AuthService: Create session with user: efd97175-e187-4ce7-9a4a-286992943857
[2023-04-06 23:24:06 +0200] [31450] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-06 23:24:06 +0200] [31450] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('efd97175-e187-4ce7-9a4a-286992943857') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 6, 21, 29, 6, 480849) refresh_expire_time=datetime.datetime(2023, 4, 8, 21, 24, 6, 481013) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTY1NDYsInN1YiI6ImFkbWluIn0.PKb-pun3Hf6cp6JWAPKrqvkeA-RrTe2OAc9DeDUNBrY' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5ODkwNDYsInN1YiI6ImFkbWluIn0.5EedEM8zE0c_PhoQ0cDmj-GGeZk-mscteKZpyIGPLUs' blocked=False is_active=True
[2023-04-06 23:24:06 +0200] [31450] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('d15138d8-f7b0-4a3a-a02a-45ff3799f82e'), 'user_id': UUID('efd97175-e187-4ce7-9a4a-286992943857'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTY1NDYsInN1YiI6ImFkbWluIn0.PKb-pun3Hf6cp6JWAPKrqvkeA-RrTe2OAc9DeDUNBrY', 'access_expire_time': datetime.datetime(2023, 4, 6, 21, 29, 6, 480849), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5ODkwNDYsInN1YiI6ImFkbWluIn0.5EedEM8zE0c_PhoQ0cDmj-GGeZk-mscteKZpyIGPLUs', 'refresh_expire_time': datetime.datetime(2023, 4, 8, 21, 24, 6, 481013), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 6, 21, 24, 6, 484050), 'updated_at': datetime.datetime(2023, 4, 6, 21, 24, 6, 484053)}
[2023-04-06 23:24:10 +0200] [31450] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-06 23:24:10 +0200] [31450] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 23:24:10 +0200] [31450] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-06 23:24:10 +0200] [31450] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 23:24:10 +0200] [31450] [ERROR] [utils.rights_restriction] 
NoneType: None
[2023-04-06 23:34:06 +0200] [32162] [INFO] [services.auth_service] AuthService: Login user
[2023-04-06 23:34:06 +0200] [32162] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-06 23:34:06 +0200] [32162] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 23:34:06 +0200] [32162] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-06 23:34:06 +0200] [32162] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 23:34:06 +0200] [32162] [INFO] [services.auth_service] AuthService: Create session
[2023-04-06 23:34:06 +0200] [32162] [TRACE] [services.auth_service] AuthService: Create session with user: efd97175-e187-4ce7-9a4a-286992943857
[2023-04-06 23:34:06 +0200] [32162] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-06 23:34:06 +0200] [32162] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('efd97175-e187-4ce7-9a4a-286992943857') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 6, 21, 39, 6, 378811) refresh_expire_time=datetime.datetime(2023, 4, 8, 21, 34, 6, 378959) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTcxNDYsInN1YiI6ImFkbWluIn0.s03G13tQ9LmxAK6AgBku5y-IUJsutB-xS28nas2XOFw' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5ODk2NDYsInN1YiI6ImFkbWluIn0.NDjI43RPFtmS0QErIJnpTNfix4bxi-l5ZuOU96fGi3A' blocked=False is_active=True
[2023-04-06 23:34:06 +0200] [32162] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('bf61454d-3850-4aeb-b4e1-e1c8d72ce47f'), 'user_id': UUID('efd97175-e187-4ce7-9a4a-286992943857'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTcxNDYsInN1YiI6ImFkbWluIn0.s03G13tQ9LmxAK6AgBku5y-IUJsutB-xS28nas2XOFw', 'access_expire_time': datetime.datetime(2023, 4, 6, 21, 39, 6, 378811), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5ODk2NDYsInN1YiI6ImFkbWluIn0.NDjI43RPFtmS0QErIJnpTNfix4bxi-l5ZuOU96fGi3A', 'refresh_expire_time': datetime.datetime(2023, 4, 8, 21, 34, 6, 378959), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 6, 21, 34, 6, 381968), 'updated_at': datetime.datetime(2023, 4, 6, 21, 34, 6, 381973)}
[2023-04-06 23:34:08 +0200] [32162] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-06 23:34:08 +0200] [32162] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 23:34:08 +0200] [32162] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-06 23:34:08 +0200] [32162] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 23:43:34 +0200] [32711] [INFO] [services.auth_service] AuthService: Login user
[2023-04-06 23:43:34 +0200] [32711] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-06 23:43:34 +0200] [32711] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 23:43:34 +0200] [32711] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-06 23:43:34 +0200] [32711] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 23:43:35 +0200] [32711] [INFO] [services.auth_service] AuthService: Create session
[2023-04-06 23:43:35 +0200] [32711] [TRACE] [services.auth_service] AuthService: Create session with user: efd97175-e187-4ce7-9a4a-286992943857
[2023-04-06 23:43:35 +0200] [32711] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-06 23:43:35 +0200] [32711] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('efd97175-e187-4ce7-9a4a-286992943857') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 6, 21, 48, 35, 119201) refresh_expire_time=datetime.datetime(2023, 4, 8, 21, 43, 35, 119362) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTc3MTUsInN1YiI6ImFkbWluIn0.Vml-Rl2tme0CDZTnM-h8gSrAUIZcfvYcb956o1Gee9k' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5OTAyMTUsInN1YiI6ImFkbWluIn0.9lgGyU4Uj_TYIL8UcHbDztmffiB8BYFM5W5wqGtFmBU' blocked=False is_active=True
[2023-04-06 23:43:35 +0200] [32711] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('59a1cb48-2ea5-4016-9dd2-71df0ec2ebc6'), 'user_id': UUID('efd97175-e187-4ce7-9a4a-286992943857'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTc3MTUsInN1YiI6ImFkbWluIn0.Vml-Rl2tme0CDZTnM-h8gSrAUIZcfvYcb956o1Gee9k', 'access_expire_time': datetime.datetime(2023, 4, 6, 21, 48, 35, 119201), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5OTAyMTUsInN1YiI6ImFkbWluIn0.9lgGyU4Uj_TYIL8UcHbDztmffiB8BYFM5W5wqGtFmBU', 'refresh_expire_time': datetime.datetime(2023, 4, 8, 21, 43, 35, 119362), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 6, 21, 43, 35, 122808), 'updated_at': datetime.datetime(2023, 4, 6, 21, 43, 35, 122812)}
[2023-04-06 23:43:37 +0200] [32711] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-06 23:43:37 +0200] [32711] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 23:43:37 +0200] [32711] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-06 23:43:37 +0200] [32711] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 23:43:37 +0200] [32711] [INFO] [services.student_service] StudentService: Get student by id: 2420fa20-b45e-4e20-96a3-fd017c5eda49
[2023-04-06 23:43:37 +0200] [32711] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by id: 2420fa20-b45e-4e20-96a3-fd017c5eda49
[2023-04-06 23:43:38 +0200] [32711] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 23:43:58 +0200] [32711] [INFO] [services.auth_service] AuthService: Login user
[2023-04-06 23:43:58 +0200] [32711] [TRACE] [services.auth_service] AuthService: Login user: 113111
[2023-04-06 23:43:58 +0200] [32711] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 23:43:58 +0200] [32711] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': '113111'}
[2023-04-06 23:43:58 +0200] [32711] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 23:43:58 +0200] [32711] [INFO] [services.auth_service] AuthService: Create session
[2023-04-06 23:43:58 +0200] [32711] [TRACE] [services.auth_service] AuthService: Create session with user: 2420fa20-b45e-4e20-96a3-fd017c5eda49
[2023-04-06 23:43:58 +0200] [32711] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-06 23:43:58 +0200] [32711] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('2420fa20-b45e-4e20-96a3-fd017c5eda49') login='113111' role='student' access_expire_time=datetime.datetime(2023, 4, 6, 21, 48, 58, 819268) refresh_expire_time=datetime.datetime(2023, 4, 8, 21, 43, 58, 819413) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTc3MzgsInN1YiI6IjExMzExMSJ9.4NF5o8bYn9CV6mUmX6n138KCFRndhPsHB07qLYsbO9o' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5OTAyMzgsInN1YiI6IjExMzExMSJ9.UMwHfon-mi-WlQ6MZ7FYfyRhMChZDLSF4OYt6CM089A' blocked=False is_active=True
[2023-04-06 23:43:58 +0200] [32711] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('10bd10b3-40fe-4984-9522-85dbe04804fc'), 'user_id': UUID('2420fa20-b45e-4e20-96a3-fd017c5eda49'), 'login': '113111', 'role': 'student', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTc3MzgsInN1YiI6IjExMzExMSJ9.4NF5o8bYn9CV6mUmX6n138KCFRndhPsHB07qLYsbO9o', 'access_expire_time': datetime.datetime(2023, 4, 6, 21, 48, 58, 819268), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5OTAyMzgsInN1YiI6IjExMzExMSJ9.UMwHfon-mi-WlQ6MZ7FYfyRhMChZDLSF4OYt6CM089A', 'refresh_expire_time': datetime.datetime(2023, 4, 8, 21, 43, 58, 819413), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 6, 21, 43, 58, 821341), 'updated_at': datetime.datetime(2023, 4, 6, 21, 43, 58, 821345)}
[2023-04-06 23:44:02 +0200] [32711] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-06 23:44:02 +0200] [32711] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 23:44:02 +0200] [32711] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': '113111'}
[2023-04-06 23:44:02 +0200] [32711] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 23:44:02 +0200] [32711] [INFO] [services.student_service] StudentService: Get student by id: 2420fa20-b45e-4e20-96a3-fd017c5eda49
[2023-04-06 23:44:02 +0200] [32711] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by id: 2420fa20-b45e-4e20-96a3-fd017c5eda49
[2023-04-06 23:44:02 +0200] [32711] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-06 23:45:17 +0200] [32711] [INFO] [services.auth_service] AuthService: Login user
[2023-04-06 23:45:17 +0200] [32711] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-06 23:45:17 +0200] [32711] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 23:45:17 +0200] [32711] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-06 23:45:17 +0200] [32711] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 23:45:17 +0200] [32711] [INFO] [services.auth_service] AuthService: Create session
[2023-04-06 23:45:17 +0200] [32711] [TRACE] [services.auth_service] AuthService: Create session with user: efd97175-e187-4ce7-9a4a-286992943857
[2023-04-06 23:45:17 +0200] [32711] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-06 23:45:17 +0200] [32711] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('efd97175-e187-4ce7-9a4a-286992943857') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 6, 21, 50, 17, 633751) refresh_expire_time=datetime.datetime(2023, 4, 8, 21, 45, 17, 633884) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTc4MTcsInN1YiI6ImFkbWluIn0.0w4m5xONlkRviTWuZF0nMGtN_oqTFe8Pa1pMOzba3KA' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5OTAzMTcsInN1YiI6ImFkbWluIn0.-QThqTBwqQBG5XK_JIt81FjhDmiv6olUx-k9BSMKgVk' blocked=False is_active=True
[2023-04-06 23:45:17 +0200] [32711] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('cf61f24e-db06-4061-94f3-ff25378c572e'), 'user_id': UUID('efd97175-e187-4ce7-9a4a-286992943857'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTc4MTcsInN1YiI6ImFkbWluIn0.0w4m5xONlkRviTWuZF0nMGtN_oqTFe8Pa1pMOzba3KA', 'access_expire_time': datetime.datetime(2023, 4, 6, 21, 50, 17, 633751), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA5OTAzMTcsInN1YiI6ImFkbWluIn0.-QThqTBwqQBG5XK_JIt81FjhDmiv6olUx-k9BSMKgVk', 'refresh_expire_time': datetime.datetime(2023, 4, 8, 21, 45, 17, 633884), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 6, 21, 45, 17, 635831), 'updated_at': datetime.datetime(2023, 4, 6, 21, 45, 17, 635836)}
[2023-04-06 23:45:26 +0200] [32711] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-06 23:45:26 +0200] [32711] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 23:45:26 +0200] [32711] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-06 23:45:26 +0200] [32711] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 23:45:26 +0200] [32711] [INFO] [services.teacher_service] TeacherService: Create teachers
[2023-04-06 23:45:26 +0200] [32711] [TRACE] [services.teacher_service] TeacherService: Register teachers with passed data [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date='28-02-2002'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date='28-02-2002')]
[2023-04-06 23:45:26 +0200] [32711] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string1' second_name='string1' last_name='string' birth_date='28-02-2002'
[2023-04-06 23:45:26 +0200] [32711] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-06 23:45:26 +0200] [32711] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 23:45:26 +0200] [32711] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-06 23:45:26 +0200] [32711] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string3' second_name=None last_name='string3' birth_date='28-02-2002'
[2023-04-06 23:45:26 +0200] [32711] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-06 23:45:26 +0200] [32711] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-06 23:45:26 +0200] [32711] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-06 23:45:26 +0200] [32711] [DEBUG] [services.teacher_service] TeacherService: Teachers to be registered after check: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='NCCpHGCx3PcM6g'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='T-vp-iSLwh5a9w')]
[2023-04-06 23:45:26 +0200] [32711] [INFO] [db.dao.base_dao] TeacherModel DAO: Create db entry
[2023-04-06 23:45:26 +0200] [32711] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed for creation: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='NCCpHGCx3PcM6g'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='T-vp-iSLwh5a9w')]
[2023-04-06 23:45:27 +0200] [32711] [DEBUG] [db.dao.base_dao] TeacherModel DAO: Created entries in database: [{'id': UUID('45634967-3520-4d7f-8f44-733860376860'), 'registration_token': 'NCCpHGCx3PcM6g', 'registered_user': False, 'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 6, 21, 45, 26, 438753), 'updated_at': datetime.datetime(2023, 4, 6, 21, 45, 26, 438759), 'deleted_at': None}, {'id': UUID('46dbf241-a0a0-4b59-a446-f2a240737d25'), 'registration_token': 'T-vp-iSLwh5a9w', 'registered_user': False, 'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 6, 21, 45, 27, 628348), 'updated_at': datetime.datetime(2023, 4, 6, 21, 45, 27, 628353), 'deleted_at': None}]
[2023-04-06 23:45:27 +0200] [32711] [DEBUG] [services.teacher_service] TeacherService: Received the answer from database: [<db.models.TeacherModel.TeacherModel object at 0x7fae06101e80>, <db.models.TeacherModel.TeacherModel object at 0x7fae060a1ee0>]
[2023-04-06 23:46:26 +0200] [32711] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 23:46:26 +0200] [32711] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': '111'}
[2023-04-06 23:46:26 +0200] [32711] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-06 23:46:26 +0200] [32711] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-06 23:46:26 +0200] [32711] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'us4e11r2115ssd611@user'}
[2023-04-06 23:46:26 +0200] [32711] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 12:39:08 +0200] [7481] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 12:39:08 +0200] [7481] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 12:39:08 +0200] [7481] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 12:39:08 +0200] [7481] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 12:39:08 +0200] [7481] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 12:39:08 +0200] [7481] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 12:39:08 +0200] [7481] [TRACE] [services.auth_service] AuthService: Create session with user: efd97175-e187-4ce7-9a4a-286992943857
[2023-04-07 12:39:08 +0200] [7481] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 12:39:08 +0200] [7481] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('efd97175-e187-4ce7-9a4a-286992943857') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 7, 10, 44, 8, 798747) refresh_expire_time=datetime.datetime(2023, 4, 9, 10, 39, 8, 798940) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NjQyNDgsInN1YiI6ImFkbWluIn0.zovZlo6CVeic-RgjtyQJHGDc62ytihJB0BkMk9T60ms' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwMzY3NDgsInN1YiI6ImFkbWluIn0.Y1VnDXbizq-cBmZStZe7Rcg3fJNCGHfqrJLPf36wG5s' blocked=False is_active=True
[2023-04-07 12:39:08 +0200] [7481] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('9eb1827b-23d4-45a5-b2f9-f5de0adc4e9d'), 'user_id': UUID('efd97175-e187-4ce7-9a4a-286992943857'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NjQyNDgsInN1YiI6ImFkbWluIn0.zovZlo6CVeic-RgjtyQJHGDc62ytihJB0BkMk9T60ms', 'access_expire_time': datetime.datetime(2023, 4, 7, 10, 44, 8, 798747), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwMzY3NDgsInN1YiI6ImFkbWluIn0.Y1VnDXbizq-cBmZStZe7Rcg3fJNCGHfqrJLPf36wG5s', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 10, 39, 8, 798940), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 10, 39, 8, 802136), 'updated_at': datetime.datetime(2023, 4, 7, 10, 39, 8, 802141)}
[2023-04-07 12:39:44 +0200] [7481] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 12:39:44 +0200] [7481] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 12:39:44 +0200] [7481] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 12:39:44 +0200] [7481] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 12:39:44 +0200] [7481] [INFO] [services.student_service] StudentService: Get student by id: 2420fa20-b45e-4e20-96a3-fd017c5eda49
[2023-04-07 12:39:44 +0200] [7481] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by id: 2420fa20-b45e-4e20-96a3-fd017c5eda49
[2023-04-07 12:39:45 +0200] [7481] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-07 12:40:03 +0200] [7481] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 12:40:03 +0200] [7481] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 12:40:03 +0200] [7481] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 12:40:03 +0200] [7481] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 12:40:03 +0200] [7481] [INFO] [services.user_service] UserService: Get student by id: 2420fa20-b45e-4e20-96a3-fd017c5eda49
[2023-04-07 12:40:03 +0200] [7481] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by id: 2420fa20-b45e-4e20-96a3-fd017c5eda49
[2023-04-07 12:40:03 +0200] [7481] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 12:40:19 +0200] [7481] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 12:40:19 +0200] [7481] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 12:40:19 +0200] [7481] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 12:40:19 +0200] [7481] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 12:40:19 +0200] [7481] [INFO] [services.user_service] UserService: Get student by id: 2420fa20-b45e-4e20-96a3-fd017c5eda
[2023-04-07 12:40:19 +0200] [7481] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by id: 2420fa20-b45e-4e20-96a3-fd017c5eda
[2023-04-07 12:43:24 +0200] [7758] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 12:43:24 +0200] [7758] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 12:43:24 +0200] [7758] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 12:43:24 +0200] [7758] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 12:43:24 +0200] [7758] [INFO] [services.user_service] UserService: Get student by id: 2420fa20-b45e-4e20-96a3-fd017c5eda
[2023-04-07 12:43:24 +0200] [7758] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by id: 2420fa20-b45e-4e20-96a3-fd017c5eda
[2023-04-07 12:45:05 +0200] [7864] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 12:45:10 +0200] [7864] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 12:45:10 +0200] [7864] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 12:45:10 +0200] [7864] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 12:45:10 +0200] [7864] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 12:45:10 +0200] [7864] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 12:45:10 +0200] [7864] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 12:45:10 +0200] [7864] [TRACE] [services.auth_service] AuthService: Create session with user: efd97175-e187-4ce7-9a4a-286992943857
[2023-04-07 12:45:10 +0200] [7864] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 12:45:10 +0200] [7864] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('efd97175-e187-4ce7-9a4a-286992943857') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 7, 10, 50, 10, 960866) refresh_expire_time=datetime.datetime(2023, 4, 9, 10, 45, 10, 961010) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NjQ2MTAsInN1YiI6ImFkbWluIn0.aWDRXZSZKb2q0f7LGaRDHvYO_zSrYJjt4__0d4BA6TY' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwMzcxMTAsInN1YiI6ImFkbWluIn0.pokZznz6yxD4Rhhrmb8jW1fRy3tSaTjLa5e8HcezqAM' blocked=False is_active=True
[2023-04-07 12:45:10 +0200] [7864] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('4fa25503-9ce2-4020-9272-624c46724b19'), 'user_id': UUID('efd97175-e187-4ce7-9a4a-286992943857'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NjQ2MTAsInN1YiI6ImFkbWluIn0.aWDRXZSZKb2q0f7LGaRDHvYO_zSrYJjt4__0d4BA6TY', 'access_expire_time': datetime.datetime(2023, 4, 7, 10, 50, 10, 960866), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwMzcxMTAsInN1YiI6ImFkbWluIn0.pokZznz6yxD4Rhhrmb8jW1fRy3tSaTjLa5e8HcezqAM', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 10, 45, 10, 961010), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 10, 45, 10, 963878), 'updated_at': datetime.datetime(2023, 4, 7, 10, 45, 10, 963882)}
[2023-04-07 12:45:13 +0200] [7864] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 12:45:13 +0200] [7864] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 12:45:13 +0200] [7864] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 12:45:13 +0200] [7864] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 12:45:13 +0200] [7864] [INFO] [services.user_service] UserService: Get student by id: 2420fa20-b45e-4e20-96a3-fd017c5eda
[2023-04-07 12:45:13 +0200] [7864] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by id: 2420fa20-b45e-4e20-96a3-fd017c5eda
[2023-04-07 12:54:37 +0200] [8320] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 12:54:37 +0200] [8320] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 12:54:37 +0200] [8320] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 12:54:37 +0200] [8320] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 12:54:37 +0200] [8320] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 12:54:37 +0200] [8320] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 12:54:38 +0200] [8320] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 12:54:38 +0200] [8320] [TRACE] [services.auth_service] AuthService: Create session with user: efd97175-e187-4ce7-9a4a-286992943857
[2023-04-07 12:54:38 +0200] [8320] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 12:54:38 +0200] [8320] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('efd97175-e187-4ce7-9a4a-286992943857') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 7, 10, 59, 38, 62819) refresh_expire_time=datetime.datetime(2023, 4, 9, 10, 54, 38, 62962) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NjUxNzgsInN1YiI6ImFkbWluIn0.LpchRJZoV5slPbtTWFdheMfkraDPNStLdCEbXTbMwtY' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwMzc2NzgsInN1YiI6ImFkbWluIn0.3cAqV6LTsOTk1IteVN4f7XyRp9tr9_Betei0ydfxFBw' blocked=False is_active=True
[2023-04-07 12:54:38 +0200] [8320] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('2354894f-12d7-4899-b575-2b571ba528fd'), 'user_id': UUID('efd97175-e187-4ce7-9a4a-286992943857'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NjUxNzgsInN1YiI6ImFkbWluIn0.LpchRJZoV5slPbtTWFdheMfkraDPNStLdCEbXTbMwtY', 'access_expire_time': datetime.datetime(2023, 4, 7, 10, 59, 38, 62819), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwMzc2NzgsInN1YiI6ImFkbWluIn0.3cAqV6LTsOTk1IteVN4f7XyRp9tr9_Betei0ydfxFBw', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 10, 54, 38, 62962), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 10, 54, 38, 66033), 'updated_at': datetime.datetime(2023, 4, 7, 10, 54, 38, 66037)}
[2023-04-07 12:54:40 +0200] [8320] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 12:54:40 +0200] [8320] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 12:54:40 +0200] [8320] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 12:54:40 +0200] [8320] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 12:54:40 +0200] [8320] [ERROR] [utils.rights_restriction] 
NoneType: None
[2023-04-07 12:55:04 +0200] [8320] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 12:55:04 +0200] [8320] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 12:55:04 +0200] [8320] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 12:55:04 +0200] [8320] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 12:55:04 +0200] [8320] [INFO] [services.user_service] UserService: Update user profile
[2023-04-07 12:55:04 +0200] [8320] [INFO] [services.user_service] UserService: Update user: efd97175-e187-4ce7-9a4a-286992943857 with following data: email='string'
[2023-04-07 12:55:04 +0200] [8320] [INFO] [db.dao.base_dao] UserModel DAO: Update db entry
[2023-04-07 12:55:04 +0200] [8320] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for update: item_id: efd97175-e187-4ce7-9a4a-286992943857, patch_data: email='string'
[2023-04-07 12:55:04 +0200] [8320] [DEBUG] [db.dao.base_dao] UserModel DAO: Received updated entry from the database
[2023-04-07 12:57:13 +0200] [8320] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 12:57:13 +0200] [8320] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 12:57:13 +0200] [8320] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 12:57:13 +0200] [8320] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 12:57:13 +0200] [8320] [ERROR] [utils.rights_restriction] 
NoneType: None
[2023-04-07 12:57:35 +0200] [8320] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 12:57:35 +0200] [8320] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 12:57:35 +0200] [8320] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 12:57:35 +0200] [8320] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 12:57:35 +0200] [8320] [INFO] [services.user_service] UserService: Update user profile
[2023-04-07 12:57:35 +0200] [8320] [INFO] [services.user_service] UserService: Update user: efd97175-e187-4ce7-9a4a-286992943857 with following data: email='string'
[2023-04-07 12:57:35 +0200] [8320] [INFO] [db.dao.base_dao] UserModel DAO: Update db entry
[2023-04-07 12:57:35 +0200] [8320] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for update: item_id: efd97175-e187-4ce7-9a4a-286992943857, patch_data: email='string'
[2023-04-07 12:57:35 +0200] [8320] [DEBUG] [db.dao.base_dao] UserModel DAO: Received updated entry from the database
[2023-04-07 13:08:22 +0200] [8756] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 13:08:22 +0200] [8756] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 13:08:22 +0200] [8756] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:08:22 +0200] [8756] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 13:08:22 +0200] [8756] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:08:23 +0200] [8756] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 13:08:23 +0200] [8756] [TRACE] [services.auth_service] AuthService: Create session with user: efd97175-e187-4ce7-9a4a-286992943857
[2023-04-07 13:08:23 +0200] [8756] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 13:08:23 +0200] [8756] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('efd97175-e187-4ce7-9a4a-286992943857') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 7, 11, 13, 23, 47291) refresh_expire_time=datetime.datetime(2023, 4, 9, 11, 8, 23, 47451) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NjYwMDMsInN1YiI6ImFkbWluIn0.2C5GBA54BZkJiqt5Z39kCDuw3NgQFvfOn9ngebIUm8A' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwMzg1MDMsInN1YiI6ImFkbWluIn0.AbypKj9801wr-YIvSFcEcZsdTx9-i3xZEz2W8arcEN4' blocked=False is_active=True
[2023-04-07 13:08:23 +0200] [8756] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('2ff0bd10-ff2e-4b5d-bf05-1a2d8d3e720d'), 'user_id': UUID('efd97175-e187-4ce7-9a4a-286992943857'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NjYwMDMsInN1YiI6ImFkbWluIn0.2C5GBA54BZkJiqt5Z39kCDuw3NgQFvfOn9ngebIUm8A', 'access_expire_time': datetime.datetime(2023, 4, 7, 11, 13, 23, 47291), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwMzg1MDMsInN1YiI6ImFkbWluIn0.AbypKj9801wr-YIvSFcEcZsdTx9-i3xZEz2W8arcEN4', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 11, 8, 23, 47451), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 11, 8, 23, 50621), 'updated_at': datetime.datetime(2023, 4, 7, 11, 8, 23, 50626)}
[2023-04-07 13:08:27 +0200] [8756] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 13:08:27 +0200] [8756] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:08:27 +0200] [8756] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 13:08:27 +0200] [8756] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:08:27 +0200] [8756] [INFO] [services.user_service] UserService: Change user password
[2023-04-07 13:08:27 +0200] [8756] [TRACE] [services.user_service] UserService: Change password for user with id: efd97175-e187-4ce7-9a4a-286992943857
[2023-04-07 13:08:28 +0200] [8756] [INFO] [db.dao.base_dao] UserModel DAO: Update db entry
[2023-04-07 13:08:28 +0200] [8756] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for update: item_id: efd97175-e187-4ce7-9a4a-286992943857, patch_data: password='$2b$12$7CCJ1ZSZTFK0hltOZUEzc.xNWZ6U8YHCKBkX9bSiJvzaqaLGshiKS'
[2023-04-07 13:08:28 +0200] [8756] [DEBUG] [db.dao.base_dao] UserModel DAO: Received updated entry from the database
[2023-04-07 13:08:33 +0200] [8756] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 13:08:33 +0200] [8756] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 13:08:33 +0200] [8756] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:08:33 +0200] [8756] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 13:08:33 +0200] [8756] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:08:44 +0200] [8756] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 13:08:59 +0200] [8756] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 13:08:59 +0200] [8756] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 13:08:59 +0200] [8756] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:08:59 +0200] [8756] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 13:08:59 +0200] [8756] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:08:59 +0200] [8756] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 13:08:59 +0200] [8756] [TRACE] [services.auth_service] AuthService: Create session with user: efd97175-e187-4ce7-9a4a-286992943857
[2023-04-07 13:08:59 +0200] [8756] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 13:08:59 +0200] [8756] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('efd97175-e187-4ce7-9a4a-286992943857') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 7, 11, 13, 59, 800712) refresh_expire_time=datetime.datetime(2023, 4, 9, 11, 8, 59, 800849) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NjYwMzksInN1YiI6ImFkbWluIn0.OmKMO6ApF7iQNnQjHuP1eD_Kgzvd3ji7xFi9N8goehE' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwMzg1MzksInN1YiI6ImFkbWluIn0.l5uEwOdcEjL9bl3PRHMqH0-Q46ZV7UCU4JEBHrSp0jQ' blocked=False is_active=True
[2023-04-07 13:08:59 +0200] [8756] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('cd6edb1d-9425-4f78-b65d-609cd07b22f5'), 'user_id': UUID('efd97175-e187-4ce7-9a4a-286992943857'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NjYwMzksInN1YiI6ImFkbWluIn0.OmKMO6ApF7iQNnQjHuP1eD_Kgzvd3ji7xFi9N8goehE', 'access_expire_time': datetime.datetime(2023, 4, 7, 11, 13, 59, 800712), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwMzg1MzksInN1YiI6ImFkbWluIn0.l5uEwOdcEjL9bl3PRHMqH0-Q46ZV7UCU4JEBHrSp0jQ', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 11, 8, 59, 800849), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 11, 8, 59, 802628), 'updated_at': datetime.datetime(2023, 4, 7, 11, 8, 59, 802632)}
[2023-04-07 13:09:03 +0200] [8756] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 13:09:03 +0200] [8756] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:09:03 +0200] [8756] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 13:09:03 +0200] [8756] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:09:03 +0200] [8756] [INFO] [services.student_service] StudentService: Get student by id: 2420fa20-b45e-4e20-96a3-fd017c5eda49
[2023-04-07 13:09:03 +0200] [8756] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by id: 2420fa20-b45e-4e20-96a3-fd017c5eda49
[2023-04-07 13:09:04 +0200] [8756] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-07 13:09:19 +0200] [8756] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 13:09:19 +0200] [8756] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:09:19 +0200] [8756] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 13:09:19 +0200] [8756] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:09:19 +0200] [8756] [INFO] [services.user_service] UserService: Change user password
[2023-04-07 13:09:19 +0200] [8756] [TRACE] [services.user_service] UserService: Change password for user with id: efd97175-e187-4ce7-9a4a-286992943857
[2023-04-07 13:09:19 +0200] [8756] [INFO] [db.dao.base_dao] UserModel DAO: Update db entry
[2023-04-07 13:09:19 +0200] [8756] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for update: item_id: efd97175-e187-4ce7-9a4a-286992943857, patch_data: password='$2b$12$UdPaEvHe1VisMzqU1LEg1ebNYvEzj12e0TOpyXpNAx28vGsqsOhQO'
[2023-04-07 13:09:19 +0200] [8756] [DEBUG] [db.dao.base_dao] UserModel DAO: Received updated entry from the database
[2023-04-07 13:09:50 +0200] [8756] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 13:09:50 +0200] [8756] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:09:50 +0200] [8756] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 13:09:50 +0200] [8756] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:09:50 +0200] [8756] [INFO] [services.student_service] StudentService: Get student by id: 2420fa20-b45e-4e20-96a3-fd017c5eda49
[2023-04-07 13:09:50 +0200] [8756] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by id: 2420fa20-b45e-4e20-96a3-fd017c5eda49
[2023-04-07 13:09:50 +0200] [8756] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-07 13:11:01 +0200] [8888] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 13:11:01 +0200] [8888] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:11:01 +0200] [8888] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 13:11:01 +0200] [8888] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:11:01 +0200] [8888] [ERROR] [utils.rights_restriction] 
NoneType: None
[2023-04-07 13:11:15 +0200] [8888] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 13:11:15 +0200] [8888] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:11:15 +0200] [8888] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 13:11:15 +0200] [8888] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:11:15 +0200] [8888] [INFO] [services.user_service] UserService: Get user profile
[2023-04-07 13:11:15 +0200] [8888] [TRACE] [services.user_service] UserService: Get user by id: 2420fa20-b45e-4e20-96a3-fd017c5eda
[2023-04-07 13:11:15 +0200] [8888] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by id: 2420fa20-b45e-4e20-96a3-fd017c5eda
[2023-04-07 13:11:32 +0200] [8888] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 13:11:32 +0200] [8888] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:11:32 +0200] [8888] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 13:11:32 +0200] [8888] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:11:32 +0200] [8888] [INFO] [services.user_service] UserService: Change user password
[2023-04-07 13:11:32 +0200] [8888] [TRACE] [services.user_service] UserService: Change password for user with id: efd97175-e187-4ce7-9a4a-286992943857
[2023-04-07 13:11:32 +0200] [8888] [INFO] [db.dao.base_dao] UserModel DAO: Update db entry
[2023-04-07 13:11:32 +0200] [8888] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for update: item_id: efd97175-e187-4ce7-9a4a-286992943857, patch_data: password='$2b$12$k9DAATk90Wgbo39R842EGOWVbw5B/Y2bemLsxYFiKaDEHlSljmcwC'
[2023-04-07 13:11:32 +0200] [8888] [DEBUG] [db.dao.base_dao] UserModel DAO: Received updated entry from the database
[2023-04-07 13:11:37 +0200] [8888] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 13:11:37 +0200] [8888] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:11:37 +0200] [8888] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 13:11:37 +0200] [8888] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:11:37 +0200] [8888] [ERROR] [utils.rights_restriction] 
NoneType: None
[2023-04-07 13:17:17 +0200] [9128] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 13:17:17 +0200] [9128] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 13:17:17 +0200] [9128] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:17:17 +0200] [9128] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 13:17:17 +0200] [9128] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:19:05 +0200] [9128] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 13:19:21 +0200] [9128] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 13:19:21 +0200] [9128] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 13:19:21 +0200] [9128] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:19:21 +0200] [9128] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 13:19:21 +0200] [9128] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:19:21 +0200] [9128] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 13:19:21 +0200] [9128] [TRACE] [services.auth_service] AuthService: Create session with user: efd97175-e187-4ce7-9a4a-286992943857
[2023-04-07 13:19:21 +0200] [9128] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 13:19:21 +0200] [9128] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('efd97175-e187-4ce7-9a4a-286992943857') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 7, 11, 24, 21, 934425) refresh_expire_time=datetime.datetime(2023, 4, 9, 11, 19, 21, 934560) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NjY2NjEsInN1YiI6ImFkbWluIn0.Y-7xf9y6avgQL_T1FlM-krlyfNlr9ZjE3_L88ume9f4' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwMzkxNjEsInN1YiI6ImFkbWluIn0.v77y61WnBnVQCB49CJZdYyZvJeaHn3lQjAKtyOlpunw' blocked=False is_active=True
[2023-04-07 13:19:21 +0200] [9128] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('cb607446-de98-414a-aa53-a89639924072'), 'user_id': UUID('efd97175-e187-4ce7-9a4a-286992943857'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NjY2NjEsInN1YiI6ImFkbWluIn0.Y-7xf9y6avgQL_T1FlM-krlyfNlr9ZjE3_L88ume9f4', 'access_expire_time': datetime.datetime(2023, 4, 7, 11, 24, 21, 934425), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwMzkxNjEsInN1YiI6ImFkbWluIn0.v77y61WnBnVQCB49CJZdYyZvJeaHn3lQjAKtyOlpunw', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 11, 19, 21, 934560), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 11, 19, 21, 937626), 'updated_at': datetime.datetime(2023, 4, 7, 11, 19, 21, 937631)}
[2023-04-07 13:19:30 +0200] [9128] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 13:19:30 +0200] [9128] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:19:30 +0200] [9128] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 13:19:30 +0200] [9128] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:19:30 +0200] [9128] [INFO] [services.student_service] StudentService: Create students
[2023-04-07 13:19:30 +0200] [9128] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='block', second_name=None, last_name='block', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-07 13:19:30 +0200] [9128] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='block' second_name=None last_name='block' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-07 13:19:30 +0200] [9128] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-07 13:19:30 +0200] [9128] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'block', 'second_name': None, 'last_name': 'block', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-07 13:19:31 +0200] [9128] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-07 13:19:31 +0200] [9128] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='block', second_name=None, last_name='block', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='mERaTBAm8BqgNA')]
[2023-04-07 13:19:31 +0200] [9128] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-07 13:19:31 +0200] [9128] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='block', second_name=None, last_name='block', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='mERaTBAm8BqgNA')]
[2023-04-07 13:19:31 +0200] [9128] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('98b68641-980b-4f69-bec0-82383b87b4e2'), 'registration_token': 'mERaTBAm8BqgNA', 'registered_user': False, 'first_name': 'block', 'second_name': None, 'last_name': 'block', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 7, 11, 19, 31, 675923), 'updated_at': datetime.datetime(2023, 4, 7, 11, 19, 31, 675927), 'deleted_at': None}]
[2023-04-07 13:19:31 +0200] [9128] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7f97e078e100>]
[2023-04-07 13:20:27 +0200] [9128] [INFO] [services.user_service] UserService: Create user
[2023-04-07 13:20:27 +0200] [9128] [TRACE] [services.user_service] UserService: Create user with passed data role='student' login='block' password='1234567!' email='us4e1r1r2115ssd611@user' id=None first_name='block' second_name=None last_name='block' birth_date='28-02-2002' registration_token='mERaTBAm8BqgNA'
[2023-04-07 13:20:27 +0200] [9128] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:20:27 +0200] [9128] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'block'}
[2023-04-07 13:20:27 +0200] [9128] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:20:27 +0200] [9128] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:20:27 +0200] [9128] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'us4e1r1r2115ssd611@user'}
[2023-04-07 13:20:27 +0200] [9128] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:20:27 +0200] [9128] [INFO] [services.student_service] StudentService: Get student by parameters: {'first_name': 'block', 'second_name': None, 'last_name': 'block', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-07 13:20:27 +0200] [9128] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by parameters
[2023-04-07 13:20:27 +0200] [9128] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: params: {'first_name': 'block', 'second_name': None, 'last_name': 'block', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-07 13:20:27 +0200] [9128] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-07 13:20:27 +0200] [9128] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-07 13:20:27 +0200] [9128] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='student' login='block' password='$2b$12$JeSNFHA1.ZwYAYtngfCcXuyrf.kJDmq765PK1piGAWOEGhDq4RPSy' email='us4e1r1r2115ssd611@user' id=UUID('98b68641-980b-4f69-bec0-82383b87b4e2')
[2023-04-07 13:20:27 +0200] [9128] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('98b68641-980b-4f69-bec0-82383b87b4e2'), 'login': 'block', 'email': 'us4e1r1r2115ssd611@user', 'password': '$2b$12$JeSNFHA1.ZwYAYtngfCcXuyrf.kJDmq765PK1piGAWOEGhDq4RPSy', 'role': 'student', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 11, 20, 27, 348491), 'updated_at': datetime.datetime(2023, 4, 7, 11, 20, 27, 348496)}
[2023-04-07 13:20:27 +0200] [9128] [INFO] [services.student_service] StudentService: Set student registered_user field
[2023-04-07 13:20:27 +0200] [9128] [TRACE] [services.student_service] StudentService: Patch student with id: 98b68641-980b-4f69-bec0-82383b87b4e2 - set registered_user: True
[2023-04-07 13:20:27 +0200] [9128] [INFO] [db.dao.base_dao] StudentModel DAO: Update db entry
[2023-04-07 13:20:27 +0200] [9128] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for update: item_id: 98b68641-980b-4f69-bec0-82383b87b4e2, patch_data: registered_user=True
[2023-04-07 13:20:27 +0200] [9128] [DEBUG] [db.dao.base_dao] StudentModel DAO: Received updated entry from the database
[2023-04-07 13:21:11 +0200] [9128] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 13:21:11 +0200] [9128] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:21:11 +0200] [9128] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 13:21:11 +0200] [9128] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:21:11 +0200] [9128] [INFO] [services.user_service] UserService: Get user profile
[2023-04-07 13:21:11 +0200] [9128] [TRACE] [services.user_service] UserService: Get user by id: 98b68641-980b-4f69-bec0-82383b87b4e2
[2023-04-07 13:21:11 +0200] [9128] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by id: 98b68641-980b-4f69-bec0-82383b87b4e2
[2023-04-07 13:21:11 +0200] [9128] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:22:31 +0200] [9128] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 13:22:31 +0200] [9128] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:22:31 +0200] [9128] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 13:22:31 +0200] [9128] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:22:31 +0200] [9128] [INFO] [services.user_service] UserService: Update user profile
[2023-04-07 13:22:31 +0200] [9128] [TRACE] [services.user_service] UserService: Update user: 98b68641-980b-4f69-bec0-82383b87b4e2 with following data: blocked=True
[2023-04-07 13:22:31 +0200] [9128] [INFO] [db.dao.base_dao] UserModel DAO: Update db entry
[2023-04-07 13:22:31 +0200] [9128] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for update: item_id: 98b68641-980b-4f69-bec0-82383b87b4e2, patch_data: blocked=True
[2023-04-07 13:22:31 +0200] [9128] [DEBUG] [db.dao.base_dao] UserModel DAO: Received updated entry from the database
[2023-04-07 13:22:37 +0200] [9128] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 13:22:37 +0200] [9128] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:22:37 +0200] [9128] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 13:22:37 +0200] [9128] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:22:37 +0200] [9128] [INFO] [services.user_service] UserService: Get user profile
[2023-04-07 13:22:37 +0200] [9128] [TRACE] [services.user_service] UserService: Get user by id: 98b68641-980b-4f69-bec0-82383b87b4e2
[2023-04-07 13:22:37 +0200] [9128] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by id: 98b68641-980b-4f69-bec0-82383b87b4e2
[2023-04-07 13:22:37 +0200] [9128] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:25:02 +0200] [9715] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 13:25:02 +0200] [9715] [TRACE] [services.auth_service] AuthService: Login user: block
[2023-04-07 13:25:02 +0200] [9715] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:25:02 +0200] [9715] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'block'}
[2023-04-07 13:25:02 +0200] [9715] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:25:15 +0200] [9715] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 13:25:15 +0200] [9715] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 13:25:15 +0200] [9715] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:25:15 +0200] [9715] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 13:25:15 +0200] [9715] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:25:15 +0200] [9715] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 13:25:15 +0200] [9715] [TRACE] [services.auth_service] AuthService: Create session with user: efd97175-e187-4ce7-9a4a-286992943857
[2023-04-07 13:25:15 +0200] [9715] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 13:25:15 +0200] [9715] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('efd97175-e187-4ce7-9a4a-286992943857') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 7, 11, 30, 15, 508643) refresh_expire_time=datetime.datetime(2023, 4, 9, 11, 25, 15, 508817) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NjcwMTUsInN1YiI6ImFkbWluIn0.GJUvaJI3KzUbUarD2J6S4zTAUJcmWf2d9fKlUKw5vU0' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwMzk1MTUsInN1YiI6ImFkbWluIn0.jSKfgJ5rFV-m-x1Nqz79gDcw9t8qReVajKx2_B_Vjxg' blocked=False is_active=True
[2023-04-07 13:25:15 +0200] [9715] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('75356f6a-2e28-4d8f-b395-1cacaf77d838'), 'user_id': UUID('efd97175-e187-4ce7-9a4a-286992943857'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NjcwMTUsInN1YiI6ImFkbWluIn0.GJUvaJI3KzUbUarD2J6S4zTAUJcmWf2d9fKlUKw5vU0', 'access_expire_time': datetime.datetime(2023, 4, 7, 11, 30, 15, 508643), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwMzk1MTUsInN1YiI6ImFkbWluIn0.jSKfgJ5rFV-m-x1Nqz79gDcw9t8qReVajKx2_B_Vjxg', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 11, 25, 15, 508817), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 11, 25, 15, 511977), 'updated_at': datetime.datetime(2023, 4, 7, 11, 25, 15, 511981)}
[2023-04-07 13:25:33 +0200] [9715] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 13:25:33 +0200] [9715] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:25:33 +0200] [9715] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 13:25:33 +0200] [9715] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:25:33 +0200] [9715] [INFO] [services.user_service] UserService: Update user profile
[2023-04-07 13:25:33 +0200] [9715] [TRACE] [services.user_service] UserService: Update user: 98b68641-980b-4f69-bec0-82383b87b4e2 with following data: blocked=False
[2023-04-07 13:25:33 +0200] [9715] [INFO] [db.dao.base_dao] UserModel DAO: Update db entry
[2023-04-07 13:25:33 +0200] [9715] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for update: item_id: 98b68641-980b-4f69-bec0-82383b87b4e2, patch_data: blocked=False
[2023-04-07 13:25:33 +0200] [9715] [DEBUG] [db.dao.base_dao] UserModel DAO: Received updated entry from the database
[2023-04-07 13:25:42 +0200] [9715] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 13:25:42 +0200] [9715] [TRACE] [services.auth_service] AuthService: Login user: block
[2023-04-07 13:25:42 +0200] [9715] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:25:42 +0200] [9715] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'block'}
[2023-04-07 13:25:42 +0200] [9715] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:25:43 +0200] [9715] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 13:25:43 +0200] [9715] [TRACE] [services.auth_service] AuthService: Create session with user: 98b68641-980b-4f69-bec0-82383b87b4e2
[2023-04-07 13:25:43 +0200] [9715] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 13:25:43 +0200] [9715] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('98b68641-980b-4f69-bec0-82383b87b4e2') login='block' role='student' access_expire_time=datetime.datetime(2023, 4, 7, 11, 30, 43, 69777) refresh_expire_time=datetime.datetime(2023, 4, 9, 11, 25, 43, 69901) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NjcwNDMsInN1YiI6ImJsb2NrIn0.uLWJKg84e3lpsBY3Keb5Y7jzxr9tbpl0v2YcQXlV8sE' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwMzk1NDMsInN1YiI6ImJsb2NrIn0.x_BXZ5Ab7zNYAy5C5rOu6YW5FW7lE5YDW9EFs4gUJec' blocked=False is_active=True
[2023-04-07 13:25:43 +0200] [9715] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('f21b5f8f-daa2-4142-87d3-11ffee0ff419'), 'user_id': UUID('98b68641-980b-4f69-bec0-82383b87b4e2'), 'login': 'block', 'role': 'student', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NjcwNDMsInN1YiI6ImJsb2NrIn0.uLWJKg84e3lpsBY3Keb5Y7jzxr9tbpl0v2YcQXlV8sE', 'access_expire_time': datetime.datetime(2023, 4, 7, 11, 30, 43, 69777), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwMzk1NDMsInN1YiI6ImJsb2NrIn0.x_BXZ5Ab7zNYAy5C5rOu6YW5FW7lE5YDW9EFs4gUJec', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 11, 25, 43, 69901), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 11, 25, 43, 71576), 'updated_at': datetime.datetime(2023, 4, 7, 11, 25, 43, 71581)}
[2023-04-07 13:45:30 +0200] [10504] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 13:45:30 +0200] [10504] [TRACE] [services.auth_service] AuthService: Login user: block
[2023-04-07 13:45:30 +0200] [10504] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:45:30 +0200] [10504] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'block'}
[2023-04-07 13:45:30 +0200] [10504] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:45:30 +0200] [10504] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 13:45:30 +0200] [10504] [TRACE] [services.auth_service] AuthService: Create session with user: 98b68641-980b-4f69-bec0-82383b87b4e2
[2023-04-07 13:45:30 +0200] [10504] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 13:45:30 +0200] [10504] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('98b68641-980b-4f69-bec0-82383b87b4e2') login='block' role='student' access_expire_time=datetime.datetime(2023, 4, 7, 11, 50, 30, 933599) refresh_expire_time=datetime.datetime(2023, 4, 9, 11, 45, 30, 933762) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NjgyMzAsInN1YiI6ImJsb2NrIn0.VDPwBOla63w0MelIFw3vnu_mFG8-QVBqsXYByWzKclQ' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNDA3MzAsInN1YiI6ImJsb2NrIn0.vpzywwhUYJhHKhcJMlcP_xxtoNgFy5aH1k932gGZmDE' blocked=False is_active=True
[2023-04-07 13:45:30 +0200] [10504] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('4c9c33fe-4608-4d76-9c6d-8ddb3e7605ba'), 'user_id': UUID('98b68641-980b-4f69-bec0-82383b87b4e2'), 'login': 'block', 'role': 'student', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NjgyMzAsInN1YiI6ImJsb2NrIn0.VDPwBOla63w0MelIFw3vnu_mFG8-QVBqsXYByWzKclQ', 'access_expire_time': datetime.datetime(2023, 4, 7, 11, 50, 30, 933599), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNDA3MzAsInN1YiI6ImJsb2NrIn0.vpzywwhUYJhHKhcJMlcP_xxtoNgFy5aH1k932gGZmDE', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 11, 45, 30, 933762), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 11, 45, 30, 936820), 'updated_at': datetime.datetime(2023, 4, 7, 11, 45, 30, 936824)}
[2023-04-07 13:45:40 +0200] [10504] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 13:45:40 +0200] [10504] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:45:40 +0200] [10504] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'block'}
[2023-04-07 13:45:40 +0200] [10504] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:46:22 +0200] [10641] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 13:46:22 +0200] [10641] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:46:22 +0200] [10641] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'block'}
[2023-04-07 13:46:22 +0200] [10641] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:46:22 +0200] [10641] [INFO] [services.user_service] UserService: Delete user
[2023-04-07 13:46:22 +0200] [10641] [TRACE] [services.user_service] UserService: Set is_active field to False for user with id 98b68641-980b-4f69-bec0-82383b87b4e2
[2023-04-07 13:46:22 +0200] [10641] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by id: 98b68641-980b-4f69-bec0-82383b87b4e2
[2023-04-07 13:46:22 +0200] [10641] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:46:22 +0200] [10641] [INFO] [db.dao.base_dao] UserModel DAO: Update db entry
[2023-04-07 13:46:22 +0200] [10641] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for update: item_id: 98b68641-980b-4f69-bec0-82383b87b4e2, patch_data: is_active=False
[2023-04-07 13:46:22 +0200] [10641] [DEBUG] [db.dao.base_dao] UserModel DAO: Received updated entry from the database
[2023-04-07 13:46:29 +0200] [10641] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 13:46:29 +0200] [10641] [TRACE] [services.auth_service] AuthService: Login user: block
[2023-04-07 13:46:29 +0200] [10641] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:46:29 +0200] [10641] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'block'}
[2023-04-07 13:46:29 +0200] [10641] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:46:29 +0200] [10641] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 13:46:29 +0200] [10641] [TRACE] [services.auth_service] AuthService: Create session with user: 98b68641-980b-4f69-bec0-82383b87b4e2
[2023-04-07 13:46:29 +0200] [10641] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 13:46:29 +0200] [10641] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('98b68641-980b-4f69-bec0-82383b87b4e2') login='block' role='student' access_expire_time=datetime.datetime(2023, 4, 7, 11, 51, 29, 335886) refresh_expire_time=datetime.datetime(2023, 4, 9, 11, 46, 29, 336041) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NjgyODksInN1YiI6ImJsb2NrIn0.SeWGQhGHujR_qRIi8riBd9PBMJxc-X_xhfuuva44pW8' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNDA3ODksInN1YiI6ImJsb2NrIn0.hcCHq9FH1LMyOpYPiSjZOzgJzKODSeP7g4R19pwS1cE' blocked=False is_active=False
[2023-04-07 13:46:29 +0200] [10641] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('e5ef737f-f923-47a6-84be-a1e1b2aed94e'), 'user_id': UUID('98b68641-980b-4f69-bec0-82383b87b4e2'), 'login': 'block', 'role': 'student', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NjgyODksInN1YiI6ImJsb2NrIn0.SeWGQhGHujR_qRIi8riBd9PBMJxc-X_xhfuuva44pW8', 'access_expire_time': datetime.datetime(2023, 4, 7, 11, 51, 29, 335886), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNDA3ODksInN1YiI6ImJsb2NrIn0.hcCHq9FH1LMyOpYPiSjZOzgJzKODSeP7g4R19pwS1cE', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 11, 46, 29, 336041), 'blocked': False, 'is_active': False, 'created_at': datetime.datetime(2023, 4, 7, 11, 46, 29, 339421), 'updated_at': datetime.datetime(2023, 4, 7, 11, 46, 29, 339426)}
[2023-04-07 13:47:41 +0200] [10693] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 13:47:41 +0200] [10693] [TRACE] [services.auth_service] AuthService: Login user: block
[2023-04-07 13:47:41 +0200] [10693] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:47:41 +0200] [10693] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'block'}
[2023-04-07 13:47:41 +0200] [10693] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:47:54 +0200] [10693] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 13:47:54 +0200] [10693] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 13:47:54 +0200] [10693] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:47:54 +0200] [10693] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 13:47:54 +0200] [10693] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:47:54 +0200] [10693] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 13:47:54 +0200] [10693] [TRACE] [services.auth_service] AuthService: Create session with user: efd97175-e187-4ce7-9a4a-286992943857
[2023-04-07 13:47:54 +0200] [10693] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 13:47:54 +0200] [10693] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('efd97175-e187-4ce7-9a4a-286992943857') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 7, 11, 52, 54, 984141) refresh_expire_time=datetime.datetime(2023, 4, 9, 11, 47, 54, 984303) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NjgzNzQsInN1YiI6ImFkbWluIn0.bhJlWETT7ZHqT_ttK-qdbb0T_6egCjGPVQFndMRyzis' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNDA4NzQsInN1YiI6ImFkbWluIn0.WG5r-HGIynptzV-llYQO3xjmjNGKxgZkbwjbmAdsSzA' blocked=False is_active=True
[2023-04-07 13:47:54 +0200] [10693] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('2f8921f6-737a-4fb8-af3c-f330e067da21'), 'user_id': UUID('efd97175-e187-4ce7-9a4a-286992943857'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NjgzNzQsInN1YiI6ImFkbWluIn0.bhJlWETT7ZHqT_ttK-qdbb0T_6egCjGPVQFndMRyzis', 'access_expire_time': datetime.datetime(2023, 4, 7, 11, 52, 54, 984141), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNDA4NzQsInN1YiI6ImFkbWluIn0.WG5r-HGIynptzV-llYQO3xjmjNGKxgZkbwjbmAdsSzA', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 11, 47, 54, 984303), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 11, 47, 54, 987297), 'updated_at': datetime.datetime(2023, 4, 7, 11, 47, 54, 987303)}
[2023-04-07 13:48:12 +0200] [10693] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 13:48:12 +0200] [10693] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:48:12 +0200] [10693] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 13:48:12 +0200] [10693] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:48:12 +0200] [10693] [INFO] [services.user_service] UserService: Restore user
[2023-04-07 13:48:12 +0200] [10693] [TRACE] [services.user_service] UserService: Set is_active field to True for user with id 98b68641-980b-4f69-bec0-82383b87b4e2
[2023-04-07 13:48:12 +0200] [10693] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by id: 98b68641-980b-4f69-bec0-82383b87b4e2
[2023-04-07 13:48:12 +0200] [10693] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:48:12 +0200] [10693] [INFO] [db.dao.base_dao] UserModel DAO: Update db entry
[2023-04-07 13:48:12 +0200] [10693] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for update: item_id: 98b68641-980b-4f69-bec0-82383b87b4e2, patch_data: is_active=True
[2023-04-07 13:48:12 +0200] [10693] [DEBUG] [db.dao.base_dao] UserModel DAO: Received updated entry from the database
[2023-04-07 13:48:24 +0200] [10693] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 13:48:24 +0200] [10693] [TRACE] [services.auth_service] AuthService: Login user: block
[2023-04-07 13:48:24 +0200] [10693] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:48:24 +0200] [10693] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'block'}
[2023-04-07 13:48:24 +0200] [10693] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:48:24 +0200] [10693] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 13:48:24 +0200] [10693] [TRACE] [services.auth_service] AuthService: Create session with user: 98b68641-980b-4f69-bec0-82383b87b4e2
[2023-04-07 13:48:24 +0200] [10693] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 13:48:24 +0200] [10693] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('98b68641-980b-4f69-bec0-82383b87b4e2') login='block' role='student' access_expire_time=datetime.datetime(2023, 4, 7, 11, 53, 24, 502700) refresh_expire_time=datetime.datetime(2023, 4, 9, 11, 48, 24, 502853) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4Njg0MDQsInN1YiI6ImJsb2NrIn0.YHYsCrOeQ1JoQX29xy1qkiK2mTzd9KTzw1KH3-HA_Mc' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNDA5MDQsInN1YiI6ImJsb2NrIn0.gcOmFYP8oJy6-2El2gLXOdZzRC4qn40pDlyKdiwYPwQ' blocked=False is_active=True
[2023-04-07 13:48:24 +0200] [10693] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('0178e7c7-b76a-4131-bfd9-e43419ae07a7'), 'user_id': UUID('98b68641-980b-4f69-bec0-82383b87b4e2'), 'login': 'block', 'role': 'student', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4Njg0MDQsInN1YiI6ImJsb2NrIn0.YHYsCrOeQ1JoQX29xy1qkiK2mTzd9KTzw1KH3-HA_Mc', 'access_expire_time': datetime.datetime(2023, 4, 7, 11, 53, 24, 502700), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNDA5MDQsInN1YiI6ImJsb2NrIn0.gcOmFYP8oJy6-2El2gLXOdZzRC4qn40pDlyKdiwYPwQ', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 11, 48, 24, 502853), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 11, 48, 24, 504578), 'updated_at': datetime.datetime(2023, 4, 7, 11, 48, 24, 504582)}
[2023-04-07 13:48:34 +0200] [10693] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 13:48:34 +0200] [10693] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 13:48:34 +0200] [10693] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:48:34 +0200] [10693] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 13:48:34 +0200] [10693] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:48:34 +0200] [10693] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 13:48:34 +0200] [10693] [TRACE] [services.auth_service] AuthService: Create session with user: efd97175-e187-4ce7-9a4a-286992943857
[2023-04-07 13:48:34 +0200] [10693] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 13:48:34 +0200] [10693] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('efd97175-e187-4ce7-9a4a-286992943857') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 7, 11, 53, 34, 832383) refresh_expire_time=datetime.datetime(2023, 4, 9, 11, 48, 34, 832555) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4Njg0MTQsInN1YiI6ImFkbWluIn0.8L3ygJP9T9S6uJ7ZXZDmiZJLsUG6wItOqMV-onopiLU' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNDA5MTQsInN1YiI6ImFkbWluIn0.ATItR96ve39gyRj1d8oKdR-qS_m-n5ltnmvgV3onCKU' blocked=False is_active=True
[2023-04-07 13:48:34 +0200] [10693] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('f0482b1d-4180-47c9-98b0-ff8258faa349'), 'user_id': UUID('efd97175-e187-4ce7-9a4a-286992943857'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4Njg0MTQsInN1YiI6ImFkbWluIn0.8L3ygJP9T9S6uJ7ZXZDmiZJLsUG6wItOqMV-onopiLU', 'access_expire_time': datetime.datetime(2023, 4, 7, 11, 53, 34, 832383), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNDA5MTQsInN1YiI6ImFkbWluIn0.ATItR96ve39gyRj1d8oKdR-qS_m-n5ltnmvgV3onCKU', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 11, 48, 34, 832555), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 11, 48, 34, 834628), 'updated_at': datetime.datetime(2023, 4, 7, 11, 48, 34, 834635)}
[2023-04-07 13:48:41 +0200] [10693] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 13:48:41 +0200] [10693] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:48:41 +0200] [10693] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 13:48:41 +0200] [10693] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:48:41 +0200] [10693] [INFO] [services.user_service] UserService: Restore user
[2023-04-07 13:48:41 +0200] [10693] [TRACE] [services.user_service] UserService: Set is_active field to True for user with id 98b68641-980b-4f69-bec0-82383b87b4e2
[2023-04-07 13:48:41 +0200] [10693] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by id: 98b68641-980b-4f69-bec0-82383b87b4e2
[2023-04-07 13:48:41 +0200] [10693] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:48:52 +0200] [10693] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 13:48:52 +0200] [10693] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:48:52 +0200] [10693] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 13:48:52 +0200] [10693] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:48:52 +0200] [10693] [INFO] [services.user_service] UserService: Delete user
[2023-04-07 13:48:52 +0200] [10693] [TRACE] [services.user_service] UserService: Set is_active field to False for user with id 98b68641-980b-4f69-bec0-82383b87b4e2
[2023-04-07 13:48:52 +0200] [10693] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by id: 98b68641-980b-4f69-bec0-82383b87b4e2
[2023-04-07 13:48:52 +0200] [10693] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:48:52 +0200] [10693] [INFO] [db.dao.base_dao] UserModel DAO: Update db entry
[2023-04-07 13:48:52 +0200] [10693] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for update: item_id: 98b68641-980b-4f69-bec0-82383b87b4e2, patch_data: is_active=False
[2023-04-07 13:48:52 +0200] [10693] [DEBUG] [db.dao.base_dao] UserModel DAO: Received updated entry from the database
[2023-04-07 13:48:59 +0200] [10693] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 13:48:59 +0200] [10693] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:48:59 +0200] [10693] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 13:48:59 +0200] [10693] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:48:59 +0200] [10693] [INFO] [services.user_service] UserService: Delete user
[2023-04-07 13:48:59 +0200] [10693] [TRACE] [services.user_service] UserService: Set is_active field to False for user with id 98b68641-980b-4f69-bec0-82383b87b4e2
[2023-04-07 13:48:59 +0200] [10693] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by id: 98b68641-980b-4f69-bec0-82383b87b4e2
[2023-04-07 13:48:59 +0200] [10693] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:49:11 +0200] [10693] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 13:49:11 +0200] [10693] [TRACE] [services.auth_service] AuthService: Login user: block
[2023-04-07 13:49:11 +0200] [10693] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:49:11 +0200] [10693] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'block'}
[2023-04-07 13:49:11 +0200] [10693] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:49:28 +0200] [10693] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 13:49:28 +0200] [10693] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 13:49:28 +0200] [10693] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:49:28 +0200] [10693] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 13:49:28 +0200] [10693] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:49:28 +0200] [10693] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 13:49:28 +0200] [10693] [TRACE] [services.auth_service] AuthService: Create session with user: efd97175-e187-4ce7-9a4a-286992943857
[2023-04-07 13:49:28 +0200] [10693] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 13:49:28 +0200] [10693] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('efd97175-e187-4ce7-9a4a-286992943857') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 7, 11, 54, 28, 328127) refresh_expire_time=datetime.datetime(2023, 4, 9, 11, 49, 28, 328246) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4Njg0NjgsInN1YiI6ImFkbWluIn0.1ljYrhkr79h9C_bsdKajqu_4uBKd_d5Djcyrj05fNZg' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNDA5NjgsInN1YiI6ImFkbWluIn0.fMdWLFfKCqUUIxNEbxnfRjMSwwuxYDlMQPWZTmjElVo' blocked=False is_active=True
[2023-04-07 13:49:28 +0200] [10693] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('56a89985-9a59-4f25-9428-40dcfb3c4ab0'), 'user_id': UUID('efd97175-e187-4ce7-9a4a-286992943857'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4Njg0NjgsInN1YiI6ImFkbWluIn0.1ljYrhkr79h9C_bsdKajqu_4uBKd_d5Djcyrj05fNZg', 'access_expire_time': datetime.datetime(2023, 4, 7, 11, 54, 28, 328127), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNDA5NjgsInN1YiI6ImFkbWluIn0.fMdWLFfKCqUUIxNEbxnfRjMSwwuxYDlMQPWZTmjElVo', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 11, 49, 28, 328246), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 11, 49, 28, 329963), 'updated_at': datetime.datetime(2023, 4, 7, 11, 49, 28, 329968)}
[2023-04-07 13:49:41 +0200] [10693] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 13:49:41 +0200] [10693] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:49:41 +0200] [10693] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 13:49:41 +0200] [10693] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:49:41 +0200] [10693] [INFO] [services.user_service] UserService: Restore user
[2023-04-07 13:49:41 +0200] [10693] [TRACE] [services.user_service] UserService: Set is_active field to True for user with id 98b68641-980b-4f69-bec0-82383b87b4e2
[2023-04-07 13:49:41 +0200] [10693] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by id: 98b68641-980b-4f69-bec0-82383b87b4e2
[2023-04-07 13:49:41 +0200] [10693] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:49:41 +0200] [10693] [INFO] [db.dao.base_dao] UserModel DAO: Update db entry
[2023-04-07 13:49:41 +0200] [10693] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for update: item_id: 98b68641-980b-4f69-bec0-82383b87b4e2, patch_data: is_active=True
[2023-04-07 13:49:41 +0200] [10693] [DEBUG] [db.dao.base_dao] UserModel DAO: Received updated entry from the database
[2023-04-07 13:49:50 +0200] [10693] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 13:49:50 +0200] [10693] [TRACE] [services.auth_service] AuthService: Login user: block
[2023-04-07 13:49:50 +0200] [10693] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 13:49:50 +0200] [10693] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'block'}
[2023-04-07 13:49:50 +0200] [10693] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 13:49:50 +0200] [10693] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 13:49:50 +0200] [10693] [TRACE] [services.auth_service] AuthService: Create session with user: 98b68641-980b-4f69-bec0-82383b87b4e2
[2023-04-07 13:49:50 +0200] [10693] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 13:49:50 +0200] [10693] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('98b68641-980b-4f69-bec0-82383b87b4e2') login='block' role='student' access_expire_time=datetime.datetime(2023, 4, 7, 11, 54, 50, 944490) refresh_expire_time=datetime.datetime(2023, 4, 9, 11, 49, 50, 944612) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4Njg0OTAsInN1YiI6ImJsb2NrIn0.RQBKDAt-7ng9F-Ky7buAYDroFsIiSX3d0jMNeBSK7SE' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNDA5OTAsInN1YiI6ImJsb2NrIn0.cHhh_Q86-4eEIhoClDmJoJjqyXFkXS2asOBlj-eFq30' blocked=False is_active=True
[2023-04-07 13:49:50 +0200] [10693] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('3c0036fd-65b7-4eb3-a1e2-4b8e74a1bbe8'), 'user_id': UUID('98b68641-980b-4f69-bec0-82383b87b4e2'), 'login': 'block', 'role': 'student', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4Njg0OTAsInN1YiI6ImJsb2NrIn0.RQBKDAt-7ng9F-Ky7buAYDroFsIiSX3d0jMNeBSK7SE', 'access_expire_time': datetime.datetime(2023, 4, 7, 11, 54, 50, 944490), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNDA5OTAsInN1YiI6ImJsb2NrIn0.cHhh_Q86-4eEIhoClDmJoJjqyXFkXS2asOBlj-eFq30', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 11, 49, 50, 944612), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 11, 49, 50, 946418), 'updated_at': datetime.datetime(2023, 4, 7, 11, 49, 50, 946423)}
[2023-04-07 17:04:46 +0200] [17289] [INFO] [services.user_service] UserService: Create user
[2023-04-07 17:04:46 +0200] [17289] [TRACE] [services.user_service] UserService: Create user with passed data role='admin' login='admin' password='1234567!' email='admin' id=None first_name='admin' second_name=None last_name='admin' birth_date='28-02-2002' registration_token='admin'
[2023-04-07 17:04:46 +0200] [17289] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:04:46 +0200] [17289] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:04:46 +0200] [17289] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:04:46 +0200] [17289] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:04:46 +0200] [17289] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'admin'}
[2023-04-07 17:04:46 +0200] [17289] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:04:46 +0200] [17289] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-07 17:04:46 +0200] [17289] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='1234567!' email='admin' id=None
[2023-04-07 17:04:46 +0200] [17289] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('f3fac250-be3f-4cb7-a291-d9bec7573a1d'), 'login': 'admin', 'email': 'admin', 'password': '1234567!', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 15, 4, 46, 588389), 'updated_at': datetime.datetime(2023, 4, 7, 15, 4, 46, 588393)}
[2023-04-07 17:04:56 +0200] [17289] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 17:04:56 +0200] [17289] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 17:04:56 +0200] [17289] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:04:56 +0200] [17289] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:04:56 +0200] [17289] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:05:22 +0200] [17289] [INFO] [services.user_service] UserService: Create user
[2023-04-07 17:05:22 +0200] [17289] [TRACE] [services.user_service] UserService: Create user with passed data role='admin' login='admin' password='1234567!' email='admin' id=None first_name='admin' second_name=None last_name='admin' birth_date='28-02-2002' registration_token='admin'
[2023-04-07 17:05:22 +0200] [17289] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:05:22 +0200] [17289] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:05:22 +0200] [17289] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:05:22 +0200] [17289] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:05:22 +0200] [17289] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'admin'}
[2023-04-07 17:05:22 +0200] [17289] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:05:32 +0200] [17289] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 17:05:32 +0200] [17289] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 17:05:32 +0200] [17289] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:05:32 +0200] [17289] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:05:32 +0200] [17289] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:07:29 +0200] [17437] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 17:07:29 +0200] [17437] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 17:07:29 +0200] [17437] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:07:29 +0200] [17437] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:07:29 +0200] [17437] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:07:49 +0200] [17437] [INFO] [services.user_service] UserService: Create user
[2023-04-07 17:07:49 +0200] [17437] [TRACE] [services.user_service] UserService: Create user with passed data role='admin' login='admin1' password='1234567!' email='admin1' id=None first_name='admin1' second_name=None last_name='admin1' birth_date='28-02-2002' registration_token='admin1111'
[2023-04-07 17:07:49 +0200] [17437] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:07:49 +0200] [17437] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin1'}
[2023-04-07 17:07:49 +0200] [17437] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:07:49 +0200] [17437] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:07:49 +0200] [17437] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'admin1'}
[2023-04-07 17:07:49 +0200] [17437] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:07:49 +0200] [17437] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-07 17:07:49 +0200] [17437] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin1' password='1234567!' email='admin1' id=None
[2023-04-07 17:07:49 +0200] [17437] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('840090d7-51f8-44f9-a74b-cf0fe9ca83a9'), 'login': 'admin1', 'email': 'admin1', 'password': '1234567!', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 15, 7, 49, 927855), 'updated_at': datetime.datetime(2023, 4, 7, 15, 7, 49, 927860)}
[2023-04-07 17:07:58 +0200] [17437] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 17:07:58 +0200] [17437] [TRACE] [services.auth_service] AuthService: Login user: admin1
[2023-04-07 17:07:58 +0200] [17437] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:07:58 +0200] [17437] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin1'}
[2023-04-07 17:07:58 +0200] [17437] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:08:59 +0200] [17630] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 17:08:59 +0200] [17630] [TRACE] [services.auth_service] AuthService: Login user: admin1
[2023-04-07 17:08:59 +0200] [17630] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:08:59 +0200] [17630] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin1'}
[2023-04-07 17:08:59 +0200] [17630] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:09:18 +0200] [17630] [INFO] [services.user_service] UserService: Create user
[2023-04-07 17:09:18 +0200] [17630] [TRACE] [services.user_service] UserService: Create user with passed data role='admin' login='admin12' password='1234567!' email='admin2212' id=None first_name='admin12' second_name=None last_name='admin12' birth_date='28-02-2002' registration_token='admin1222111'
[2023-04-07 17:09:18 +0200] [17630] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:09:18 +0200] [17630] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin12'}
[2023-04-07 17:09:18 +0200] [17630] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:09:18 +0200] [17630] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:09:18 +0200] [17630] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'admin2212'}
[2023-04-07 17:09:18 +0200] [17630] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:09:18 +0200] [17630] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-07 17:09:18 +0200] [17630] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin12' password='1234567!' email='admin2212' id=None
[2023-04-07 17:09:18 +0200] [17630] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('3aa2b74b-42ee-4172-b971-866c559603da'), 'login': 'admin12', 'email': 'admin2212', 'password': '1234567!', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 15, 9, 18, 769792), 'updated_at': datetime.datetime(2023, 4, 7, 15, 9, 18, 769797)}
[2023-04-07 17:09:22 +0200] [17630] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 17:09:22 +0200] [17630] [TRACE] [services.auth_service] AuthService: Login user: admin12
[2023-04-07 17:09:22 +0200] [17630] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:09:22 +0200] [17630] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin12'}
[2023-04-07 17:09:22 +0200] [17630] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:09:48 +0200] [17701] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 17:09:48 +0200] [17701] [TRACE] [services.auth_service] AuthService: Login user: admin12
[2023-04-07 17:09:48 +0200] [17701] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:09:48 +0200] [17701] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin12'}
[2023-04-07 17:09:48 +0200] [17701] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:11:04 +0200] [17765] [INFO] [services.user_service] UserService: Create user
[2023-04-07 17:11:04 +0200] [17765] [TRACE] [services.user_service] UserService: Create user with passed data role='admin' login='admin' password='1234567!' email='admin' id=None first_name='admin' second_name=None last_name='admin' birth_date='28-02-2002' registration_token='admin'
[2023-04-07 17:11:04 +0200] [17765] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:11:04 +0200] [17765] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:11:04 +0200] [17765] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:11:04 +0200] [17765] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:11:04 +0200] [17765] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'admin'}
[2023-04-07 17:11:04 +0200] [17765] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:11:04 +0200] [17765] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-07 17:11:04 +0200] [17765] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='1234567!' email='admin' id=None
[2023-04-07 17:11:04 +0200] [17765] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('61d86fe9-c165-4734-93ce-46ab7ddafa74'), 'login': 'admin', 'email': 'admin', 'password': '1234567!', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 15, 11, 4, 389236), 'updated_at': datetime.datetime(2023, 4, 7, 15, 11, 4, 389242)}
[2023-04-07 17:25:24 +0200] [17887] [INFO] [services.user_service] UserService: Create user
[2023-04-07 17:25:24 +0200] [17887] [TRACE] [services.user_service] UserService: Create user with passed data role='admin' login='admin' password='1234567!' email='admin' id=None first_name='admin' second_name=None last_name='admin' birth_date='28-02-2002' registration_token='admin'
[2023-04-07 17:25:24 +0200] [17887] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:25:24 +0200] [17887] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:25:24 +0200] [17887] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:25:24 +0200] [17887] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:25:24 +0200] [17887] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'admin'}
[2023-04-07 17:25:24 +0200] [17887] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:25:24 +0200] [17887] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-07 17:25:24 +0200] [17887] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$FRuRUV.Neam/euAsMJsd/eWxvH0CwFSjOJLBy9VtyCr8fnRDqDb7a' email='admin' id=None
[2023-04-07 17:25:24 +0200] [17887] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('72ea809d-479a-4a12-a39d-48eb98e66f4a'), 'login': 'admin', 'email': 'admin', 'password': '$2b$12$FRuRUV.Neam/euAsMJsd/eWxvH0CwFSjOJLBy9VtyCr8fnRDqDb7a', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 15, 25, 24, 945204), 'updated_at': datetime.datetime(2023, 4, 7, 15, 25, 24, 945208)}
[2023-04-07 17:25:30 +0200] [17887] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 17:25:30 +0200] [17887] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 17:25:30 +0200] [17887] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:25:30 +0200] [17887] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:25:30 +0200] [17887] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:25:31 +0200] [17887] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 17:25:31 +0200] [17887] [TRACE] [services.auth_service] AuthService: Create session with user: 72ea809d-479a-4a12-a39d-48eb98e66f4a
[2023-04-07 17:25:31 +0200] [17887] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 17:25:31 +0200] [17887] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('72ea809d-479a-4a12-a39d-48eb98e66f4a') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 7, 15, 30, 31, 218209) refresh_expire_time=datetime.datetime(2023, 4, 9, 15, 25, 31, 218365) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4ODE0MzEsInN1YiI6ImFkbWluIn0.BRTSEYUCZxScZ-ib4Lk5gRCmlAcECa9AOwmPgb4jk-0' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNTM5MzEsInN1YiI6ImFkbWluIn0.V5O-spfDSIFXQMwp0vtA1t3tIK4im23EFU_KDzN5_gY' blocked=False is_active=True
[2023-04-07 17:25:31 +0200] [17887] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('e979f0c8-dac7-4c3b-82f7-657d8fe0a32f'), 'user_id': UUID('72ea809d-479a-4a12-a39d-48eb98e66f4a'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4ODE0MzEsInN1YiI6ImFkbWluIn0.BRTSEYUCZxScZ-ib4Lk5gRCmlAcECa9AOwmPgb4jk-0', 'access_expire_time': datetime.datetime(2023, 4, 7, 15, 30, 31, 218209), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNTM5MzEsInN1YiI6ImFkbWluIn0.V5O-spfDSIFXQMwp0vtA1t3tIK4im23EFU_KDzN5_gY', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 15, 25, 31, 218365), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 15, 25, 31, 221144), 'updated_at': datetime.datetime(2023, 4, 7, 15, 25, 31, 221148)}
[2023-04-07 17:25:49 +0200] [17887] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 17:25:49 +0200] [17887] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:25:49 +0200] [17887] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:25:49 +0200] [17887] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:25:49 +0200] [17887] [INFO] [services.room_service] RoomService: Create room
[2023-04-07 17:25:49 +0200] [17887] [TRACE] [services.room_service] RoomService: Create room with passed data room_number=101 class_type=<ClassTypesEnum.LABORATORY: 'laboratory'>
[2023-04-07 17:25:49 +0200] [17887] [DEBUG] [services.room_service] RoomService: Check if room with same number exists: 101
[2023-04-07 17:25:49 +0200] [17887] [INFO] [db.dao.base_dao] RoomModel DAO: Get db entry by parameters
[2023-04-07 17:25:49 +0200] [17887] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: params: {'room_number': 101}
[2023-04-07 17:25:51 +0200] [17887] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 17:25:51 +0200] [17887] [INFO] [db.dao.base_dao] RoomModel DAO: Create db entry
[2023-04-07 17:25:51 +0200] [17887] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed for creation: room_number=101 class_type=<ClassTypesEnum.LABORATORY: 'laboratory'>
[2023-04-07 17:25:52 +0200] [17887] [DEBUG] [db.dao.base_dao] RoomModel DAO: Created entry in database: {'id': UUID('4d713f89-4c40-4f4b-9d40-ae094f2fd143'), 'room_number': 101, 'class_type': <ClassTypesEnum.LABORATORY: 'laboratory'>}
[2023-04-07 17:26:01 +0200] [17887] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 17:26:01 +0200] [17887] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:26:01 +0200] [17887] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:26:01 +0200] [17887] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:26:01 +0200] [17887] [INFO] [services.room_service] RoomService: Create room
[2023-04-07 17:26:01 +0200] [17887] [TRACE] [services.room_service] RoomService: Create room with passed data room_number=102 class_type=<ClassTypesEnum.LECTURE: 'lecture'>
[2023-04-07 17:26:01 +0200] [17887] [DEBUG] [services.room_service] RoomService: Check if room with same number exists: 102
[2023-04-07 17:26:01 +0200] [17887] [INFO] [db.dao.base_dao] RoomModel DAO: Get db entry by parameters
[2023-04-07 17:26:01 +0200] [17887] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: params: {'room_number': 102}
[2023-04-07 17:26:01 +0200] [17887] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 17:26:01 +0200] [17887] [INFO] [db.dao.base_dao] RoomModel DAO: Create db entry
[2023-04-07 17:26:01 +0200] [17887] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed for creation: room_number=102 class_type=<ClassTypesEnum.LECTURE: 'lecture'>
[2023-04-07 17:26:01 +0200] [17887] [DEBUG] [db.dao.base_dao] RoomModel DAO: Created entry in database: {'id': UUID('53ee54d9-bcbd-4ca5-9aa4-417b336d5752'), 'room_number': 102, 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>}
[2023-04-07 17:26:12 +0200] [17887] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 17:26:12 +0200] [17887] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:26:12 +0200] [17887] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:26:12 +0200] [17887] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:26:12 +0200] [17887] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-07 17:26:12 +0200] [17887] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data start_time='09:15' end_time='10:00' lesson_number=<LessonsEnum.ONE: '1'>
[2023-04-07 17:26:12 +0200] [17887] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 1
[2023-04-07 17:26:12 +0200] [17887] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-07 17:26:12 +0200] [17887] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-07 17:26:12 +0200] [17887] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-07 17:26:12 +0200] [17887] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 09:15:00 - 10:00:00
[2023-04-07 17:26:12 +0200] [17887] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-07 17:26:12 +0200] [17887] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 09:15:00 - 10:00:00
[2023-04-07 17:26:12 +0200] [17887] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database []
[2023-04-07 17:26:12 +0200] [17887] [INFO] [db.dao.base_dao] LessonModel DAO: Create db entry
[2023-04-07 17:26:12 +0200] [17887] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed for creation: start_time=datetime.time(9, 15) end_time=datetime.time(10, 0) lesson_number=<LessonsEnum.ONE: '1'>
[2023-04-07 17:26:12 +0200] [17887] [DEBUG] [db.dao.base_dao] LessonModel DAO: Created entry in database: {'id': UUID('93c456de-d40b-4273-abd6-02d4d9d1550f'), 'lesson_number': <LessonsEnum.ONE: '1'>, 'start_time': datetime.time(9, 15), 'end_time': datetime.time(10, 0)}
[2023-04-07 17:26:24 +0200] [17887] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 17:26:24 +0200] [17887] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:26:24 +0200] [17887] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:26:24 +0200] [17887] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:26:24 +0200] [17887] [INFO] [services.module_service] ModuleService: Create module
[2023-04-07 17:26:24 +0200] [17887] [TRACE] [services.module_service] ModuleService: Create module with passed data module_name='module_1' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-07 17:26:24 +0200] [17887] [INFO] [services.module_service] ModuleService: Check if module with same parameters exists.
[2023-04-07 17:26:24 +0200] [17887] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-07 17:26:24 +0200] [17887] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'module_name': 'module_1', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-07 17:26:25 +0200] [17887] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-07 17:26:25 +0200] [17887] [INFO] [db.dao.base_dao] ModuleModel DAO: Create db entry
[2023-04-07 17:26:25 +0200] [17887] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed for creation: module_name='module_1' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-07 17:26:25 +0200] [17887] [DEBUG] [db.dao.base_dao] ModuleModel DAO: Created entry in database: {'id': UUID('121dd8f5-2767-4f5f-9f1f-cb391c47a043'), 'module_name': 'module_1', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-07 17:26:46 +0200] [17887] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 17:26:46 +0200] [17887] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:26:46 +0200] [17887] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:26:46 +0200] [17887] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:26:46 +0200] [17887] [INFO] [services.teacher_service] TeacherService: Create teachers
[2023-04-07 17:26:46 +0200] [17887] [TRACE] [services.teacher_service] TeacherService: Register teachers with passed data [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date='28-02-2002'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date='28-02-2002')]
[2023-04-07 17:26:46 +0200] [17887] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string1' second_name='string1' last_name='string' birth_date='28-02-2002'
[2023-04-07 17:26:46 +0200] [17887] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-07 17:26:46 +0200] [17887] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-07 17:26:46 +0200] [17887] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-07 17:26:46 +0200] [17887] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string3' second_name=None last_name='string3' birth_date='28-02-2002'
[2023-04-07 17:26:46 +0200] [17887] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-07 17:26:46 +0200] [17887] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-07 17:26:46 +0200] [17887] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-07 17:26:46 +0200] [17887] [DEBUG] [services.teacher_service] TeacherService: Teachers to be registered after check: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='vlW-ukI4f6uFfg'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='BneTBeS5y5rq-g')]
[2023-04-07 17:26:46 +0200] [17887] [INFO] [db.dao.base_dao] TeacherModel DAO: Create db entry
[2023-04-07 17:26:46 +0200] [17887] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed for creation: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='vlW-ukI4f6uFfg'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='BneTBeS5y5rq-g')]
[2023-04-07 17:26:46 +0200] [17887] [DEBUG] [db.dao.base_dao] TeacherModel DAO: Created entries in database: [{'id': UUID('86c57e9e-3198-4a60-b22e-ccb9cdde30f6'), 'registration_token': 'vlW-ukI4f6uFfg', 'registered_user': False, 'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 7, 15, 26, 46, 50200), 'updated_at': datetime.datetime(2023, 4, 7, 15, 26, 46, 50204), 'deleted_at': None}, {'id': UUID('7056563d-7ff3-4bcc-98d2-dcc9c399d666'), 'registration_token': 'BneTBeS5y5rq-g', 'registered_user': False, 'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 7, 15, 26, 46, 68733), 'updated_at': datetime.datetime(2023, 4, 7, 15, 26, 46, 68739), 'deleted_at': None}]
[2023-04-07 17:26:46 +0200] [17887] [DEBUG] [services.teacher_service] TeacherService: Received the answer from database: [<db.models.TeacherModel.TeacherModel object at 0x7fbebc2789a0>, <db.models.TeacherModel.TeacherModel object at 0x7fbebc338130>]
[2023-04-07 17:27:12 +0200] [17887] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 17:27:12 +0200] [17887] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:27:12 +0200] [17887] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:27:12 +0200] [17887] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:27:12 +0200] [17887] [INFO] [services.module_service] ModuleService: Get module by id: 121dd8f5-2767-4f5f-9f1f-cb391c47a043
[2023-04-07 17:27:12 +0200] [17887] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-07 17:27:12 +0200] [17887] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': '121dd8f5-2767-4f5f-9f1f-cb391c47a043'}
[2023-04-07 17:27:12 +0200] [17887] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-07 17:27:12 +0200] [17887] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-07 17:27:12 +0200] [17887] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: 86c57e9e-3198-4a60-b22e-ccb9cdde30f6
[2023-04-07 17:27:12 +0200] [17887] [INFO] [services.teacher_service] TeacherService: Get teacher by id: 86c57e9e-3198-4a60-b22e-ccb9cdde30f6
[2023-04-07 17:27:12 +0200] [17887] [INFO] [db.dao.base_dao] TeacherModel DAO: Get db entry by id: 86c57e9e-3198-4a60-b22e-ccb9cdde30f6
[2023-04-07 17:27:12 +0200] [17887] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-07 17:27:12 +0200] [17887] [TRACE] [services.teacher_service] TeacherService: Module 121dd8f5-2767-4f5f-9f1f-cb391c47a043 will be added to teacher's modules.
[2023-04-07 17:27:12 +0200] [17887] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-07 17:27:12 +0200] [17887] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: [<db.models.ModuleModel.ModuleModel object at 0x7fbebc243ee0>]
[2023-04-07 17:31:05 +0200] [17887] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 17:31:10 +0200] [17887] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 17:31:10 +0200] [17887] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 17:31:10 +0200] [17887] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:31:10 +0200] [17887] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:31:10 +0200] [17887] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:31:10 +0200] [17887] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 17:31:10 +0200] [17887] [TRACE] [services.auth_service] AuthService: Create session with user: 72ea809d-479a-4a12-a39d-48eb98e66f4a
[2023-04-07 17:31:10 +0200] [17887] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 17:31:10 +0200] [17887] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('72ea809d-479a-4a12-a39d-48eb98e66f4a') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 7, 15, 36, 10, 548634) refresh_expire_time=datetime.datetime(2023, 4, 9, 15, 31, 10, 548805) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4ODE3NzAsInN1YiI6ImFkbWluIn0.uo0kHTHsNM3tczMrKLXlNpTW3zH3OAO0YcMYeoOThvg' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNTQyNzAsInN1YiI6ImFkbWluIn0.RJGq4JBljNucnE3eiUiCEeVL7P_t0RtP4273WuKijrA' blocked=False is_active=True
[2023-04-07 17:31:10 +0200] [17887] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('60a3cc03-8e21-4778-90aa-1f7ad4bfc355'), 'user_id': UUID('72ea809d-479a-4a12-a39d-48eb98e66f4a'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4ODE3NzAsInN1YiI6ImFkbWluIn0.uo0kHTHsNM3tczMrKLXlNpTW3zH3OAO0YcMYeoOThvg', 'access_expire_time': datetime.datetime(2023, 4, 7, 15, 36, 10, 548634), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNTQyNzAsInN1YiI6ImFkbWluIn0.RJGq4JBljNucnE3eiUiCEeVL7P_t0RtP4273WuKijrA', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 15, 31, 10, 548805), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 15, 31, 10, 550990), 'updated_at': datetime.datetime(2023, 4, 7, 15, 31, 10, 550995)}
[2023-04-07 17:31:12 +0200] [17887] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 17:31:12 +0200] [17887] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:31:12 +0200] [17887] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:31:12 +0200] [17887] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:31:12 +0200] [17887] [INFO] [services.schedule_service] ScheduleService: Create schedule automatically
[2023-04-07 17:31:12 +0200] [17887] [TRACE] [services.schedule_service] ScheduleService: Create schedule automatically with passed data: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson_number=<LessonsEnum.ONE: '1'> group_number=<AcademicGroupsEnum.FIRST_1: '101'> module_id='121dd8f5-2767-4f5f-9f1f-cb391c47a043'
[2023-04-07 17:31:12 +0200] [17887] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 17:31:12 +0200] [17887] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.FIRST_1: '101'>, 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 17:31:12 +0200] [17887] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 17:35:20 +0200] [19162] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 17:35:20 +0200] [19162] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:35:20 +0200] [19162] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:35:20 +0200] [19162] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:35:20 +0200] [19162] [INFO] [services.schedule_service] ScheduleService: Create schedule automatically
[2023-04-07 17:35:20 +0200] [19162] [TRACE] [services.schedule_service] ScheduleService: Create schedule automatically with passed data: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson_number=<LessonsEnum.ONE: '1'> group_number=<AcademicGroupsEnum.FIRST_1: '101'> module_id='121dd8f5-2767-4f5f-9f1f-cb391c47a043'
[2023-04-07 17:35:20 +0200] [19162] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 17:35:20 +0200] [19162] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.FIRST_1: '101'>, 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 17:35:21 +0200] [19162] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 17:35:44 +0200] [19197] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 17:35:44 +0200] [19197] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:35:44 +0200] [19197] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:35:44 +0200] [19197] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:35:44 +0200] [19197] [INFO] [services.schedule_service] ScheduleService: Create schedule automatically
[2023-04-07 17:35:44 +0200] [19197] [TRACE] [services.schedule_service] ScheduleService: Create schedule automatically with passed data: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson_number=<LessonsEnum.ONE: '1'> group_number=<AcademicGroupsEnum.FIRST_1: '101'> module_id='121dd8f5-2767-4f5f-9f1f-cb391c47a043'
[2023-04-07 17:35:44 +0200] [19197] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 17:35:44 +0200] [19197] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.FIRST_1: '101'>, 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 17:35:46 +0200] [19197] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 17:35:46 +0200] [19197] [INFO] [services.module_service] ModuleService: Get module by id: 121dd8f5-2767-4f5f-9f1f-cb391c47a043
[2023-04-07 17:35:46 +0200] [19197] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-07 17:35:46 +0200] [19197] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': '121dd8f5-2767-4f5f-9f1f-cb391c47a043'}
[2023-04-07 17:35:48 +0200] [19197] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-07 17:35:48 +0200] [19197] [INFO] [db.dao.base_dao] RoomModel DAO: Get all db entries by parameters
[2023-04-07 17:35:48 +0200] [19197] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: skip: 0, limit: None, params: {'class_type': <ClassTypesEnum.LECTURE: 'lecture'>}
[2023-04-07 17:35:48 +0200] [19197] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 17:35:48 +0200] [19197] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Get db entry by parameters
[2023-04-07 17:35:48 +0200] [19197] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed to filter: params: {'room_id': UUID('53ee54d9-bcbd-4ca5-9aa4-417b336d5752'), 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 17:35:48 +0200] [19197] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: received a response from the database
[2023-04-07 17:35:48 +0200] [19197] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Get db entry by parameters
[2023-04-07 17:35:48 +0200] [19197] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed to filter: params: {'teacher_id': UUID('86c57e9e-3198-4a60-b22e-ccb9cdde30f6'), 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 17:35:48 +0200] [19197] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: received a response from the database
[2023-04-07 17:35:48 +0200] [19197] [INFO] [services.teacher_service] TeacherService: Set teacher busy
[2023-04-07 17:35:48 +0200] [19197] [TRACE] [services.teacher_service] TeacherService: Set teacher busy: teacher_id: 86c57e9e-3198-4a60-b22e-ccb9cdde30f6, data: weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True
[2023-04-07 17:35:48 +0200] [19197] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Get db entry by parameters
[2023-04-07 17:35:48 +0200] [19197] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed to filter: params: {'teacher_id': UUID('86c57e9e-3198-4a60-b22e-ccb9cdde30f6'), 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 17:35:48 +0200] [19197] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: received a response from the database
[2023-04-07 17:35:48 +0200] [19197] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Create db entry
[2023-04-07 17:35:48 +0200] [19197] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True teacher_id=UUID('86c57e9e-3198-4a60-b22e-ccb9cdde30f6')
[2023-04-07 17:35:48 +0200] [19197] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: Created entry in database: {'teacher_id': UUID('86c57e9e-3198-4a60-b22e-ccb9cdde30f6'), 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>, 'is_busy': True}
[2023-04-07 17:35:48 +0200] [19197] [INFO] [services.group_service] GroupService: Set group busy
[2023-04-07 17:35:48 +0200] [19197] [TRACE] [services.group_service] GroupService: Set group busy: group_number: 101, data: weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True
[2023-04-07 17:35:48 +0200] [19197] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 17:35:48 +0200] [19197] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.FIRST_1: '101'>, 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 17:35:48 +0200] [19197] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 17:35:48 +0200] [19197] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Create db entry
[2023-04-07 17:35:48 +0200] [19197] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True group_number=<AcademicGroupsEnum.FIRST_1: '101'>
[2023-04-07 17:35:48 +0200] [19197] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: Created entry in database: {'group_number': <AcademicGroupsEnum.FIRST_1: '101'>, 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>, 'is_busy': True}
[2023-04-07 17:35:48 +0200] [19197] [INFO] [services.room_service] RoomService: Set room busy
[2023-04-07 17:35:48 +0200] [19197] [TRACE] [services.room_service] RoomService: Set room busy: room_number: 102, data: weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True
[2023-04-07 17:35:48 +0200] [19197] [INFO] [services.room_service] RoomService: Get room by number
[2023-04-07 17:35:48 +0200] [19197] [TRACE] [services.room_service] RoomService: Get room by number: 102
[2023-04-07 17:35:48 +0200] [19197] [INFO] [db.dao.base_dao] RoomModel DAO: Get db entry by parameters
[2023-04-07 17:35:48 +0200] [19197] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: params: {'room_number': 102}
[2023-04-07 17:35:48 +0200] [19197] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 17:35:48 +0200] [19197] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Get db entry by parameters
[2023-04-07 17:35:48 +0200] [19197] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed to filter: params: {'room_id': UUID('53ee54d9-bcbd-4ca5-9aa4-417b336d5752'), 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 17:35:48 +0200] [19197] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: received a response from the database
[2023-04-07 17:35:48 +0200] [19197] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Create db entry
[2023-04-07 17:35:48 +0200] [19197] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True room_id=UUID('53ee54d9-bcbd-4ca5-9aa4-417b336d5752')
[2023-04-07 17:35:48 +0200] [19197] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: Created entry in database: {'room_id': UUID('53ee54d9-bcbd-4ca5-9aa4-417b336d5752'), 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>, 'is_busy': True}
[2023-04-07 17:36:42 +0200] [19243] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 17:36:45 +0200] [19243] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 17:36:45 +0200] [19243] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 17:36:45 +0200] [19243] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:36:45 +0200] [19243] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:36:45 +0200] [19243] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:36:45 +0200] [19243] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 17:36:45 +0200] [19243] [TRACE] [services.auth_service] AuthService: Create session with user: 72ea809d-479a-4a12-a39d-48eb98e66f4a
[2023-04-07 17:36:45 +0200] [19243] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 17:36:45 +0200] [19243] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('72ea809d-479a-4a12-a39d-48eb98e66f4a') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 7, 15, 41, 45, 931574) refresh_expire_time=datetime.datetime(2023, 4, 9, 15, 36, 45, 931716) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4ODIxMDUsInN1YiI6ImFkbWluIn0.ZEAv19MEPi7SLNk5zo4JHKjAnsdzvJuvmMNgrsGqO3Q' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNTQ2MDUsInN1YiI6ImFkbWluIn0.v7DE07x95yMi_MSqWEbMQy3EMGKoXmAbSDMj6KJIkgM' blocked=False is_active=True
[2023-04-07 17:36:45 +0200] [19243] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('546f3c73-401d-45bc-adc5-c63cf96a5867'), 'user_id': UUID('72ea809d-479a-4a12-a39d-48eb98e66f4a'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4ODIxMDUsInN1YiI6ImFkbWluIn0.ZEAv19MEPi7SLNk5zo4JHKjAnsdzvJuvmMNgrsGqO3Q', 'access_expire_time': datetime.datetime(2023, 4, 7, 15, 41, 45, 931574), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNTQ2MDUsInN1YiI6ImFkbWluIn0.v7DE07x95yMi_MSqWEbMQy3EMGKoXmAbSDMj6KJIkgM', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 15, 36, 45, 931716), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 15, 36, 45, 936229), 'updated_at': datetime.datetime(2023, 4, 7, 15, 36, 45, 936237)}
[2023-04-07 17:36:48 +0200] [19243] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 17:36:48 +0200] [19243] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:36:48 +0200] [19243] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:36:48 +0200] [19243] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:36:48 +0200] [19243] [INFO] [services.schedule_service] ScheduleService: Create schedule automatically
[2023-04-07 17:36:48 +0200] [19243] [TRACE] [services.schedule_service] ScheduleService: Create schedule automatically with passed data: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson_number=<LessonsEnum.ONE: '1'> group_number=<AcademicGroupsEnum.FIRST_1: '101'> module_id='121dd8f5-2767-4f5f-9f1f-cb391c47a043'
[2023-04-07 17:36:48 +0200] [19243] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 17:36:48 +0200] [19243] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.FIRST_1: '101'>, 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 17:36:49 +0200] [19243] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 17:37:07 +0200] [19243] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 17:37:07 +0200] [19243] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:37:07 +0200] [19243] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:37:07 +0200] [19243] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:37:07 +0200] [19243] [INFO] [services.schedule_service] ScheduleService: Create schedule automatically
[2023-04-07 17:37:07 +0200] [19243] [TRACE] [services.schedule_service] ScheduleService: Create schedule automatically with passed data: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson_number=<LessonsEnum.ONE: '1'> group_number=<AcademicGroupsEnum.SECOND_1: '102'> module_id='121dd8f5-2767-4f5f-9f1f-cb391c47a043'
[2023-04-07 17:37:07 +0200] [19243] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 17:37:07 +0200] [19243] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.SECOND_1: '102'>, 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 17:37:07 +0200] [19243] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 17:37:07 +0200] [19243] [INFO] [services.module_service] ModuleService: Get module by id: 121dd8f5-2767-4f5f-9f1f-cb391c47a043
[2023-04-07 17:37:07 +0200] [19243] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-07 17:37:07 +0200] [19243] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': '121dd8f5-2767-4f5f-9f1f-cb391c47a043'}
[2023-04-07 17:37:09 +0200] [19243] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-07 17:37:09 +0200] [19243] [INFO] [db.dao.base_dao] RoomModel DAO: Get all db entries by parameters
[2023-04-07 17:37:09 +0200] [19243] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: skip: 0, limit: None, params: {'class_type': <ClassTypesEnum.LECTURE: 'lecture'>}
[2023-04-07 17:37:09 +0200] [19243] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 17:37:09 +0200] [19243] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Get db entry by parameters
[2023-04-07 17:37:09 +0200] [19243] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed to filter: params: {'room_id': UUID('53ee54d9-bcbd-4ca5-9aa4-417b336d5752'), 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 17:37:09 +0200] [19243] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: received a response from the database
[2023-04-07 17:37:09 +0200] [19243] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get db entry by parameters
[2023-04-07 17:37:09 +0200] [19243] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: params: {'semester': <SemestersEnum.FIRST: '1'>, 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson_number': <LessonsEnum.ONE: '1'>, 'module_id': '121dd8f5-2767-4f5f-9f1f-cb391c47a043'}
[2023-04-07 17:37:09 +0200] [19243] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 17:38:04 +0200] [19338] [INFO] [services.user_service] UserService: Create user
[2023-04-07 17:38:04 +0200] [19338] [TRACE] [services.user_service] UserService: Create user with passed data role='admin' login='admin' password='1234567!' email='admin' id=None first_name='admin' second_name=None last_name='admin' birth_date='28-02-2002' registration_token='admin'
[2023-04-07 17:38:04 +0200] [19338] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:38:04 +0200] [19338] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:38:04 +0200] [19338] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:38:04 +0200] [19338] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:38:04 +0200] [19338] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'admin'}
[2023-04-07 17:38:04 +0200] [19338] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:38:04 +0200] [19338] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-07 17:38:04 +0200] [19338] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$DHnGW8SawOIPbUgC2/IpyeovVahD54aBVWD7Lc/7rohkegqW1c8T.' email='admin' id=None
[2023-04-07 17:38:04 +0200] [19338] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('46b69330-11ff-4bf0-a36b-9f3faba4ca1c'), 'login': 'admin', 'email': 'admin', 'password': '$2b$12$DHnGW8SawOIPbUgC2/IpyeovVahD54aBVWD7Lc/7rohkegqW1c8T.', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 15, 38, 4, 469409), 'updated_at': datetime.datetime(2023, 4, 7, 15, 38, 4, 469414)}
[2023-04-07 17:38:08 +0200] [19338] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 17:38:08 +0200] [19338] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 17:38:08 +0200] [19338] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:38:08 +0200] [19338] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:38:08 +0200] [19338] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:38:08 +0200] [19338] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 17:38:08 +0200] [19338] [TRACE] [services.auth_service] AuthService: Create session with user: 46b69330-11ff-4bf0-a36b-9f3faba4ca1c
[2023-04-07 17:38:08 +0200] [19338] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 17:38:08 +0200] [19338] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('46b69330-11ff-4bf0-a36b-9f3faba4ca1c') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 7, 15, 43, 8, 467287) refresh_expire_time=datetime.datetime(2023, 4, 9, 15, 38, 8, 467470) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4ODIxODgsInN1YiI6ImFkbWluIn0.INGMQSQN7zeaoDS71FMyjbaBr6opKFkArNxoaJQbX8Y' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNTQ2ODgsInN1YiI6ImFkbWluIn0._16MF7x60vJToIjwqZUDf-guTxcRWVe72l-1YBnY_Gw' blocked=False is_active=True
[2023-04-07 17:38:08 +0200] [19338] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('7bb0354e-d6df-4458-8f6a-4e7c8ede1915'), 'user_id': UUID('46b69330-11ff-4bf0-a36b-9f3faba4ca1c'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4ODIxODgsInN1YiI6ImFkbWluIn0.INGMQSQN7zeaoDS71FMyjbaBr6opKFkArNxoaJQbX8Y', 'access_expire_time': datetime.datetime(2023, 4, 7, 15, 43, 8, 467287), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNTQ2ODgsInN1YiI6ImFkbWluIn0._16MF7x60vJToIjwqZUDf-guTxcRWVe72l-1YBnY_Gw', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 15, 38, 8, 467470), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 15, 38, 8, 470353), 'updated_at': datetime.datetime(2023, 4, 7, 15, 38, 8, 470358)}
[2023-04-07 17:38:12 +0200] [19338] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 17:38:12 +0200] [19338] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:38:12 +0200] [19338] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:38:12 +0200] [19338] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:38:12 +0200] [19338] [INFO] [services.teacher_service] TeacherService: Create teachers
[2023-04-07 17:38:12 +0200] [19338] [TRACE] [services.teacher_service] TeacherService: Register teachers with passed data [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date='28-02-2002'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date='28-02-2002')]
[2023-04-07 17:38:12 +0200] [19338] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string1' second_name='string1' last_name='string' birth_date='28-02-2002'
[2023-04-07 17:38:12 +0200] [19338] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-07 17:38:12 +0200] [19338] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-07 17:38:12 +0200] [19338] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-07 17:38:12 +0200] [19338] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string3' second_name=None last_name='string3' birth_date='28-02-2002'
[2023-04-07 17:38:12 +0200] [19338] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-07 17:38:12 +0200] [19338] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-07 17:38:12 +0200] [19338] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-07 17:38:12 +0200] [19338] [DEBUG] [services.teacher_service] TeacherService: Teachers to be registered after check: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='DOQz9kow8sP5Mw'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='ciBL8LtgkehhWA')]
[2023-04-07 17:38:12 +0200] [19338] [INFO] [db.dao.base_dao] TeacherModel DAO: Create db entry
[2023-04-07 17:38:12 +0200] [19338] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed for creation: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='DOQz9kow8sP5Mw'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='ciBL8LtgkehhWA')]
[2023-04-07 17:38:15 +0200] [19338] [DEBUG] [db.dao.base_dao] TeacherModel DAO: Created entries in database: [{'id': UUID('9ed67721-4ff6-45e9-a0c4-2c047fb099ba'), 'registration_token': 'DOQz9kow8sP5Mw', 'registered_user': False, 'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 7, 15, 38, 12, 477273), 'updated_at': datetime.datetime(2023, 4, 7, 15, 38, 12, 477279), 'deleted_at': None}, {'id': UUID('8b426525-48bc-41d0-8757-df5fc544e9ef'), 'registration_token': 'ciBL8LtgkehhWA', 'registered_user': False, 'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 7, 15, 38, 15, 18266), 'updated_at': datetime.datetime(2023, 4, 7, 15, 38, 15, 18271), 'deleted_at': None}]
[2023-04-07 17:38:15 +0200] [19338] [DEBUG] [services.teacher_service] TeacherService: Received the answer from database: [<db.models.TeacherModel.TeacherModel object at 0x7f7c8de120d0>, <db.models.TeacherModel.TeacherModel object at 0x7f7c8b14ac40>]
[2023-04-07 17:38:23 +0200] [19338] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 17:38:23 +0200] [19338] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:38:23 +0200] [19338] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:38:23 +0200] [19338] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:38:23 +0200] [19338] [INFO] [services.room_service] RoomService: Create room
[2023-04-07 17:38:23 +0200] [19338] [TRACE] [services.room_service] RoomService: Create room with passed data room_number=102 class_type=<ClassTypesEnum.LECTURE: 'lecture'>
[2023-04-07 17:38:23 +0200] [19338] [DEBUG] [services.room_service] RoomService: Check if room with same number exists: 102
[2023-04-07 17:38:23 +0200] [19338] [INFO] [db.dao.base_dao] RoomModel DAO: Get db entry by parameters
[2023-04-07 17:38:23 +0200] [19338] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: params: {'room_number': 102}
[2023-04-07 17:38:23 +0200] [19338] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 17:38:23 +0200] [19338] [INFO] [db.dao.base_dao] RoomModel DAO: Create db entry
[2023-04-07 17:38:23 +0200] [19338] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed for creation: room_number=102 class_type=<ClassTypesEnum.LECTURE: 'lecture'>
[2023-04-07 17:38:23 +0200] [19338] [DEBUG] [db.dao.base_dao] RoomModel DAO: Created entry in database: {'id': UUID('1882516a-11ab-40df-a6b8-ef2daa07cedf'), 'room_number': 102, 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>}
[2023-04-07 17:38:37 +0200] [19338] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 17:38:37 +0200] [19338] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:38:37 +0200] [19338] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:38:37 +0200] [19338] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:38:37 +0200] [19338] [INFO] [services.module_service] ModuleService: Create module
[2023-04-07 17:38:37 +0200] [19338] [TRACE] [services.module_service] ModuleService: Create module with passed data module_name='module_1' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-07 17:38:37 +0200] [19338] [INFO] [services.module_service] ModuleService: Check if module with same parameters exists.
[2023-04-07 17:38:37 +0200] [19338] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-07 17:38:37 +0200] [19338] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'module_name': 'module_1', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-07 17:38:37 +0200] [19338] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-07 17:38:37 +0200] [19338] [INFO] [db.dao.base_dao] ModuleModel DAO: Create db entry
[2023-04-07 17:38:37 +0200] [19338] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed for creation: module_name='module_1' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-07 17:38:37 +0200] [19338] [DEBUG] [db.dao.base_dao] ModuleModel DAO: Created entry in database: {'id': UUID('3a1affb4-fc1b-442c-8abc-2d8443de00fa'), 'module_name': 'module_1', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-07 17:38:41 +0200] [19338] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 17:38:41 +0200] [19338] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:38:41 +0200] [19338] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:38:41 +0200] [19338] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:38:41 +0200] [19338] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-07 17:38:41 +0200] [19338] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data start_time='09:15' end_time='10:00' lesson_number=<LessonsEnum.ONE: '1'>
[2023-04-07 17:38:41 +0200] [19338] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 1
[2023-04-07 17:38:41 +0200] [19338] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-07 17:38:41 +0200] [19338] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-07 17:38:41 +0200] [19338] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-07 17:38:41 +0200] [19338] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 09:15:00 - 10:00:00
[2023-04-07 17:38:41 +0200] [19338] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-07 17:38:41 +0200] [19338] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 09:15:00 - 10:00:00
[2023-04-07 17:38:41 +0200] [19338] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database []
[2023-04-07 17:38:41 +0200] [19338] [INFO] [db.dao.base_dao] LessonModel DAO: Create db entry
[2023-04-07 17:38:41 +0200] [19338] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed for creation: start_time=datetime.time(9, 15) end_time=datetime.time(10, 0) lesson_number=<LessonsEnum.ONE: '1'>
[2023-04-07 17:38:41 +0200] [19338] [DEBUG] [db.dao.base_dao] LessonModel DAO: Created entry in database: {'id': UUID('7ab3382c-0694-45d1-bcd3-40253d110299'), 'lesson_number': <LessonsEnum.ONE: '1'>, 'start_time': datetime.time(9, 15), 'end_time': datetime.time(10, 0)}
[2023-04-07 17:41:36 +0200] [19338] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 17:41:36 +0200] [19338] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:41:36 +0200] [19338] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:41:36 +0200] [19338] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:41:36 +0200] [19338] [INFO] [services.module_service] ModuleService: Get module by id: 3a1affb4-fc1b-442c-8abc-2d8443de00fa
[2023-04-07 17:41:36 +0200] [19338] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-07 17:41:36 +0200] [19338] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': '3a1affb4-fc1b-442c-8abc-2d8443de00fa'}
[2023-04-07 17:41:36 +0200] [19338] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-07 17:41:36 +0200] [19338] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-07 17:41:36 +0200] [19338] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: 9ed67721-4ff6-45e9-a0c4-2c047fb099ba
[2023-04-07 17:41:36 +0200] [19338] [INFO] [services.teacher_service] TeacherService: Get teacher by id: 9ed67721-4ff6-45e9-a0c4-2c047fb099ba
[2023-04-07 17:41:36 +0200] [19338] [INFO] [db.dao.base_dao] TeacherModel DAO: Get db entry by id: 9ed67721-4ff6-45e9-a0c4-2c047fb099ba
[2023-04-07 17:41:36 +0200] [19338] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-07 17:41:36 +0200] [19338] [TRACE] [services.teacher_service] TeacherService: Module 3a1affb4-fc1b-442c-8abc-2d8443de00fa will be added to teacher's modules.
[2023-04-07 17:41:36 +0200] [19338] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-07 17:41:36 +0200] [19338] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: [<db.models.ModuleModel.ModuleModel object at 0x7f7c8b0a45b0>]
[2023-04-07 17:41:59 +0200] [19338] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 17:41:59 +0200] [19338] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:41:59 +0200] [19338] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:41:59 +0200] [19338] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:41:59 +0200] [19338] [INFO] [services.schedule_service] ScheduleService: Create schedule automatically
[2023-04-07 17:41:59 +0200] [19338] [TRACE] [services.schedule_service] ScheduleService: Create schedule automatically with passed data: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson_number=<LessonsEnum.ONE: '1'> group_number=<AcademicGroupsEnum.SECOND_1: '102'> module_id='3a1affb4-fc1b-442c-8abc-2d8443de00fa'
[2023-04-07 17:41:59 +0200] [19338] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 17:41:59 +0200] [19338] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.SECOND_1: '102'>, 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 17:41:59 +0200] [19338] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 17:41:59 +0200] [19338] [INFO] [services.module_service] ModuleService: Get module by id: 3a1affb4-fc1b-442c-8abc-2d8443de00fa
[2023-04-07 17:41:59 +0200] [19338] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-07 17:41:59 +0200] [19338] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': '3a1affb4-fc1b-442c-8abc-2d8443de00fa'}
[2023-04-07 17:41:59 +0200] [19338] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-07 17:41:59 +0200] [19338] [INFO] [db.dao.base_dao] RoomModel DAO: Get all db entries by parameters
[2023-04-07 17:41:59 +0200] [19338] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: skip: 0, limit: None, params: {'class_type': <ClassTypesEnum.LECTURE: 'lecture'>}
[2023-04-07 17:41:59 +0200] [19338] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 17:41:59 +0200] [19338] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Get db entry by parameters
[2023-04-07 17:41:59 +0200] [19338] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed to filter: params: {'room_id': UUID('1882516a-11ab-40df-a6b8-ef2daa07cedf'), 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 17:41:59 +0200] [19338] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: received a response from the database
[2023-04-07 17:41:59 +0200] [19338] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Get db entry by parameters
[2023-04-07 17:41:59 +0200] [19338] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed to filter: params: {'teacher_id': UUID('9ed67721-4ff6-45e9-a0c4-2c047fb099ba'), 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 17:41:59 +0200] [19338] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: received a response from the database
[2023-04-07 17:41:59 +0200] [19338] [INFO] [services.teacher_service] TeacherService: Set teacher busy
[2023-04-07 17:41:59 +0200] [19338] [TRACE] [services.teacher_service] TeacherService: Set teacher busy: teacher_id: 9ed67721-4ff6-45e9-a0c4-2c047fb099ba, data: weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True
[2023-04-07 17:41:59 +0200] [19338] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Get db entry by parameters
[2023-04-07 17:41:59 +0200] [19338] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed to filter: params: {'teacher_id': UUID('9ed67721-4ff6-45e9-a0c4-2c047fb099ba'), 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 17:41:59 +0200] [19338] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: received a response from the database
[2023-04-07 17:41:59 +0200] [19338] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Create db entry
[2023-04-07 17:41:59 +0200] [19338] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True teacher_id=UUID('9ed67721-4ff6-45e9-a0c4-2c047fb099ba')
[2023-04-07 17:41:59 +0200] [19338] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: Created entry in database: {'teacher_id': UUID('9ed67721-4ff6-45e9-a0c4-2c047fb099ba'), 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>, 'is_busy': True}
[2023-04-07 17:41:59 +0200] [19338] [INFO] [services.group_service] GroupService: Set group busy
[2023-04-07 17:41:59 +0200] [19338] [TRACE] [services.group_service] GroupService: Set group busy: group_number: 102, data: weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True
[2023-04-07 17:41:59 +0200] [19338] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 17:41:59 +0200] [19338] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.SECOND_1: '102'>, 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 17:41:59 +0200] [19338] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 17:41:59 +0200] [19338] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Create db entry
[2023-04-07 17:41:59 +0200] [19338] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True group_number=<AcademicGroupsEnum.SECOND_1: '102'>
[2023-04-07 17:41:59 +0200] [19338] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: Created entry in database: {'group_number': <AcademicGroupsEnum.SECOND_1: '102'>, 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>, 'is_busy': True}
[2023-04-07 17:41:59 +0200] [19338] [INFO] [services.room_service] RoomService: Set room busy
[2023-04-07 17:41:59 +0200] [19338] [TRACE] [services.room_service] RoomService: Set room busy: room_number: 102, data: weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True
[2023-04-07 17:41:59 +0200] [19338] [INFO] [services.room_service] RoomService: Get room by number
[2023-04-07 17:41:59 +0200] [19338] [TRACE] [services.room_service] RoomService: Get room by number: 102
[2023-04-07 17:41:59 +0200] [19338] [INFO] [db.dao.base_dao] RoomModel DAO: Get db entry by parameters
[2023-04-07 17:41:59 +0200] [19338] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: params: {'room_number': 102}
[2023-04-07 17:41:59 +0200] [19338] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 17:41:59 +0200] [19338] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Get db entry by parameters
[2023-04-07 17:41:59 +0200] [19338] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed to filter: params: {'room_id': UUID('1882516a-11ab-40df-a6b8-ef2daa07cedf'), 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 17:41:59 +0200] [19338] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: received a response from the database
[2023-04-07 17:41:59 +0200] [19338] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Create db entry
[2023-04-07 17:41:59 +0200] [19338] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True room_id=UUID('1882516a-11ab-40df-a6b8-ef2daa07cedf')
[2023-04-07 17:41:59 +0200] [19338] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: Created entry in database: {'room_id': UUID('1882516a-11ab-40df-a6b8-ef2daa07cedf'), 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>, 'is_busy': True}
[2023-04-07 17:41:59 +0200] [19338] [INFO] [db.dao.base_dao] ScheduleModel DAO: Create db entry
[2023-04-07 17:41:59 +0200] [19338] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed for creation: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson_number=<LessonsEnum.ONE: '1'> group_number=<AcademicGroupsEnum.SECOND_1: '102'> module_id='3a1affb4-fc1b-442c-8abc-2d8443de00fa' room_number=102 teacher_id=UUID('9ed67721-4ff6-45e9-a0c4-2c047fb099ba')
[2023-04-07 17:43:52 +0200] [19640] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 17:43:56 +0200] [19640] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 17:43:56 +0200] [19640] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 17:43:56 +0200] [19640] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:43:56 +0200] [19640] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:43:56 +0200] [19640] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:43:57 +0200] [19640] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 17:43:57 +0200] [19640] [TRACE] [services.auth_service] AuthService: Create session with user: 46b69330-11ff-4bf0-a36b-9f3faba4ca1c
[2023-04-07 17:43:57 +0200] [19640] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 17:43:57 +0200] [19640] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('46b69330-11ff-4bf0-a36b-9f3faba4ca1c') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 7, 15, 48, 57, 213383) refresh_expire_time=datetime.datetime(2023, 4, 9, 15, 43, 57, 213541) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4ODI1MzcsInN1YiI6ImFkbWluIn0.Pd_774VlhvVZm8zvR5WCCrwkwb-7b1COVfNOXmEQep4' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNTUwMzcsInN1YiI6ImFkbWluIn0.h7ixStr_Yes4vdI_hK-dzIi8jx1zNKadkmc5q9XWqJ0' blocked=False is_active=True
[2023-04-07 17:43:57 +0200] [19640] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('1cc8a281-0171-4182-8ad9-21d4e7fa4613'), 'user_id': UUID('46b69330-11ff-4bf0-a36b-9f3faba4ca1c'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4ODI1MzcsInN1YiI6ImFkbWluIn0.Pd_774VlhvVZm8zvR5WCCrwkwb-7b1COVfNOXmEQep4', 'access_expire_time': datetime.datetime(2023, 4, 7, 15, 48, 57, 213383), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNTUwMzcsInN1YiI6ImFkbWluIn0.h7ixStr_Yes4vdI_hK-dzIi8jx1zNKadkmc5q9XWqJ0', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 15, 43, 57, 213541), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 15, 43, 57, 217101), 'updated_at': datetime.datetime(2023, 4, 7, 15, 43, 57, 217106)}
[2023-04-07 17:43:59 +0200] [19640] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 17:43:59 +0200] [19640] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:43:59 +0200] [19640] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:43:59 +0200] [19640] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:43:59 +0200] [19640] [INFO] [services.schedule_service] ScheduleService: Create schedule automatically
[2023-04-07 17:43:59 +0200] [19640] [TRACE] [services.schedule_service] ScheduleService: Create schedule automatically with passed data: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson_number=<LessonsEnum.ONE: '1'> group_number=<AcademicGroupsEnum.SECOND_1: '102'> module_id='3a1affb4-fc1b-442c-8abc-2d8443de00fa'
[2023-04-07 17:43:59 +0200] [19640] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 17:43:59 +0200] [19640] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.SECOND_1: '102'>, 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 17:44:00 +0200] [19640] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 17:50:32 +0200] [19890] [INFO] [services.user_service] UserService: Create user
[2023-04-07 17:50:32 +0200] [19890] [TRACE] [services.user_service] UserService: Create user with passed data role='admin' login='admin' password='1234567!' email='admin' id=None first_name='admin' second_name=None last_name='admin' birth_date='28-02-2002' registration_token='admin'
[2023-04-07 17:50:32 +0200] [19890] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:50:32 +0200] [19890] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:50:32 +0200] [19890] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:50:32 +0200] [19890] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:50:32 +0200] [19890] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'admin'}
[2023-04-07 17:50:32 +0200] [19890] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:50:32 +0200] [19890] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-07 17:50:32 +0200] [19890] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$GicqppUSqH6WAOqsI2CszewA1yxN4KFneVRmfCBFW1EZXEDeBrbTu' email='admin' id=None
[2023-04-07 17:50:32 +0200] [19890] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('925f9d4d-0344-4a0e-ad0e-f780e0a1f76f'), 'login': 'admin', 'email': 'admin', 'password': '$2b$12$GicqppUSqH6WAOqsI2CszewA1yxN4KFneVRmfCBFW1EZXEDeBrbTu', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 15, 50, 32, 566440), 'updated_at': datetime.datetime(2023, 4, 7, 15, 50, 32, 566444)}
[2023-04-07 17:50:35 +0200] [19890] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 17:50:35 +0200] [19890] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 17:50:35 +0200] [19890] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:50:35 +0200] [19890] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:50:35 +0200] [19890] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:50:35 +0200] [19890] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 17:50:35 +0200] [19890] [TRACE] [services.auth_service] AuthService: Create session with user: 925f9d4d-0344-4a0e-ad0e-f780e0a1f76f
[2023-04-07 17:50:35 +0200] [19890] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 17:50:35 +0200] [19890] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('925f9d4d-0344-4a0e-ad0e-f780e0a1f76f') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 7, 15, 55, 35, 568222) refresh_expire_time=datetime.datetime(2023, 4, 9, 15, 50, 35, 568369) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4ODI5MzUsInN1YiI6ImFkbWluIn0.Exs4pojzTSQCIGlhfTflKL4xQJ_se-9NF1CTpQ-UCt4' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNTU0MzUsInN1YiI6ImFkbWluIn0.BkhN7us4Eskb6oBJYMOetEeP8a-Td18e1dbVhsYAgKw' blocked=False is_active=True
[2023-04-07 17:50:35 +0200] [19890] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('d13398c9-7920-401b-8adf-b0a4199593e5'), 'user_id': UUID('925f9d4d-0344-4a0e-ad0e-f780e0a1f76f'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4ODI5MzUsInN1YiI6ImFkbWluIn0.Exs4pojzTSQCIGlhfTflKL4xQJ_se-9NF1CTpQ-UCt4', 'access_expire_time': datetime.datetime(2023, 4, 7, 15, 55, 35, 568222), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNTU0MzUsInN1YiI6ImFkbWluIn0.BkhN7us4Eskb6oBJYMOetEeP8a-Td18e1dbVhsYAgKw', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 15, 50, 35, 568369), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 15, 50, 35, 571134), 'updated_at': datetime.datetime(2023, 4, 7, 15, 50, 35, 571139)}
[2023-04-07 17:50:42 +0200] [19890] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 17:50:42 +0200] [19890] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:50:42 +0200] [19890] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:50:42 +0200] [19890] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:50:42 +0200] [19890] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-07 17:50:42 +0200] [19890] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data start_time='09:15' end_time='10:00' lesson_number=<LessonsEnum.ONE: '1'>
[2023-04-07 17:50:42 +0200] [19890] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 1
[2023-04-07 17:50:42 +0200] [19890] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-07 17:50:42 +0200] [19890] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-07 17:50:43 +0200] [19890] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-07 17:50:43 +0200] [19890] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 09:15:00 - 10:00:00
[2023-04-07 17:50:43 +0200] [19890] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-07 17:50:43 +0200] [19890] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 09:15:00 - 10:00:00
[2023-04-07 17:50:43 +0200] [19890] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database []
[2023-04-07 17:50:43 +0200] [19890] [INFO] [db.dao.base_dao] LessonModel DAO: Create db entry
[2023-04-07 17:50:43 +0200] [19890] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed for creation: start_time=datetime.time(9, 15) end_time=datetime.time(10, 0) lesson_number=<LessonsEnum.ONE: '1'>
[2023-04-07 17:50:44 +0200] [19890] [DEBUG] [db.dao.base_dao] LessonModel DAO: Created entry in database: {'id': UUID('73adc8ba-39a0-4a0c-8fb6-372ec2992058'), 'lesson_number': <LessonsEnum.ONE: '1'>, 'start_time': datetime.time(9, 15), 'end_time': datetime.time(10, 0)}
[2023-04-07 17:50:50 +0200] [19890] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 17:50:50 +0200] [19890] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:50:50 +0200] [19890] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:50:50 +0200] [19890] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:50:50 +0200] [19890] [INFO] [services.room_service] RoomService: Create room
[2023-04-07 17:50:50 +0200] [19890] [TRACE] [services.room_service] RoomService: Create room with passed data room_number=102 class_type=<ClassTypesEnum.LECTURE: 'lecture'>
[2023-04-07 17:50:50 +0200] [19890] [DEBUG] [services.room_service] RoomService: Check if room with same number exists: 102
[2023-04-07 17:50:50 +0200] [19890] [INFO] [db.dao.base_dao] RoomModel DAO: Get db entry by parameters
[2023-04-07 17:50:50 +0200] [19890] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: params: {'room_number': 102}
[2023-04-07 17:50:51 +0200] [19890] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 17:50:51 +0200] [19890] [INFO] [db.dao.base_dao] RoomModel DAO: Create db entry
[2023-04-07 17:50:51 +0200] [19890] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed for creation: room_number=102 class_type=<ClassTypesEnum.LECTURE: 'lecture'>
[2023-04-07 17:50:51 +0200] [19890] [DEBUG] [db.dao.base_dao] RoomModel DAO: Created entry in database: {'id': UUID('63b92fa2-3ac5-4fac-a8bc-c3621104414d'), 'room_number': 102, 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>}
[2023-04-07 17:50:59 +0200] [19890] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 17:50:59 +0200] [19890] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:50:59 +0200] [19890] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:50:59 +0200] [19890] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:50:59 +0200] [19890] [INFO] [services.module_service] ModuleService: Create module
[2023-04-07 17:50:59 +0200] [19890] [TRACE] [services.module_service] ModuleService: Create module with passed data module_name='module_1' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-07 17:50:59 +0200] [19890] [INFO] [services.module_service] ModuleService: Check if module with same parameters exists.
[2023-04-07 17:50:59 +0200] [19890] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-07 17:50:59 +0200] [19890] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'module_name': 'module_1', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-07 17:51:00 +0200] [19890] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-07 17:51:00 +0200] [19890] [INFO] [db.dao.base_dao] ModuleModel DAO: Create db entry
[2023-04-07 17:51:00 +0200] [19890] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed for creation: module_name='module_1' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-07 17:51:00 +0200] [19890] [DEBUG] [db.dao.base_dao] ModuleModel DAO: Created entry in database: {'id': UUID('fa4039fd-d328-4d57-9a55-36a4b0cddee5'), 'module_name': 'module_1', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-07 17:51:13 +0200] [19890] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 17:51:13 +0200] [19890] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:51:13 +0200] [19890] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:51:13 +0200] [19890] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:51:13 +0200] [19890] [INFO] [services.teacher_service] TeacherService: Create teachers
[2023-04-07 17:51:13 +0200] [19890] [TRACE] [services.teacher_service] TeacherService: Register teachers with passed data [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date='28-02-2002'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date='28-02-2002')]
[2023-04-07 17:51:13 +0200] [19890] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string1' second_name='string1' last_name='string' birth_date='28-02-2002'
[2023-04-07 17:51:13 +0200] [19890] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-07 17:51:13 +0200] [19890] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-07 17:51:13 +0200] [19890] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-07 17:51:13 +0200] [19890] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string3' second_name=None last_name='string3' birth_date='28-02-2002'
[2023-04-07 17:51:13 +0200] [19890] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-07 17:51:13 +0200] [19890] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-07 17:51:13 +0200] [19890] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-07 17:51:13 +0200] [19890] [DEBUG] [services.teacher_service] TeacherService: Teachers to be registered after check: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='VwC2e-DKU2g2-Q'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='jyUgCFpkwUyaKg')]
[2023-04-07 17:51:13 +0200] [19890] [INFO] [db.dao.base_dao] TeacherModel DAO: Create db entry
[2023-04-07 17:51:13 +0200] [19890] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed for creation: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='VwC2e-DKU2g2-Q'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='jyUgCFpkwUyaKg')]
[2023-04-07 17:51:13 +0200] [19890] [DEBUG] [db.dao.base_dao] TeacherModel DAO: Created entries in database: [{'id': UUID('ff0259c1-8506-41f0-ad37-963e9e25032c'), 'registration_token': 'VwC2e-DKU2g2-Q', 'registered_user': False, 'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 7, 15, 51, 13, 480284), 'updated_at': datetime.datetime(2023, 4, 7, 15, 51, 13, 480289), 'deleted_at': None}, {'id': UUID('060a6394-118c-457d-ad90-11f3ab6323c2'), 'registration_token': 'jyUgCFpkwUyaKg', 'registered_user': False, 'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 7, 15, 51, 13, 496179), 'updated_at': datetime.datetime(2023, 4, 7, 15, 51, 13, 496183), 'deleted_at': None}]
[2023-04-07 17:51:13 +0200] [19890] [DEBUG] [services.teacher_service] TeacherService: Received the answer from database: [<db.models.TeacherModel.TeacherModel object at 0x7f49e73f3790>, <db.models.TeacherModel.TeacherModel object at 0x7f49e74f6f70>]
[2023-04-07 17:51:19 +0200] [19890] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 17:51:19 +0200] [19890] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:51:19 +0200] [19890] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:51:19 +0200] [19890] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:51:19 +0200] [19890] [INFO] [services.module_service] ModuleService: Get module by id: fa4039fd-d328-4d57-9a55-36a4b0cddee5
[2023-04-07 17:51:19 +0200] [19890] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-07 17:51:19 +0200] [19890] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': 'fa4039fd-d328-4d57-9a55-36a4b0cddee5'}
[2023-04-07 17:51:19 +0200] [19890] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-07 17:51:19 +0200] [19890] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-07 17:51:19 +0200] [19890] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: ff0259c1-8506-41f0-ad37-963e9e25032c
[2023-04-07 17:51:19 +0200] [19890] [INFO] [services.teacher_service] TeacherService: Get teacher by id: ff0259c1-8506-41f0-ad37-963e9e25032c
[2023-04-07 17:51:19 +0200] [19890] [INFO] [db.dao.base_dao] TeacherModel DAO: Get db entry by id: ff0259c1-8506-41f0-ad37-963e9e25032c
[2023-04-07 17:51:19 +0200] [19890] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-07 17:51:19 +0200] [19890] [TRACE] [services.teacher_service] TeacherService: Module fa4039fd-d328-4d57-9a55-36a4b0cddee5 will be added to teacher's modules.
[2023-04-07 17:51:19 +0200] [19890] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-07 17:51:19 +0200] [19890] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: [<db.models.ModuleModel.ModuleModel object at 0x7f49e73ba4f0>]
[2023-04-07 17:51:25 +0200] [19890] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 17:51:25 +0200] [19890] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 17:51:25 +0200] [19890] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 17:51:25 +0200] [19890] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 17:51:25 +0200] [19890] [INFO] [services.schedule_service] ScheduleService: Create schedule automatically
[2023-04-07 17:51:25 +0200] [19890] [TRACE] [services.schedule_service] ScheduleService: Create schedule automatically with passed data: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson_number=<LessonsEnum.ONE: '1'> group_number=<AcademicGroupsEnum.SECOND_1: '102'> module_id='fa4039fd-d328-4d57-9a55-36a4b0cddee5'
[2023-04-07 17:51:25 +0200] [19890] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 17:51:25 +0200] [19890] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.SECOND_1: '102'>, 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 17:51:25 +0200] [19890] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 17:51:25 +0200] [19890] [INFO] [services.module_service] ModuleService: Get module by id: fa4039fd-d328-4d57-9a55-36a4b0cddee5
[2023-04-07 17:51:25 +0200] [19890] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-07 17:51:25 +0200] [19890] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': 'fa4039fd-d328-4d57-9a55-36a4b0cddee5'}
[2023-04-07 17:51:25 +0200] [19890] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-07 17:51:25 +0200] [19890] [INFO] [db.dao.base_dao] RoomModel DAO: Get all db entries by parameters
[2023-04-07 17:51:25 +0200] [19890] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: skip: 0, limit: None, params: {'class_type': <ClassTypesEnum.LECTURE: 'lecture'>}
[2023-04-07 17:51:26 +0200] [19890] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 17:51:26 +0200] [19890] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Get db entry by parameters
[2023-04-07 17:51:26 +0200] [19890] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed to filter: params: {'room_id': UUID('63b92fa2-3ac5-4fac-a8bc-c3621104414d'), 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 17:51:26 +0200] [19890] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: received a response from the database
[2023-04-07 17:51:26 +0200] [19890] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Get db entry by parameters
[2023-04-07 17:51:26 +0200] [19890] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed to filter: params: {'teacher_id': UUID('ff0259c1-8506-41f0-ad37-963e9e25032c'), 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 17:51:26 +0200] [19890] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: received a response from the database
[2023-04-07 17:51:26 +0200] [19890] [INFO] [services.teacher_service] TeacherService: Set teacher busy
[2023-04-07 17:51:26 +0200] [19890] [TRACE] [services.teacher_service] TeacherService: Set teacher busy: teacher_id: ff0259c1-8506-41f0-ad37-963e9e25032c, data: weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True
[2023-04-07 17:51:26 +0200] [19890] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Get db entry by parameters
[2023-04-07 17:51:26 +0200] [19890] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed to filter: params: {'teacher_id': UUID('ff0259c1-8506-41f0-ad37-963e9e25032c'), 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 17:51:26 +0200] [19890] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: received a response from the database
[2023-04-07 17:51:26 +0200] [19890] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Create db entry
[2023-04-07 17:51:26 +0200] [19890] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True teacher_id=UUID('ff0259c1-8506-41f0-ad37-963e9e25032c')
[2023-04-07 17:51:26 +0200] [19890] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: Created entry in database: {'teacher_id': UUID('ff0259c1-8506-41f0-ad37-963e9e25032c'), 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>, 'is_busy': True}
[2023-04-07 17:51:26 +0200] [19890] [INFO] [services.group_service] GroupService: Set group busy
[2023-04-07 17:51:26 +0200] [19890] [TRACE] [services.group_service] GroupService: Set group busy: group_number: 102, data: weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True
[2023-04-07 17:51:26 +0200] [19890] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 17:51:26 +0200] [19890] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.SECOND_1: '102'>, 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 17:51:26 +0200] [19890] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 17:51:26 +0200] [19890] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Create db entry
[2023-04-07 17:51:26 +0200] [19890] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True group_number=<AcademicGroupsEnum.SECOND_1: '102'>
[2023-04-07 17:51:26 +0200] [19890] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: Created entry in database: {'group_number': <AcademicGroupsEnum.SECOND_1: '102'>, 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>, 'is_busy': True}
[2023-04-07 17:51:26 +0200] [19890] [INFO] [services.room_service] RoomService: Set room busy
[2023-04-07 17:51:26 +0200] [19890] [TRACE] [services.room_service] RoomService: Set room busy: room_number: 102, data: weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True
[2023-04-07 17:51:26 +0200] [19890] [INFO] [services.room_service] RoomService: Get room by number
[2023-04-07 17:51:26 +0200] [19890] [TRACE] [services.room_service] RoomService: Get room by number: 102
[2023-04-07 17:51:26 +0200] [19890] [INFO] [db.dao.base_dao] RoomModel DAO: Get db entry by parameters
[2023-04-07 17:51:26 +0200] [19890] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: params: {'room_number': 102}
[2023-04-07 17:51:26 +0200] [19890] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 17:51:26 +0200] [19890] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Get db entry by parameters
[2023-04-07 17:51:26 +0200] [19890] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed to filter: params: {'room_id': UUID('63b92fa2-3ac5-4fac-a8bc-c3621104414d'), 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 17:51:26 +0200] [19890] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: received a response from the database
[2023-04-07 17:51:26 +0200] [19890] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Create db entry
[2023-04-07 17:51:26 +0200] [19890] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True room_id=UUID('63b92fa2-3ac5-4fac-a8bc-c3621104414d')
[2023-04-07 17:51:26 +0200] [19890] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: Created entry in database: {'room_id': UUID('63b92fa2-3ac5-4fac-a8bc-c3621104414d'), 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>, 'is_busy': True}
[2023-04-07 17:51:26 +0200] [19890] [INFO] [db.dao.base_dao] ScheduleModel DAO: Create db entry
[2023-04-07 17:51:26 +0200] [19890] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed for creation: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson_number=<LessonsEnum.ONE: '1'> group_number=<AcademicGroupsEnum.SECOND_1: '102'> module_id='fa4039fd-d328-4d57-9a55-36a4b0cddee5' room_number=102 teacher_id=UUID('ff0259c1-8506-41f0-ad37-963e9e25032c')
[2023-04-07 17:51:26 +0200] [19890] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: Created entry in database: {'id': UUID('045e66d2-a761-4a32-ac38-82513e552431'), 'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.SECOND_1: '102'>, 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson_number': <LessonsEnum.ONE: '1'>, 'module_id': UUID('fa4039fd-d328-4d57-9a55-36a4b0cddee5'), 'room_number': 102, 'teacher_id': UUID('ff0259c1-8506-41f0-ad37-963e9e25032c'), 'created_at': datetime.datetime(2023, 4, 7, 15, 51, 26, 66093), 'updated_at': datetime.datetime(2023, 4, 7, 15, 51, 26, 66099)}
[2023-04-07 18:08:49 +0200] [20548] [INFO] [services.user_service] UserService: Create user
[2023-04-07 18:08:49 +0200] [20548] [TRACE] [services.user_service] UserService: Create user with passed data role='admin' login='admin' password='1234567!' email='admin' id=None first_name='admin' second_name=None last_name='admin' birth_date='28-02-2002' registration_token='admin'
[2023-04-07 18:08:49 +0200] [20548] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 18:08:49 +0200] [20548] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 18:08:49 +0200] [20548] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 18:08:49 +0200] [20548] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 18:08:49 +0200] [20548] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'email': 'admin'}
[2023-04-07 18:08:49 +0200] [20548] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 18:08:49 +0200] [20548] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-07 18:08:49 +0200] [20548] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$q.RjZQLAxPDH/T7lxTDLKuRxbed4H5OpvI.OnVOcEYFOp3OBN3LLW' email='admin' id=None
[2023-04-07 18:08:49 +0200] [20548] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('51dbcc52-a703-43dd-8de9-4467f58a8ade'), 'login': 'admin', 'email': 'admin', 'password': '$2b$12$q.RjZQLAxPDH/T7lxTDLKuRxbed4H5OpvI.OnVOcEYFOp3OBN3LLW', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 16, 8, 49, 391943), 'updated_at': datetime.datetime(2023, 4, 7, 16, 8, 49, 391949)}
[2023-04-07 18:08:51 +0200] [20548] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 18:08:51 +0200] [20548] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 18:08:51 +0200] [20548] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 18:08:51 +0200] [20548] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 18:08:51 +0200] [20548] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 18:08:51 +0200] [20548] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 18:08:51 +0200] [20548] [TRACE] [services.auth_service] AuthService: Create session with user: 51dbcc52-a703-43dd-8de9-4467f58a8ade
[2023-04-07 18:08:51 +0200] [20548] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 18:08:51 +0200] [20548] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('51dbcc52-a703-43dd-8de9-4467f58a8ade') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 7, 16, 13, 51, 941082) refresh_expire_time=datetime.datetime(2023, 4, 9, 16, 8, 51, 941232) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4ODQwMzEsInN1YiI6ImFkbWluIn0.3jbcpxFgwtaoe1l3YjowlOKiqvvcDk4P3BaEDJa5NXI' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNTY1MzEsInN1YiI6ImFkbWluIn0.MRjgq59t1a0loImRl-53haEAte651-URZ_Wz1NAWWXw' blocked=False is_active=True
[2023-04-07 18:08:51 +0200] [20548] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('48663cc5-36f2-4297-98f7-57ee70e5f608'), 'user_id': UUID('51dbcc52-a703-43dd-8de9-4467f58a8ade'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4ODQwMzEsInN1YiI6ImFkbWluIn0.3jbcpxFgwtaoe1l3YjowlOKiqvvcDk4P3BaEDJa5NXI', 'access_expire_time': datetime.datetime(2023, 4, 7, 16, 13, 51, 941082), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNTY1MzEsInN1YiI6ImFkbWluIn0.MRjgq59t1a0loImRl-53haEAte651-URZ_Wz1NAWWXw', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 16, 8, 51, 941232), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 16, 8, 51, 943925), 'updated_at': datetime.datetime(2023, 4, 7, 16, 8, 51, 943931)}
[2023-04-07 18:08:55 +0200] [20548] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 18:08:55 +0200] [20548] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 18:08:55 +0200] [20548] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 18:08:55 +0200] [20548] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 18:08:55 +0200] [20548] [INFO] [services.teacher_service] TeacherService: Create teachers
[2023-04-07 18:08:55 +0200] [20548] [TRACE] [services.teacher_service] TeacherService: Register teachers with passed data [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date='28-02-2002'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date='28-02-2002')]
[2023-04-07 18:08:55 +0200] [20548] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string1' second_name='string1' last_name='string' birth_date='28-02-2002'
[2023-04-07 18:08:55 +0200] [20548] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-07 18:08:55 +0200] [20548] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-07 18:08:55 +0200] [20548] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-07 18:08:55 +0200] [20548] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string3' second_name=None last_name='string3' birth_date='28-02-2002'
[2023-04-07 18:08:55 +0200] [20548] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-07 18:08:55 +0200] [20548] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-07 18:08:55 +0200] [20548] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-07 18:08:55 +0200] [20548] [DEBUG] [services.teacher_service] TeacherService: Teachers to be registered after check: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='vCL-vc4TRoFRjA'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='bu9Wf1HgvurFWw')]
[2023-04-07 18:08:55 +0200] [20548] [INFO] [db.dao.base_dao] TeacherModel DAO: Create db entry
[2023-04-07 18:08:55 +0200] [20548] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed for creation: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='vCL-vc4TRoFRjA'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='bu9Wf1HgvurFWw')]
[2023-04-07 18:08:58 +0200] [20548] [DEBUG] [db.dao.base_dao] TeacherModel DAO: Created entries in database: [{'id': UUID('20a669b7-3e31-4cfc-be32-525822f0b2e3'), 'registration_token': 'vCL-vc4TRoFRjA', 'registered_user': False, 'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 7, 16, 8, 55, 960003), 'updated_at': datetime.datetime(2023, 4, 7, 16, 8, 55, 960008), 'deleted_at': None}, {'id': UUID('dcb4f5d9-40e0-4444-963b-8f491b8c573f'), 'registration_token': 'bu9Wf1HgvurFWw', 'registered_user': False, 'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 7, 16, 8, 58, 510092), 'updated_at': datetime.datetime(2023, 4, 7, 16, 8, 58, 510099), 'deleted_at': None}]
[2023-04-07 18:08:58 +0200] [20548] [DEBUG] [services.teacher_service] TeacherService: Received the answer from database: [<db.models.TeacherModel.TeacherModel object at 0x7f46bc2fbca0>, <db.models.TeacherModel.TeacherModel object at 0x7f46bc2d2e20>]
[2023-04-07 18:09:02 +0200] [20548] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 18:09:02 +0200] [20548] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 18:09:02 +0200] [20548] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 18:09:02 +0200] [20548] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 18:09:02 +0200] [20548] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-07 18:09:02 +0200] [20548] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data start_time='09:15' end_time='10:00' lesson_number=<LessonsEnum.ONE: '1'>
[2023-04-07 18:09:02 +0200] [20548] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 1
[2023-04-07 18:09:02 +0200] [20548] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-07 18:09:02 +0200] [20548] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-07 18:09:02 +0200] [20548] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-07 18:09:02 +0200] [20548] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 09:15:00 - 10:00:00
[2023-04-07 18:09:02 +0200] [20548] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-07 18:09:02 +0200] [20548] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 09:15:00 - 10:00:00
[2023-04-07 18:09:02 +0200] [20548] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database []
[2023-04-07 18:09:02 +0200] [20548] [INFO] [db.dao.base_dao] LessonModel DAO: Create db entry
[2023-04-07 18:09:02 +0200] [20548] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed for creation: start_time=datetime.time(9, 15) end_time=datetime.time(10, 0) lesson_number=<LessonsEnum.ONE: '1'>
[2023-04-07 18:09:02 +0200] [20548] [DEBUG] [db.dao.base_dao] LessonModel DAO: Created entry in database: {'id': UUID('2d2d1da9-19c6-4064-a9b2-5fef0515bb5a'), 'lesson_number': <LessonsEnum.ONE: '1'>, 'start_time': datetime.time(9, 15), 'end_time': datetime.time(10, 0)}
[2023-04-07 18:09:06 +0200] [20548] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 18:09:06 +0200] [20548] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 18:09:06 +0200] [20548] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 18:09:06 +0200] [20548] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 18:09:06 +0200] [20548] [INFO] [services.room_service] RoomService: Create room
[2023-04-07 18:09:06 +0200] [20548] [TRACE] [services.room_service] RoomService: Create room with passed data room_number=102 class_type=<ClassTypesEnum.LECTURE: 'lecture'>
[2023-04-07 18:09:06 +0200] [20548] [DEBUG] [services.room_service] RoomService: Check if room with same number exists: 102
[2023-04-07 18:09:06 +0200] [20548] [INFO] [db.dao.base_dao] RoomModel DAO: Get db entry by parameters
[2023-04-07 18:09:06 +0200] [20548] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: params: {'room_number': 102}
[2023-04-07 18:09:06 +0200] [20548] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 18:09:06 +0200] [20548] [INFO] [db.dao.base_dao] RoomModel DAO: Create db entry
[2023-04-07 18:09:06 +0200] [20548] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed for creation: room_number=102 class_type=<ClassTypesEnum.LECTURE: 'lecture'>
[2023-04-07 18:09:06 +0200] [20548] [DEBUG] [db.dao.base_dao] RoomModel DAO: Created entry in database: {'id': UUID('d4d2852b-89c9-46d1-83a0-c1fdb84592a4'), 'room_number': 102, 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>}
[2023-04-07 18:09:12 +0200] [20548] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 18:09:12 +0200] [20548] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 18:09:12 +0200] [20548] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 18:09:12 +0200] [20548] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 18:09:12 +0200] [20548] [INFO] [services.module_service] ModuleService: Create module
[2023-04-07 18:09:12 +0200] [20548] [TRACE] [services.module_service] ModuleService: Create module with passed data module_name='module_1' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-07 18:09:12 +0200] [20548] [INFO] [services.module_service] ModuleService: Check if module with same parameters exists.
[2023-04-07 18:09:12 +0200] [20548] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-07 18:09:12 +0200] [20548] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'module_name': 'module_1', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-07 18:09:12 +0200] [20548] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-07 18:09:12 +0200] [20548] [INFO] [db.dao.base_dao] ModuleModel DAO: Create db entry
[2023-04-07 18:09:12 +0200] [20548] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed for creation: module_name='module_1' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-07 18:09:12 +0200] [20548] [DEBUG] [db.dao.base_dao] ModuleModel DAO: Created entry in database: {'id': UUID('ad88b24f-9c3b-4221-8274-08a46b8672a6'), 'module_name': 'module_1', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-07 18:09:16 +0200] [20548] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 18:09:16 +0200] [20548] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 18:09:16 +0200] [20548] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 18:09:16 +0200] [20548] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 18:09:16 +0200] [20548] [INFO] [services.schedule_service] ScheduleService: Create schedule automatically
[2023-04-07 18:09:16 +0200] [20548] [TRACE] [services.schedule_service] ScheduleService: Create schedule automatically with passed data: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson_number=<LessonsEnum.ONE: '1'> group_number=<AcademicGroupsEnum.SECOND_1: '102'> module_id='ad88b24f-9c3b-4221-8274-08a46b8672a6'
[2023-04-07 18:09:16 +0200] [20548] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 18:09:16 +0200] [20548] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.SECOND_1: '102'>, 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 18:09:16 +0200] [20548] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 18:09:16 +0200] [20548] [INFO] [services.module_service] ModuleService: Get module by id: ad88b24f-9c3b-4221-8274-08a46b8672a6
[2023-04-07 18:09:16 +0200] [20548] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-07 18:09:16 +0200] [20548] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': 'ad88b24f-9c3b-4221-8274-08a46b8672a6'}
[2023-04-07 18:09:16 +0200] [20548] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-07 18:09:16 +0200] [20548] [INFO] [db.dao.base_dao] RoomModel DAO: Get all db entries by parameters
[2023-04-07 18:09:16 +0200] [20548] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: skip: 0, limit: None, params: {'class_type': <ClassTypesEnum.LECTURE: 'lecture'>}
[2023-04-07 18:09:16 +0200] [20548] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 18:09:16 +0200] [20548] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Get db entry by parameters
[2023-04-07 18:09:16 +0200] [20548] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed to filter: params: {'room_id': UUID('d4d2852b-89c9-46d1-83a0-c1fdb84592a4'), 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 18:09:16 +0200] [20548] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: received a response from the database
[2023-04-07 18:09:16 +0200] [20548] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get db entry by parameters
[2023-04-07 18:09:16 +0200] [20548] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: params: {'semester': <SemestersEnum.FIRST: '1'>, 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson_number': <LessonsEnum.ONE: '1'>, 'module_id': 'ad88b24f-9c3b-4221-8274-08a46b8672a6'}
[2023-04-07 18:09:16 +0200] [20548] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 18:10:24 +0200] [20548] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 18:10:24 +0200] [20548] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 18:10:24 +0200] [20548] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 18:10:24 +0200] [20548] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 18:10:24 +0200] [20548] [INFO] [services.module_service] ModuleService: Get module by id: ad88b24f-9c3b-4221-8274-08a46b8672a6
[2023-04-07 18:10:24 +0200] [20548] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-07 18:10:24 +0200] [20548] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': 'ad88b24f-9c3b-4221-8274-08a46b8672a6'}
[2023-04-07 18:10:24 +0200] [20548] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-07 18:10:24 +0200] [20548] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-07 18:10:24 +0200] [20548] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: 20a669b7-3e31-4cfc-be32-525822f0b2e3
[2023-04-07 18:10:24 +0200] [20548] [INFO] [services.teacher_service] TeacherService: Get teacher by id: 20a669b7-3e31-4cfc-be32-525822f0b2e3
[2023-04-07 18:10:24 +0200] [20548] [INFO] [db.dao.base_dao] TeacherModel DAO: Get db entry by id: 20a669b7-3e31-4cfc-be32-525822f0b2e3
[2023-04-07 18:10:24 +0200] [20548] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-07 18:10:24 +0200] [20548] [TRACE] [services.teacher_service] TeacherService: Module ad88b24f-9c3b-4221-8274-08a46b8672a6 will be added to teacher's modules.
[2023-04-07 18:10:24 +0200] [20548] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-07 18:10:24 +0200] [20548] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: [<db.models.ModuleModel.ModuleModel object at 0x7f46b97ffca0>]
[2023-04-07 18:10:28 +0200] [20548] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 18:10:28 +0200] [20548] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 18:10:28 +0200] [20548] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 18:10:28 +0200] [20548] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 18:10:28 +0200] [20548] [INFO] [services.schedule_service] ScheduleService: Create schedule automatically
[2023-04-07 18:10:28 +0200] [20548] [TRACE] [services.schedule_service] ScheduleService: Create schedule automatically with passed data: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson_number=<LessonsEnum.ONE: '1'> group_number=<AcademicGroupsEnum.SECOND_1: '102'> module_id='ad88b24f-9c3b-4221-8274-08a46b8672a6'
[2023-04-07 18:10:28 +0200] [20548] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 18:10:28 +0200] [20548] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.SECOND_1: '102'>, 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 18:10:28 +0200] [20548] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 18:10:28 +0200] [20548] [INFO] [services.module_service] ModuleService: Get module by id: ad88b24f-9c3b-4221-8274-08a46b8672a6
[2023-04-07 18:10:28 +0200] [20548] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-07 18:10:28 +0200] [20548] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': 'ad88b24f-9c3b-4221-8274-08a46b8672a6'}
[2023-04-07 18:10:28 +0200] [20548] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-07 18:10:28 +0200] [20548] [INFO] [db.dao.base_dao] RoomModel DAO: Get all db entries by parameters
[2023-04-07 18:10:28 +0200] [20548] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: skip: 0, limit: None, params: {'class_type': <ClassTypesEnum.LECTURE: 'lecture'>}
[2023-04-07 18:10:28 +0200] [20548] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 18:10:28 +0200] [20548] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Get db entry by parameters
[2023-04-07 18:10:28 +0200] [20548] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed to filter: params: {'room_id': UUID('d4d2852b-89c9-46d1-83a0-c1fdb84592a4'), 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 18:10:28 +0200] [20548] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: received a response from the database
[2023-04-07 18:10:28 +0200] [20548] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Get db entry by parameters
[2023-04-07 18:10:28 +0200] [20548] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed to filter: params: {'teacher_id': UUID('20a669b7-3e31-4cfc-be32-525822f0b2e3'), 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 18:10:28 +0200] [20548] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: received a response from the database
[2023-04-07 18:10:28 +0200] [20548] [INFO] [services.teacher_service] TeacherService: Set teacher busy
[2023-04-07 18:10:28 +0200] [20548] [TRACE] [services.teacher_service] TeacherService: Set teacher busy: teacher_id: 20a669b7-3e31-4cfc-be32-525822f0b2e3, data: weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True
[2023-04-07 18:10:28 +0200] [20548] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Get db entry by parameters
[2023-04-07 18:10:28 +0200] [20548] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed to filter: params: {'teacher_id': UUID('20a669b7-3e31-4cfc-be32-525822f0b2e3'), 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 18:10:28 +0200] [20548] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: received a response from the database
[2023-04-07 18:10:28 +0200] [20548] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Create db entry
[2023-04-07 18:10:28 +0200] [20548] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True teacher_id=UUID('20a669b7-3e31-4cfc-be32-525822f0b2e3')
[2023-04-07 18:10:28 +0200] [20548] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: Created entry in database: {'teacher_id': UUID('20a669b7-3e31-4cfc-be32-525822f0b2e3'), 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>, 'is_busy': True}
[2023-04-07 18:10:28 +0200] [20548] [INFO] [services.group_service] GroupService: Set group busy
[2023-04-07 18:10:28 +0200] [20548] [TRACE] [services.group_service] GroupService: Set group busy: group_number: 102, data: weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True
[2023-04-07 18:10:28 +0200] [20548] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 18:10:28 +0200] [20548] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.SECOND_1: '102'>, 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 18:10:28 +0200] [20548] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 18:10:28 +0200] [20548] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Create db entry
[2023-04-07 18:10:28 +0200] [20548] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True group_number=<AcademicGroupsEnum.SECOND_1: '102'>
[2023-04-07 18:10:28 +0200] [20548] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: Created entry in database: {'group_number': <AcademicGroupsEnum.SECOND_1: '102'>, 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>, 'is_busy': True}
[2023-04-07 18:10:28 +0200] [20548] [INFO] [services.room_service] RoomService: Set room busy
[2023-04-07 18:10:28 +0200] [20548] [TRACE] [services.room_service] RoomService: Set room busy: room_number: 102, data: weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True
[2023-04-07 18:10:28 +0200] [20548] [INFO] [services.room_service] RoomService: Get room by number
[2023-04-07 18:10:28 +0200] [20548] [TRACE] [services.room_service] RoomService: Get room by number: 102
[2023-04-07 18:10:28 +0200] [20548] [INFO] [db.dao.base_dao] RoomModel DAO: Get db entry by parameters
[2023-04-07 18:10:28 +0200] [20548] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: params: {'room_number': 102}
[2023-04-07 18:10:28 +0200] [20548] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 18:10:28 +0200] [20548] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Get db entry by parameters
[2023-04-07 18:10:28 +0200] [20548] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed to filter: params: {'room_id': UUID('d4d2852b-89c9-46d1-83a0-c1fdb84592a4'), 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 18:10:28 +0200] [20548] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: received a response from the database
[2023-04-07 18:10:28 +0200] [20548] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Create db entry
[2023-04-07 18:10:28 +0200] [20548] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True room_id=UUID('d4d2852b-89c9-46d1-83a0-c1fdb84592a4')
[2023-04-07 18:10:28 +0200] [20548] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: Created entry in database: {'room_id': UUID('d4d2852b-89c9-46d1-83a0-c1fdb84592a4'), 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>, 'is_busy': True}
[2023-04-07 18:10:28 +0200] [20548] [INFO] [db.dao.base_dao] ScheduleModel DAO: Create db entry
[2023-04-07 18:10:28 +0200] [20548] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed for creation: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson_number=<LessonsEnum.ONE: '1'> group_number=<AcademicGroupsEnum.SECOND_1: '102'> module_id='ad88b24f-9c3b-4221-8274-08a46b8672a6' room_number=102 teacher_id=UUID('20a669b7-3e31-4cfc-be32-525822f0b2e3')
[2023-04-07 18:10:28 +0200] [20548] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: Created entry in database: {'id': UUID('c934b9e2-280d-4f35-8faf-7718d19e86af'), 'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.SECOND_1: '102'>, 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson_number': <LessonsEnum.ONE: '1'>, 'module_id': UUID('ad88b24f-9c3b-4221-8274-08a46b8672a6'), 'room_number': 102, 'teacher_id': UUID('20a669b7-3e31-4cfc-be32-525822f0b2e3'), 'created_at': datetime.datetime(2023, 4, 7, 16, 10, 28, 150999), 'updated_at': datetime.datetime(2023, 4, 7, 16, 10, 28, 151003)}
[2023-04-07 18:10:51 +0200] [20548] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 18:10:51 +0200] [20548] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 18:10:51 +0200] [20548] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 18:10:51 +0200] [20548] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 18:10:51 +0200] [20548] [INFO] [services.schedule_service] ScheduleService: Create schedule automatically
[2023-04-07 18:10:51 +0200] [20548] [TRACE] [services.schedule_service] ScheduleService: Create schedule automatically with passed data: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson_number=<LessonsEnum.ONE: '1'> group_number=<AcademicGroupsEnum.THIRD_1: '103'> module_id='ad88b24f-9c3b-4221-8274-08a46b8672a6'
[2023-04-07 18:10:51 +0200] [20548] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 18:10:51 +0200] [20548] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.THIRD_1: '103'>, 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 18:10:51 +0200] [20548] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 18:10:51 +0200] [20548] [INFO] [services.module_service] ModuleService: Get module by id: ad88b24f-9c3b-4221-8274-08a46b8672a6
[2023-04-07 18:10:51 +0200] [20548] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-07 18:10:51 +0200] [20548] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': 'ad88b24f-9c3b-4221-8274-08a46b8672a6'}
[2023-04-07 18:10:51 +0200] [20548] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-07 18:10:51 +0200] [20548] [INFO] [db.dao.base_dao] RoomModel DAO: Get all db entries by parameters
[2023-04-07 18:10:51 +0200] [20548] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: skip: 0, limit: None, params: {'class_type': <ClassTypesEnum.LECTURE: 'lecture'>}
[2023-04-07 18:10:51 +0200] [20548] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 18:10:51 +0200] [20548] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Get db entry by parameters
[2023-04-07 18:10:51 +0200] [20548] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed to filter: params: {'room_id': UUID('d4d2852b-89c9-46d1-83a0-c1fdb84592a4'), 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 18:10:51 +0200] [20548] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: received a response from the database
[2023-04-07 18:10:51 +0200] [20548] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get db entry by parameters
[2023-04-07 18:10:51 +0200] [20548] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: params: {'semester': <SemestersEnum.FIRST: '1'>, 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson_number': <LessonsEnum.ONE: '1'>, 'module_id': 'ad88b24f-9c3b-4221-8274-08a46b8672a6'}
[2023-04-07 18:10:52 +0200] [20548] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 18:10:52 +0200] [20548] [INFO] [services.group_service] GroupService: Set group busy
[2023-04-07 18:10:52 +0200] [20548] [TRACE] [services.group_service] GroupService: Set group busy: group_number: 103, data: weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True
[2023-04-07 18:10:52 +0200] [20548] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 18:10:52 +0200] [20548] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.THIRD_1: '103'>, 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 18:10:52 +0200] [20548] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 18:10:52 +0200] [20548] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Create db entry
[2023-04-07 18:10:52 +0200] [20548] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True group_number=<AcademicGroupsEnum.THIRD_1: '103'>
[2023-04-07 18:10:52 +0200] [20548] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: Created entry in database: {'group_number': <AcademicGroupsEnum.THIRD_1: '103'>, 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson': <LessonsEnum.ONE: '1'>, 'is_busy': True}
[2023-04-07 18:10:52 +0200] [20548] [INFO] [db.dao.base_dao] ScheduleModel DAO: Create db entry
[2023-04-07 18:10:52 +0200] [20548] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed for creation: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.MONDAY: 'Monday'> lesson_number=<LessonsEnum.ONE: '1'> group_number=<AcademicGroupsEnum.THIRD_1: '103'> module_id='ad88b24f-9c3b-4221-8274-08a46b8672a6' room_number=102 teacher_id=UUID('20a669b7-3e31-4cfc-be32-525822f0b2e3')
[2023-04-07 18:10:52 +0200] [20548] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: Created entry in database: {'id': UUID('2a637e47-9964-4870-96cb-c47311a3b6bb'), 'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.THIRD_1: '103'>, 'weekday': <WeekdaysEnum.MONDAY: 'Monday'>, 'lesson_number': <LessonsEnum.ONE: '1'>, 'module_id': UUID('ad88b24f-9c3b-4221-8274-08a46b8672a6'), 'room_number': 102, 'teacher_id': UUID('20a669b7-3e31-4cfc-be32-525822f0b2e3'), 'created_at': datetime.datetime(2023, 4, 7, 16, 10, 52, 35121), 'updated_at': datetime.datetime(2023, 4, 7, 16, 10, 52, 35125)}
[2023-04-07 18:11:14 +0200] [20548] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 18:11:14 +0200] [20548] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 18:11:14 +0200] [20548] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 18:11:14 +0200] [20548] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 18:11:14 +0200] [20548] [INFO] [services.schedule_service] ScheduleService: Create schedule automatically
[2023-04-07 18:11:14 +0200] [20548] [TRACE] [services.schedule_service] ScheduleService: Create schedule automatically with passed data: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson_number=<LessonsEnum.ONE: '1'> group_number=<AcademicGroupsEnum.THIRD_1: '103'> module_id='ad88b24f-9c3b-4221-8274-08a46b8672a6'
[2023-04-07 18:11:14 +0200] [20548] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 18:11:14 +0200] [20548] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.THIRD_1: '103'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 18:11:14 +0200] [20548] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 18:11:14 +0200] [20548] [INFO] [services.module_service] ModuleService: Get module by id: ad88b24f-9c3b-4221-8274-08a46b8672a6
[2023-04-07 18:11:14 +0200] [20548] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-07 18:11:14 +0200] [20548] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': 'ad88b24f-9c3b-4221-8274-08a46b8672a6'}
[2023-04-07 18:11:14 +0200] [20548] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-07 18:11:14 +0200] [20548] [INFO] [db.dao.base_dao] RoomModel DAO: Get all db entries by parameters
[2023-04-07 18:11:14 +0200] [20548] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: skip: 0, limit: None, params: {'class_type': <ClassTypesEnum.LECTURE: 'lecture'>}
[2023-04-07 18:11:14 +0200] [20548] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 18:11:14 +0200] [20548] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Get db entry by parameters
[2023-04-07 18:11:14 +0200] [20548] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed to filter: params: {'room_id': UUID('d4d2852b-89c9-46d1-83a0-c1fdb84592a4'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 18:11:14 +0200] [20548] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: received a response from the database
[2023-04-07 18:11:14 +0200] [20548] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Get db entry by parameters
[2023-04-07 18:11:14 +0200] [20548] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed to filter: params: {'teacher_id': UUID('20a669b7-3e31-4cfc-be32-525822f0b2e3'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 18:11:14 +0200] [20548] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: received a response from the database
[2023-04-07 18:11:14 +0200] [20548] [INFO] [services.teacher_service] TeacherService: Set teacher busy
[2023-04-07 18:11:14 +0200] [20548] [TRACE] [services.teacher_service] TeacherService: Set teacher busy: teacher_id: 20a669b7-3e31-4cfc-be32-525822f0b2e3, data: weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True
[2023-04-07 18:11:14 +0200] [20548] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Get db entry by parameters
[2023-04-07 18:11:14 +0200] [20548] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed to filter: params: {'teacher_id': UUID('20a669b7-3e31-4cfc-be32-525822f0b2e3'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 18:11:14 +0200] [20548] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: received a response from the database
[2023-04-07 18:11:14 +0200] [20548] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Create db entry
[2023-04-07 18:11:14 +0200] [20548] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True teacher_id=UUID('20a669b7-3e31-4cfc-be32-525822f0b2e3')
[2023-04-07 18:11:14 +0200] [20548] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: Created entry in database: {'teacher_id': UUID('20a669b7-3e31-4cfc-be32-525822f0b2e3'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>, 'is_busy': True}
[2023-04-07 18:11:14 +0200] [20548] [INFO] [services.group_service] GroupService: Set group busy
[2023-04-07 18:11:14 +0200] [20548] [TRACE] [services.group_service] GroupService: Set group busy: group_number: 103, data: weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True
[2023-04-07 18:11:14 +0200] [20548] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 18:11:14 +0200] [20548] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.THIRD_1: '103'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 18:11:14 +0200] [20548] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 18:11:14 +0200] [20548] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Create db entry
[2023-04-07 18:11:14 +0200] [20548] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True group_number=<AcademicGroupsEnum.THIRD_1: '103'>
[2023-04-07 18:11:14 +0200] [20548] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: Created entry in database: {'group_number': <AcademicGroupsEnum.THIRD_1: '103'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>, 'is_busy': True}
[2023-04-07 18:11:14 +0200] [20548] [INFO] [services.room_service] RoomService: Set room busy
[2023-04-07 18:11:14 +0200] [20548] [TRACE] [services.room_service] RoomService: Set room busy: room_number: 102, data: weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True
[2023-04-07 18:11:14 +0200] [20548] [INFO] [services.room_service] RoomService: Get room by number
[2023-04-07 18:11:14 +0200] [20548] [TRACE] [services.room_service] RoomService: Get room by number: 102
[2023-04-07 18:11:14 +0200] [20548] [INFO] [db.dao.base_dao] RoomModel DAO: Get db entry by parameters
[2023-04-07 18:11:14 +0200] [20548] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: params: {'room_number': 102}
[2023-04-07 18:11:15 +0200] [20548] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 18:11:15 +0200] [20548] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Get db entry by parameters
[2023-04-07 18:11:15 +0200] [20548] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed to filter: params: {'room_id': UUID('d4d2852b-89c9-46d1-83a0-c1fdb84592a4'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 18:11:15 +0200] [20548] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: received a response from the database
[2023-04-07 18:11:15 +0200] [20548] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Create db entry
[2023-04-07 18:11:15 +0200] [20548] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True room_id=UUID('d4d2852b-89c9-46d1-83a0-c1fdb84592a4')
[2023-04-07 18:11:15 +0200] [20548] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: Created entry in database: {'room_id': UUID('d4d2852b-89c9-46d1-83a0-c1fdb84592a4'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>, 'is_busy': True}
[2023-04-07 18:11:15 +0200] [20548] [INFO] [db.dao.base_dao] ScheduleModel DAO: Create db entry
[2023-04-07 18:11:15 +0200] [20548] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed for creation: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson_number=<LessonsEnum.ONE: '1'> group_number=<AcademicGroupsEnum.THIRD_1: '103'> module_id='ad88b24f-9c3b-4221-8274-08a46b8672a6' room_number=102 teacher_id=UUID('20a669b7-3e31-4cfc-be32-525822f0b2e3')
[2023-04-07 18:11:15 +0200] [20548] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: Created entry in database: {'id': UUID('bbf39257-710a-4481-8723-023d09c37ac1'), 'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.THIRD_1: '103'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson_number': <LessonsEnum.ONE: '1'>, 'module_id': UUID('ad88b24f-9c3b-4221-8274-08a46b8672a6'), 'room_number': 102, 'teacher_id': UUID('20a669b7-3e31-4cfc-be32-525822f0b2e3'), 'created_at': datetime.datetime(2023, 4, 7, 16, 11, 15, 65822), 'updated_at': datetime.datetime(2023, 4, 7, 16, 11, 15, 65827)}
[2023-04-07 18:11:23 +0200] [20548] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 18:11:23 +0200] [20548] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 18:11:23 +0200] [20548] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 18:11:23 +0200] [20548] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 18:11:23 +0200] [20548] [INFO] [services.schedule_service] ScheduleService: Create schedule automatically
[2023-04-07 18:11:23 +0200] [20548] [TRACE] [services.schedule_service] ScheduleService: Create schedule automatically with passed data: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson_number=<LessonsEnum.THREE: '3'> group_number=<AcademicGroupsEnum.THIRD_1: '103'> module_id='ad88b24f-9c3b-4221-8274-08a46b8672a6'
[2023-04-07 18:11:23 +0200] [20548] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 18:11:23 +0200] [20548] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.THIRD_1: '103'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.THREE: '3'>}
[2023-04-07 18:11:23 +0200] [20548] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 18:11:23 +0200] [20548] [INFO] [services.module_service] ModuleService: Get module by id: ad88b24f-9c3b-4221-8274-08a46b8672a6
[2023-04-07 18:11:23 +0200] [20548] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-07 18:11:23 +0200] [20548] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': 'ad88b24f-9c3b-4221-8274-08a46b8672a6'}
[2023-04-07 18:11:23 +0200] [20548] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-07 18:11:23 +0200] [20548] [INFO] [db.dao.base_dao] RoomModel DAO: Get all db entries by parameters
[2023-04-07 18:11:23 +0200] [20548] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: skip: 0, limit: None, params: {'class_type': <ClassTypesEnum.LECTURE: 'lecture'>}
[2023-04-07 18:11:23 +0200] [20548] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 18:11:23 +0200] [20548] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Get db entry by parameters
[2023-04-07 18:11:23 +0200] [20548] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed to filter: params: {'room_id': UUID('d4d2852b-89c9-46d1-83a0-c1fdb84592a4'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.THREE: '3'>}
[2023-04-07 18:11:23 +0200] [20548] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: received a response from the database
[2023-04-07 18:11:23 +0200] [20548] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Get db entry by parameters
[2023-04-07 18:11:23 +0200] [20548] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed to filter: params: {'teacher_id': UUID('20a669b7-3e31-4cfc-be32-525822f0b2e3'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.THREE: '3'>}
[2023-04-07 18:11:23 +0200] [20548] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: received a response from the database
[2023-04-07 18:11:23 +0200] [20548] [INFO] [services.teacher_service] TeacherService: Set teacher busy
[2023-04-07 18:11:23 +0200] [20548] [TRACE] [services.teacher_service] TeacherService: Set teacher busy: teacher_id: 20a669b7-3e31-4cfc-be32-525822f0b2e3, data: weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.THREE: '3'> is_busy=True
[2023-04-07 18:11:23 +0200] [20548] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Get db entry by parameters
[2023-04-07 18:11:23 +0200] [20548] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed to filter: params: {'teacher_id': UUID('20a669b7-3e31-4cfc-be32-525822f0b2e3'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.THREE: '3'>}
[2023-04-07 18:11:23 +0200] [20548] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: received a response from the database
[2023-04-07 18:11:23 +0200] [20548] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Create db entry
[2023-04-07 18:11:23 +0200] [20548] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.THREE: '3'> is_busy=True teacher_id=UUID('20a669b7-3e31-4cfc-be32-525822f0b2e3')
[2023-04-07 18:11:28 +0200] [20548] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 18:11:28 +0200] [20548] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 18:11:28 +0200] [20548] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 18:11:28 +0200] [20548] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 18:12:02 +0200] [20548] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 18:12:02 +0200] [20548] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 18:12:02 +0200] [20548] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 18:12:02 +0200] [20548] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 18:12:02 +0200] [20548] [INFO] [services.schedule_service] ScheduleService: Create schedule automatically
[2023-04-07 18:12:02 +0200] [20548] [TRACE] [services.schedule_service] ScheduleService: Create schedule automatically with passed data: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson_number=<LessonsEnum.THREE: '3'> group_number=<AcademicGroupsEnum.THIRD_1: '103'> module_id='ad88b24f-9c3b-4221-8274-08a46b8672a6'
[2023-04-07 18:12:02 +0200] [20548] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 18:12:02 +0200] [20548] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.THIRD_1: '103'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.THREE: '3'>}
[2023-04-07 18:12:02 +0200] [20548] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 18:12:02 +0200] [20548] [INFO] [services.module_service] ModuleService: Get module by id: ad88b24f-9c3b-4221-8274-08a46b8672a6
[2023-04-07 18:12:02 +0200] [20548] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-07 18:12:02 +0200] [20548] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': 'ad88b24f-9c3b-4221-8274-08a46b8672a6'}
[2023-04-07 18:12:02 +0200] [20548] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-07 18:12:02 +0200] [20548] [INFO] [db.dao.base_dao] RoomModel DAO: Get all db entries by parameters
[2023-04-07 18:12:02 +0200] [20548] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: skip: 0, limit: None, params: {'class_type': <ClassTypesEnum.LECTURE: 'lecture'>}
[2023-04-07 18:12:02 +0200] [20548] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 18:12:02 +0200] [20548] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Get db entry by parameters
[2023-04-07 18:12:02 +0200] [20548] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed to filter: params: {'room_id': UUID('d4d2852b-89c9-46d1-83a0-c1fdb84592a4'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.THREE: '3'>}
[2023-04-07 18:12:02 +0200] [20548] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: received a response from the database
[2023-04-07 18:12:02 +0200] [20548] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Get db entry by parameters
[2023-04-07 18:12:02 +0200] [20548] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed to filter: params: {'teacher_id': UUID('20a669b7-3e31-4cfc-be32-525822f0b2e3'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.THREE: '3'>}
[2023-04-07 18:12:02 +0200] [20548] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: received a response from the database
[2023-04-07 18:12:02 +0200] [20548] [INFO] [services.teacher_service] TeacherService: Set teacher busy
[2023-04-07 18:12:02 +0200] [20548] [TRACE] [services.teacher_service] TeacherService: Set teacher busy: teacher_id: 20a669b7-3e31-4cfc-be32-525822f0b2e3, data: weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.THREE: '3'> is_busy=True
[2023-04-07 18:12:02 +0200] [20548] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Get db entry by parameters
[2023-04-07 18:12:02 +0200] [20548] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed to filter: params: {'teacher_id': UUID('20a669b7-3e31-4cfc-be32-525822f0b2e3'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.THREE: '3'>}
[2023-04-07 18:12:02 +0200] [20548] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: received a response from the database
[2023-04-07 18:12:02 +0200] [20548] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Create db entry
[2023-04-07 18:12:02 +0200] [20548] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.THREE: '3'> is_busy=True teacher_id=UUID('20a669b7-3e31-4cfc-be32-525822f0b2e3')
[2023-04-07 18:21:17 +0200] [23341] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 18:21:20 +0200] [23341] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 18:21:20 +0200] [23341] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 18:21:20 +0200] [23341] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 18:21:20 +0200] [23341] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 18:21:20 +0200] [23341] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 18:21:21 +0200] [23341] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 18:21:21 +0200] [23341] [TRACE] [services.auth_service] AuthService: Create session with user: 51dbcc52-a703-43dd-8de9-4467f58a8ade
[2023-04-07 18:21:21 +0200] [23341] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 18:21:21 +0200] [23341] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('51dbcc52-a703-43dd-8de9-4467f58a8ade') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 7, 16, 26, 21, 66250) refresh_expire_time=datetime.datetime(2023, 4, 9, 16, 21, 21, 66383) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4ODQ3ODEsInN1YiI6ImFkbWluIn0.cXb63qhyAHTGxQ0SF9WYZ__KP6GfUjIwLATrNJ3HXH4' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNTcyODEsInN1YiI6ImFkbWluIn0.z-6QHwqHVpD9s3tNWGRks0XsUt6tEvtj1H10R4AVMB4' blocked=False is_active=True
[2023-04-07 18:21:21 +0200] [23341] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('2ba81f5c-afab-4c92-a902-ee6a206b04ba'), 'user_id': UUID('51dbcc52-a703-43dd-8de9-4467f58a8ade'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4ODQ3ODEsInN1YiI6ImFkbWluIn0.cXb63qhyAHTGxQ0SF9WYZ__KP6GfUjIwLATrNJ3HXH4', 'access_expire_time': datetime.datetime(2023, 4, 7, 16, 26, 21, 66250), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNTcyODEsInN1YiI6ImFkbWluIn0.z-6QHwqHVpD9s3tNWGRks0XsUt6tEvtj1H10R4AVMB4', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 16, 21, 21, 66383), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 16, 21, 21, 69688), 'updated_at': datetime.datetime(2023, 4, 7, 16, 21, 21, 69693)}
[2023-04-07 18:21:23 +0200] [23341] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 18:21:23 +0200] [23341] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 18:21:23 +0200] [23341] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 18:21:23 +0200] [23341] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 18:21:23 +0200] [23341] [INFO] [services.schedule_service] ScheduleService: Create schedule automatically
[2023-04-07 18:21:23 +0200] [23341] [TRACE] [services.schedule_service] ScheduleService: Create schedule automatically with passed data: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson_number=<LessonsEnum.THREE: '3'> group_number=<AcademicGroupsEnum.THIRD_1: '103'> module_id='ad88b24f-9c3b-4221-8274-08a46b8672a6'
[2023-04-07 18:21:23 +0200] [23341] [INFO] [services.lesson_service] LessonService: Get lesson by number
[2023-04-07 18:21:23 +0200] [23341] [TRACE] [services.lesson_service] LessonService: Get lesson by number: 3
[2023-04-07 18:21:23 +0200] [23341] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-07 18:21:23 +0200] [23341] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.THREE: '3'>}
[2023-04-07 18:21:24 +0200] [23341] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-07 18:21:49 +0200] [23341] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 18:21:49 +0200] [23341] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 18:21:49 +0200] [23341] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 18:21:49 +0200] [23341] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 18:22:07 +0200] [23341] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 18:22:07 +0200] [23341] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 18:22:07 +0200] [23341] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 18:22:07 +0200] [23341] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 18:22:07 +0200] [23341] [INFO] [services.schedule_service] ScheduleService: Create schedule automatically
[2023-04-07 18:22:07 +0200] [23341] [TRACE] [services.schedule_service] ScheduleService: Create schedule automatically with passed data: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson_number=<LessonsEnum.ONE: '1'> group_number=<AcademicGroupsEnum.FIRST_1: '101'> module_id='ad88b24f-9c3b-4221-8274-08a46b8672a6'
[2023-04-07 18:22:07 +0200] [23341] [INFO] [services.lesson_service] LessonService: Get lesson by number
[2023-04-07 18:22:07 +0200] [23341] [TRACE] [services.lesson_service] LessonService: Get lesson by number: 1
[2023-04-07 18:22:07 +0200] [23341] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-07 18:22:07 +0200] [23341] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-07 18:22:11 +0200] [23341] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-07 18:22:11 +0200] [23341] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 18:22:11 +0200] [23341] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.FIRST_1: '101'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 18:22:11 +0200] [23341] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 18:22:11 +0200] [23341] [INFO] [services.module_service] ModuleService: Get module by id: ad88b24f-9c3b-4221-8274-08a46b8672a6
[2023-04-07 18:22:11 +0200] [23341] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-07 18:22:11 +0200] [23341] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': 'ad88b24f-9c3b-4221-8274-08a46b8672a6'}
[2023-04-07 18:22:11 +0200] [23341] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-07 18:22:11 +0200] [23341] [INFO] [db.dao.base_dao] RoomModel DAO: Get all db entries by parameters
[2023-04-07 18:22:11 +0200] [23341] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: skip: 0, limit: None, params: {'class_type': <ClassTypesEnum.LECTURE: 'lecture'>}
[2023-04-07 18:22:11 +0200] [23341] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 18:22:11 +0200] [23341] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Get db entry by parameters
[2023-04-07 18:22:11 +0200] [23341] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed to filter: params: {'room_id': UUID('d4d2852b-89c9-46d1-83a0-c1fdb84592a4'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 18:22:11 +0200] [23341] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: received a response from the database
[2023-04-07 18:22:11 +0200] [23341] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get db entry by parameters
[2023-04-07 18:22:11 +0200] [23341] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: params: {'semester': <SemestersEnum.FIRST: '1'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson_number': <LessonsEnum.ONE: '1'>, 'module_id': 'ad88b24f-9c3b-4221-8274-08a46b8672a6'}
[2023-04-07 18:22:11 +0200] [23341] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 18:22:11 +0200] [23341] [INFO] [services.group_service] GroupService: Set group busy
[2023-04-07 18:22:11 +0200] [23341] [TRACE] [services.group_service] GroupService: Set group busy: group_number: 101, data: weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True
[2023-04-07 18:22:11 +0200] [23341] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 18:22:11 +0200] [23341] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.FIRST_1: '101'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 18:22:11 +0200] [23341] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 18:22:11 +0200] [23341] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Create db entry
[2023-04-07 18:22:11 +0200] [23341] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.ONE: '1'> is_busy=True group_number=<AcademicGroupsEnum.FIRST_1: '101'>
[2023-04-07 18:22:11 +0200] [23341] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: Created entry in database: {'group_number': <AcademicGroupsEnum.FIRST_1: '101'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>, 'is_busy': True}
[2023-04-07 18:22:11 +0200] [23341] [INFO] [db.dao.base_dao] ScheduleModel DAO: Create db entry
[2023-04-07 18:22:11 +0200] [23341] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed for creation: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson_number=<LessonsEnum.ONE: '1'> group_number=<AcademicGroupsEnum.FIRST_1: '101'> module_id='ad88b24f-9c3b-4221-8274-08a46b8672a6' room_number=102 teacher_id=UUID('20a669b7-3e31-4cfc-be32-525822f0b2e3')
[2023-04-07 18:22:11 +0200] [23341] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: Created entry in database: {'id': UUID('beaa4800-2b3d-454c-9d7c-2ab82ee41687'), 'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson_number': <LessonsEnum.ONE: '1'>, 'module_id': UUID('ad88b24f-9c3b-4221-8274-08a46b8672a6'), 'room_number': 102, 'teacher_id': UUID('20a669b7-3e31-4cfc-be32-525822f0b2e3'), 'created_at': datetime.datetime(2023, 4, 7, 16, 22, 11, 202858), 'updated_at': datetime.datetime(2023, 4, 7, 16, 22, 11, 202862)}
[2023-04-07 18:22:16 +0200] [23341] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 18:22:16 +0200] [23341] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 18:22:16 +0200] [23341] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 18:22:16 +0200] [23341] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 18:22:16 +0200] [23341] [INFO] [services.schedule_service] ScheduleService: Create schedule automatically
[2023-04-07 18:22:16 +0200] [23341] [TRACE] [services.schedule_service] ScheduleService: Create schedule automatically with passed data: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson_number=<LessonsEnum.ONE: '1'> group_number=<AcademicGroupsEnum.FIRST_1: '101'> module_id='ad88b24f-9c3b-4221-8274-08a46b8672a6'
[2023-04-07 18:22:16 +0200] [23341] [INFO] [services.lesson_service] LessonService: Get lesson by number
[2023-04-07 18:22:16 +0200] [23341] [TRACE] [services.lesson_service] LessonService: Get lesson by number: 1
[2023-04-07 18:22:16 +0200] [23341] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-07 18:22:16 +0200] [23341] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-07 18:22:16 +0200] [23341] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-07 18:22:16 +0200] [23341] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 18:22:16 +0200] [23341] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.FIRST_1: '101'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.ONE: '1'>}
[2023-04-07 18:22:16 +0200] [23341] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 19:07:11 +0200] [25013] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 19:07:11 +0200] [25013] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 19:07:11 +0200] [25013] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 19:07:11 +0200] [25013] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 19:07:11 +0200] [25013] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 19:07:11 +0200] [25013] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 19:07:11 +0200] [25013] [TRACE] [services.auth_service] AuthService: Create session with user: 51dbcc52-a703-43dd-8de9-4467f58a8ade
[2023-04-07 19:07:11 +0200] [25013] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 19:07:11 +0200] [25013] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('51dbcc52-a703-43dd-8de9-4467f58a8ade') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 7, 17, 12, 11, 613313) refresh_expire_time=datetime.datetime(2023, 4, 9, 17, 7, 11, 613479) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4ODc1MzEsInN1YiI6ImFkbWluIn0.lLb06hpJdobHqrI_cXXPysV5d4__TgLA-nTNxRYUfaI' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNjAwMzEsInN1YiI6ImFkbWluIn0.4_hT3Tjs_m77KggzRs81msYn12QAUNo9BLHaETbAzXQ' blocked=False is_active=True
[2023-04-07 19:07:11 +0200] [25013] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('dd1720e3-4dc8-45f5-a39c-7a7b75e2951d'), 'user_id': UUID('51dbcc52-a703-43dd-8de9-4467f58a8ade'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4ODc1MzEsInN1YiI6ImFkbWluIn0.lLb06hpJdobHqrI_cXXPysV5d4__TgLA-nTNxRYUfaI', 'access_expire_time': datetime.datetime(2023, 4, 7, 17, 12, 11, 613313), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNjAwMzEsInN1YiI6ImFkbWluIn0.4_hT3Tjs_m77KggzRs81msYn12QAUNo9BLHaETbAzXQ', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 17, 7, 11, 613479), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 17, 7, 11, 616897), 'updated_at': datetime.datetime(2023, 4, 7, 17, 7, 11, 616903)}
[2023-04-07 19:08:13 +0200] [25013] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 19:08:13 +0200] [25013] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 19:08:13 +0200] [25013] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 19:08:13 +0200] [25013] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 19:08:13 +0200] [25013] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 19:08:13 +0200] [25013] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 19:08:13 +0200] [25013] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 19:08:13 +0200] [25013] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 19:08:17 +0200] [25013] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 19:09:45 +0200] [25147] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 19:09:45 +0200] [25147] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 19:09:45 +0200] [25147] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 19:09:45 +0200] [25147] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 19:09:45 +0200] [25147] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 19:09:45 +0200] [25147] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 19:09:45 +0200] [25147] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 19:09:45 +0200] [25147] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 19:09:48 +0200] [25147] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 19:10:12 +0200] [25178] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 19:10:12 +0200] [25178] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 19:10:12 +0200] [25178] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 19:10:13 +0200] [25178] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 19:10:13 +0200] [25178] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 19:10:13 +0200] [25178] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 19:10:13 +0200] [25178] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 19:10:13 +0200] [25178] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 19:10:16 +0200] [25178] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 19:10:59 +0200] [25233] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 19:10:59 +0200] [25233] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 19:10:59 +0200] [25233] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 19:10:59 +0200] [25233] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 19:10:59 +0200] [25233] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 19:10:59 +0200] [25233] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 19:10:59 +0200] [25233] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 19:10:59 +0200] [25233] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 19:11:03 +0200] [25233] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 19:13:40 +0200] [25233] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 19:13:45 +0200] [25233] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 19:13:45 +0200] [25233] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 19:13:45 +0200] [25233] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 19:13:45 +0200] [25233] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 19:13:45 +0200] [25233] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 19:13:45 +0200] [25233] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 19:13:45 +0200] [25233] [TRACE] [services.auth_service] AuthService: Create session with user: 51dbcc52-a703-43dd-8de9-4467f58a8ade
[2023-04-07 19:13:45 +0200] [25233] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 19:13:45 +0200] [25233] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('51dbcc52-a703-43dd-8de9-4467f58a8ade') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 7, 17, 18, 45, 341015) refresh_expire_time=datetime.datetime(2023, 4, 9, 17, 13, 45, 341145) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4ODc5MjUsInN1YiI6ImFkbWluIn0.8OaZ7Y14j1MHHgpVenk0SVb4g43xOaZgL7p9nhKINPQ' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNjA0MjUsInN1YiI6ImFkbWluIn0.CeU5kph8CwyxONFuH5WEOWvKgFX--w1BvGBMF3dDbdg' blocked=False is_active=True
[2023-04-07 19:13:45 +0200] [25233] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('ef860a5f-779f-4aba-b44f-f578758aa8ee'), 'user_id': UUID('51dbcc52-a703-43dd-8de9-4467f58a8ade'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4ODc5MjUsInN1YiI6ImFkbWluIn0.8OaZ7Y14j1MHHgpVenk0SVb4g43xOaZgL7p9nhKINPQ', 'access_expire_time': datetime.datetime(2023, 4, 7, 17, 18, 45, 341015), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNjA0MjUsInN1YiI6ImFkbWluIn0.CeU5kph8CwyxONFuH5WEOWvKgFX--w1BvGBMF3dDbdg', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 17, 13, 45, 341145), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 17, 13, 45, 344405), 'updated_at': datetime.datetime(2023, 4, 7, 17, 13, 45, 344409)}
[2023-04-07 19:13:47 +0200] [25233] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 19:13:47 +0200] [25233] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 19:13:47 +0200] [25233] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 19:13:47 +0200] [25233] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 19:13:47 +0200] [25233] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 19:13:47 +0200] [25233] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '20a669b7-3e31-4cfc-be32-525822f0b2e3'}
[2023-04-07 19:13:47 +0200] [25233] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 19:13:47 +0200] [25233] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'teacher_id': '20a669b7-3e31-4cfc-be32-525822f0b2e3'}
[2023-04-07 19:13:47 +0200] [25233] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 19:44:25 +0200] [26990] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 19:44:25 +0200] [26990] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 19:44:25 +0200] [26990] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 19:44:25 +0200] [26990] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 19:44:25 +0200] [26990] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 19:44:25 +0200] [26990] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 19:44:25 +0200] [26990] [TRACE] [services.auth_service] AuthService: Create session with user: 51dbcc52-a703-43dd-8de9-4467f58a8ade
[2023-04-07 19:44:25 +0200] [26990] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 19:44:25 +0200] [26990] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('51dbcc52-a703-43dd-8de9-4467f58a8ade') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 7, 17, 49, 25, 795135) refresh_expire_time=datetime.datetime(2023, 4, 9, 17, 44, 25, 795294) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4ODk3NjUsInN1YiI6ImFkbWluIn0.RidM9WO-39xxrph9JNh1evoxJWvhfM70ZcOi5ETGbuM' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNjIyNjUsInN1YiI6ImFkbWluIn0.qcK_V9vXuMdEueXrWFB0A1kccKVfqw37CKiB-MP7zmU' blocked=False is_active=True
[2023-04-07 19:44:25 +0200] [26990] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('b782b893-2264-4671-9634-c9c8e06230fe'), 'user_id': UUID('51dbcc52-a703-43dd-8de9-4467f58a8ade'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4ODk3NjUsInN1YiI6ImFkbWluIn0.RidM9WO-39xxrph9JNh1evoxJWvhfM70ZcOi5ETGbuM', 'access_expire_time': datetime.datetime(2023, 4, 7, 17, 49, 25, 795135), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNjIyNjUsInN1YiI6ImFkbWluIn0.qcK_V9vXuMdEueXrWFB0A1kccKVfqw37CKiB-MP7zmU', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 17, 44, 25, 795294), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 17, 44, 25, 798351), 'updated_at': datetime.datetime(2023, 4, 7, 17, 44, 25, 798356)}
[2023-04-07 19:44:28 +0200] [26990] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 19:44:28 +0200] [26990] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 19:44:28 +0200] [26990] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 19:44:28 +0200] [26990] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 19:44:45 +0200] [27046] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 19:44:45 +0200] [27046] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 19:44:45 +0200] [27046] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 19:44:45 +0200] [27046] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 19:44:45 +0200] [27046] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 19:44:45 +0200] [27046] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 19:44:45 +0200] [27046] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 19:44:45 +0200] [27046] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 19:44:49 +0200] [27046] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 19:45:54 +0200] [27092] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 19:45:54 +0200] [27092] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 19:45:54 +0200] [27092] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 19:45:54 +0200] [27092] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 19:45:54 +0200] [27092] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 19:45:54 +0200] [27092] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 19:45:54 +0200] [27092] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 19:45:54 +0200] [27092] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 19:45:57 +0200] [27092] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 19:46:29 +0200] [27124] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 19:46:29 +0200] [27124] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 19:46:29 +0200] [27124] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 19:46:29 +0200] [27124] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 19:46:29 +0200] [27124] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 19:46:29 +0200] [27124] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 19:46:29 +0200] [27124] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 19:46:29 +0200] [27124] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 19:46:32 +0200] [27124] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 19:47:21 +0200] [27228] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 19:47:21 +0200] [27228] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 19:47:21 +0200] [27228] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 19:47:21 +0200] [27228] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 19:47:21 +0200] [27228] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 19:47:21 +0200] [27228] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 19:47:21 +0200] [27228] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 19:47:21 +0200] [27228] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 19:47:24 +0200] [27228] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 19:48:43 +0200] [27328] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 19:48:43 +0200] [27328] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 19:48:43 +0200] [27328] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 19:48:43 +0200] [27328] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 19:48:43 +0200] [27328] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 19:48:43 +0200] [27328] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 19:48:43 +0200] [27328] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 19:48:43 +0200] [27328] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 19:48:47 +0200] [27328] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 19:49:43 +0200] [27328] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 19:49:50 +0200] [27328] [INFO] [services.auth_service] AuthService: Login user
[2023-04-07 19:49:50 +0200] [27328] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-07 19:49:50 +0200] [27328] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 19:49:50 +0200] [27328] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 19:49:50 +0200] [27328] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 19:49:50 +0200] [27328] [INFO] [services.auth_service] AuthService: Create session
[2023-04-07 19:49:50 +0200] [27328] [TRACE] [services.auth_service] AuthService: Create session with user: 51dbcc52-a703-43dd-8de9-4467f58a8ade
[2023-04-07 19:49:50 +0200] [27328] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-07 19:49:50 +0200] [27328] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('51dbcc52-a703-43dd-8de9-4467f58a8ade') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 7, 17, 54, 50, 348171) refresh_expire_time=datetime.datetime(2023, 4, 9, 17, 49, 50, 348318) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4OTAwOTAsInN1YiI6ImFkbWluIn0.hovWEykmtu45l968sBShzrHWNDMiPjH09TrO80wjcQA' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNjI1OTAsInN1YiI6ImFkbWluIn0.LrLMMehn8iDSqydldUoRD8P2tDIfNVM1il0fCb6CRWE' blocked=False is_active=True
[2023-04-07 19:49:50 +0200] [27328] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('42df9021-2b09-4458-92e1-e3a21e414fe9'), 'user_id': UUID('51dbcc52-a703-43dd-8de9-4467f58a8ade'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4OTAwOTAsInN1YiI6ImFkbWluIn0.hovWEykmtu45l968sBShzrHWNDMiPjH09TrO80wjcQA', 'access_expire_time': datetime.datetime(2023, 4, 7, 17, 54, 50, 348171), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODEwNjI1OTAsInN1YiI6ImFkbWluIn0.LrLMMehn8iDSqydldUoRD8P2tDIfNVM1il0fCb6CRWE', 'refresh_expire_time': datetime.datetime(2023, 4, 9, 17, 49, 50, 348318), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 7, 17, 49, 50, 351509), 'updated_at': datetime.datetime(2023, 4, 7, 17, 49, 50, 351514)}
[2023-04-07 19:49:56 +0200] [27328] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 19:49:56 +0200] [27328] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 19:49:56 +0200] [27328] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 19:49:56 +0200] [27328] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 19:49:56 +0200] [27328] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-07 19:49:56 +0200] [27328] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data start_time='10:15' end_time='11:00' lesson_number=<LessonsEnum.TWO: '2'>
[2023-04-07 19:49:56 +0200] [27328] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 2
[2023-04-07 19:49:56 +0200] [27328] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-07 19:49:56 +0200] [27328] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.TWO: '2'>}
[2023-04-07 19:49:56 +0200] [27328] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-07 19:49:56 +0200] [27328] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 10:15:00 - 11:00:00
[2023-04-07 19:49:56 +0200] [27328] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-07 19:49:56 +0200] [27328] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 10:15:00 - 11:00:00
[2023-04-07 19:49:56 +0200] [27328] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database []
[2023-04-07 19:49:56 +0200] [27328] [INFO] [db.dao.base_dao] LessonModel DAO: Create db entry
[2023-04-07 19:49:56 +0200] [27328] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed for creation: start_time=datetime.time(10, 15) end_time=datetime.time(11, 0) lesson_number=<LessonsEnum.TWO: '2'>
[2023-04-07 19:49:56 +0200] [27328] [DEBUG] [db.dao.base_dao] LessonModel DAO: Created entry in database: {'id': UUID('6428937b-cfa0-4c07-800e-733ba55acf81'), 'lesson_number': <LessonsEnum.TWO: '2'>, 'start_time': datetime.time(10, 15), 'end_time': datetime.time(11, 0)}
[2023-04-07 19:50:06 +0200] [27328] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 19:50:06 +0200] [27328] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 19:50:06 +0200] [27328] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 19:50:06 +0200] [27328] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 19:50:06 +0200] [27328] [INFO] [services.schedule_service] ScheduleService: Create schedule automatically
[2023-04-07 19:50:06 +0200] [27328] [TRACE] [services.schedule_service] ScheduleService: Create schedule automatically with passed data: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson_number=<LessonsEnum.TWO: '2'> group_number=<AcademicGroupsEnum.FIRST_1: '101'> module_id='ad88b24f-9c3b-4221-8274-08a46b8672a6'
[2023-04-07 19:50:06 +0200] [27328] [INFO] [services.lesson_service] LessonService: Get lesson by number
[2023-04-07 19:50:06 +0200] [27328] [TRACE] [services.lesson_service] LessonService: Get lesson by number: 2
[2023-04-07 19:50:06 +0200] [27328] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-07 19:50:06 +0200] [27328] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.TWO: '2'>}
[2023-04-07 19:50:06 +0200] [27328] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-07 19:50:06 +0200] [27328] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 19:50:06 +0200] [27328] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.FIRST_1: '101'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.TWO: '2'>}
[2023-04-07 19:50:06 +0200] [27328] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 19:50:06 +0200] [27328] [INFO] [services.module_service] ModuleService: Get module by id: ad88b24f-9c3b-4221-8274-08a46b8672a6
[2023-04-07 19:50:06 +0200] [27328] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-07 19:50:06 +0200] [27328] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': 'ad88b24f-9c3b-4221-8274-08a46b8672a6'}
[2023-04-07 19:50:06 +0200] [27328] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-07 19:50:06 +0200] [27328] [INFO] [db.dao.base_dao] RoomModel DAO: Get all db entries by parameters
[2023-04-07 19:50:06 +0200] [27328] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: skip: 0, limit: None, params: {'class_type': <ClassTypesEnum.LECTURE: 'lecture'>}
[2023-04-07 19:50:06 +0200] [27328] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 19:50:06 +0200] [27328] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Get db entry by parameters
[2023-04-07 19:50:06 +0200] [27328] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed to filter: params: {'room_id': UUID('d4d2852b-89c9-46d1-83a0-c1fdb84592a4'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.TWO: '2'>}
[2023-04-07 19:50:06 +0200] [27328] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: received a response from the database
[2023-04-07 19:50:06 +0200] [27328] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Get db entry by parameters
[2023-04-07 19:50:06 +0200] [27328] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed to filter: params: {'teacher_id': UUID('20a669b7-3e31-4cfc-be32-525822f0b2e3'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.TWO: '2'>}
[2023-04-07 19:50:06 +0200] [27328] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: received a response from the database
[2023-04-07 19:50:06 +0200] [27328] [INFO] [services.teacher_service] TeacherService: Set teacher busy
[2023-04-07 19:50:06 +0200] [27328] [TRACE] [services.teacher_service] TeacherService: Set teacher busy: teacher_id: 20a669b7-3e31-4cfc-be32-525822f0b2e3, data: is_busy=True weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.TWO: '2'>
[2023-04-07 19:50:06 +0200] [27328] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Get db entry by parameters
[2023-04-07 19:50:06 +0200] [27328] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed to filter: params: {'teacher_id': UUID('20a669b7-3e31-4cfc-be32-525822f0b2e3'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.TWO: '2'>}
[2023-04-07 19:50:06 +0200] [27328] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: received a response from the database
[2023-04-07 19:50:06 +0200] [27328] [INFO] [db.dao.base_dao] TeacherBusyModel DAO: Create db entry
[2023-04-07 19:50:06 +0200] [27328] [TRACE] [db.dao.base_dao] TeacherBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.TWO: '2'> is_busy=True teacher_id=UUID('20a669b7-3e31-4cfc-be32-525822f0b2e3')
[2023-04-07 19:50:06 +0200] [27328] [DEBUG] [db.dao.base_dao] TeacherBusyModel DAO: Created entry in database: {'teacher_id': UUID('20a669b7-3e31-4cfc-be32-525822f0b2e3'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.TWO: '2'>, 'is_busy': True}
[2023-04-07 19:50:06 +0200] [27328] [INFO] [services.group_service] GroupService: Set group busy
[2023-04-07 19:50:06 +0200] [27328] [TRACE] [services.group_service] GroupService: Set group busy: group_number: 101, data: is_busy=True weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.TWO: '2'>
[2023-04-07 19:50:06 +0200] [27328] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Get db entry by parameters
[2023-04-07 19:50:06 +0200] [27328] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed to filter: params: {'group_number': <AcademicGroupsEnum.FIRST_1: '101'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.TWO: '2'>}
[2023-04-07 19:50:06 +0200] [27328] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: received a response from the database
[2023-04-07 19:50:06 +0200] [27328] [INFO] [db.dao.base_dao] GroupBusyModel DAO: Create db entry
[2023-04-07 19:50:06 +0200] [27328] [TRACE] [db.dao.base_dao] GroupBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.TWO: '2'> is_busy=True group_number=<AcademicGroupsEnum.FIRST_1: '101'>
[2023-04-07 19:50:06 +0200] [27328] [DEBUG] [db.dao.base_dao] GroupBusyModel DAO: Created entry in database: {'group_number': <AcademicGroupsEnum.FIRST_1: '101'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.TWO: '2'>, 'is_busy': True}
[2023-04-07 19:50:06 +0200] [27328] [INFO] [services.room_service] RoomService: Set room busy
[2023-04-07 19:50:06 +0200] [27328] [TRACE] [services.room_service] RoomService: Set room busy: room_number: 102, data: is_busy=True weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.TWO: '2'>
[2023-04-07 19:50:06 +0200] [27328] [INFO] [services.room_service] RoomService: Get room by number
[2023-04-07 19:50:06 +0200] [27328] [TRACE] [services.room_service] RoomService: Get room by number: 102
[2023-04-07 19:50:06 +0200] [27328] [INFO] [db.dao.base_dao] RoomModel DAO: Get db entry by parameters
[2023-04-07 19:50:06 +0200] [27328] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: params: {'room_number': 102}
[2023-04-07 19:50:06 +0200] [27328] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-07 19:50:06 +0200] [27328] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Get db entry by parameters
[2023-04-07 19:50:06 +0200] [27328] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed to filter: params: {'room_id': UUID('d4d2852b-89c9-46d1-83a0-c1fdb84592a4'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.TWO: '2'>}
[2023-04-07 19:50:06 +0200] [27328] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: received a response from the database
[2023-04-07 19:50:06 +0200] [27328] [INFO] [db.dao.base_dao] RoomBusyModel DAO: Create db entry
[2023-04-07 19:50:06 +0200] [27328] [TRACE] [db.dao.base_dao] RoomBusyModel DAO: Data passed for creation: weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson=<LessonsEnum.TWO: '2'> is_busy=True room_id=UUID('d4d2852b-89c9-46d1-83a0-c1fdb84592a4')
[2023-04-07 19:50:06 +0200] [27328] [DEBUG] [db.dao.base_dao] RoomBusyModel DAO: Created entry in database: {'room_id': UUID('d4d2852b-89c9-46d1-83a0-c1fdb84592a4'), 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson': <LessonsEnum.TWO: '2'>, 'is_busy': True}
[2023-04-07 19:50:06 +0200] [27328] [INFO] [db.dao.base_dao] ScheduleModel DAO: Create db entry
[2023-04-07 19:50:06 +0200] [27328] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed for creation: semester=<SemestersEnum.FIRST: '1'> weekday=<WeekdaysEnum.TUESDAY: 'Tuesday'> lesson_number=<LessonsEnum.TWO: '2'> group_number=<AcademicGroupsEnum.FIRST_1: '101'> module_id='ad88b24f-9c3b-4221-8274-08a46b8672a6' room_number=102 teacher_id=UUID('20a669b7-3e31-4cfc-be32-525822f0b2e3')
[2023-04-07 19:50:06 +0200] [27328] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: Created entry in database: {'id': UUID('2e1d0ea4-3a66-429f-8b8e-4a66a9951e30'), 'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>, 'weekday': <WeekdaysEnum.TUESDAY: 'Tuesday'>, 'lesson_number': <LessonsEnum.TWO: '2'>, 'module_id': UUID('ad88b24f-9c3b-4221-8274-08a46b8672a6'), 'room_number': 102, 'teacher_id': UUID('20a669b7-3e31-4cfc-be32-525822f0b2e3'), 'created_at': datetime.datetime(2023, 4, 7, 17, 50, 6, 367476), 'updated_at': datetime.datetime(2023, 4, 7, 17, 50, 6, 367482)}
[2023-04-07 19:50:11 +0200] [27328] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 19:50:11 +0200] [27328] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 19:50:11 +0200] [27328] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 19:50:11 +0200] [27328] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 19:50:11 +0200] [27328] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 19:50:11 +0200] [27328] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 19:50:11 +0200] [27328] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 19:50:11 +0200] [27328] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 19:50:11 +0200] [27328] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
[2023-04-07 19:52:22 +0200] [27473] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-07 19:52:22 +0200] [27473] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-07 19:52:22 +0200] [27473] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-07 19:52:22 +0200] [27473] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-07 19:52:22 +0200] [27473] [INFO] [services.schedule_service] ScheduleService: Get all schedule entries by parameters
[2023-04-07 19:52:22 +0200] [27473] [TRACE] [services.schedule_service] ScheduleService: Get all schedule entries by parameters: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 19:52:22 +0200] [27473] [INFO] [db.dao.base_dao] ScheduleModel DAO: Get all db entries by parameters
[2023-04-07 19:52:22 +0200] [27473] [TRACE] [db.dao.base_dao] ScheduleModel DAO: Data passed to filter: skip: 0, limit: None, params: {'semester': <SemestersEnum.FIRST: '1'>, 'group_number': <AcademicGroupsEnum.FIRST_1: '101'>}
[2023-04-07 19:52:25 +0200] [27473] [DEBUG] [db.dao.base_dao] ScheduleModel DAO: received a response from the database
