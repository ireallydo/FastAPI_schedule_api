[2023-03-22 23:33:40 +0100] [119466] [INFO] [services.student_service] StudentService: Create users with passed data [StudentCreateDTO(first_name='student_7', second_name='student_7', last_name='student_7', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.THIRD: '3'>, academic_group=<AcademicGroupsEnum.SECOND_3: '302'>), StudentCreateDTO(first_name='student_10', second_name=None, last_name='student_10', birth_date='15-12-2000', academic_year=<AcademicYearsEnum.THIRD: '3'>, academic_group=<AcademicGroupsEnum.FIRST_3: '301'>)]
[2023-03-22 23:43:53 +0100] [119939] [INFO] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_7', second_name='student_7', last_name='student_7', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.THIRD: '3'>, academic_group=<AcademicGroupsEnum.SECOND_3: '302'>), StudentCreateDTO(first_name='student_11', second_name=None, last_name='student_11', birth_date='15-12-2000', academic_year=<AcademicYearsEnum.THIRD: '3'>, academic_group=<AcademicGroupsEnum.FIRST_3: '301'>)]
[2023-03-22 23:43:53 +0100] [119939] [INFO] [services.student_service] StudentService: Check if student already exists in db and is not deleted first_name='student_7' second_name='student_7' last_name='student_7' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.THIRD: '3'> academic_group=<AcademicGroupsEnum.SECOND_3: '302'>
[2023-03-22 23:43:55 +0100] [119939] [INFO] [services.student_service] StudentService: Got existing student from db [<db.models.StudentModel.StudentModel object at 0x7fb7f330fb50>, <db.models.StudentModel.StudentModel object at 0x7fb7f330f910>, <db.models.StudentModel.StudentModel object at 0x7fb7f33192b0>, <db.models.StudentModel.StudentModel object at 0x7fb7f3319310>, <db.models.StudentModel.StudentModel object at 0x7fb7f3319640>, <db.models.StudentModel.StudentModel object at 0x7fb7f3319670>]
[2023-03-22 23:43:55 +0100] [119939] [INFO] [services.student_service] StudentService: Check if student already exists in db and is not deleted first_name='student_11' second_name=None last_name='student_11' birth_date='15-12-2000' academic_year=<AcademicYearsEnum.THIRD: '3'> academic_group=<AcademicGroupsEnum.FIRST_3: '301'>
[2023-03-22 23:43:55 +0100] [119939] [INFO] [services.student_service] StudentService: Students to be registered after check [StudentCreateDTO(first_name='student_11', second_name=None, last_name='student_11', birth_date=datetime.datetime(2000, 12, 15, 0, 0), academic_year=<AcademicYearsEnum.THIRD: '3'>, academic_group=<AcademicGroupsEnum.FIRST_3: '301'>, registration_token='-oahpPS7-FPpJA')]
[2023-03-22 23:44:03 +0100] [119939] [INFO] [services.student_service] StudentService: Get student by id ('0d22bfff-c1b8-49a3-98e7-59f637d9f4eb',)
[2023-03-22 23:44:10 +0100] [119939] [INFO] [services.student_service] StudentService: Get all student with parameters {'academic_group': <AcademicGroupsEnum.FIRST_3: '301'>}
[2023-03-22 23:44:14 +0100] [119939] [INFO] [services.student_service] StudentService: Get all student with parameters {'academic_year': <AcademicYearsEnum.THIRD: '3'>}
[2023-03-22 23:44:18 +0100] [119939] [INFO] [services.student_service] StudentService: Patch student with id 0d22bfff-c1b8-49a3-98e7-59f637d9f4eb with following data academic_year=<AcademicYearsEnum.THIRD: '3'> academic_group=<AcademicGroupsEnum.FIRST_3: '301'>
[2023-03-22 23:44:23 +0100] [119939] [INFO] [services.student_service] StudentService: Patch student with id ecbf3cb9-9e14-4c0e-b365-1841888a8a2e with following data deleted_at=datetime.datetime(2023, 3, 22, 22, 44, 23, 848978)
[2023-03-22 23:55:05 +0100] [120666] [INFO] [services.student_service] StudentService: Get student by id 0d22bfff-c1b8-49a3-98e7-59f637d9f4eb
[2023-03-22 23:59:03 +0100] [120862] [INFO] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_7', second_name='student_7', last_name='student_7', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.THIRD: '3'>, academic_group=<AcademicGroupsEnum.SECOND_3: '302'>), StudentCreateDTO(first_name='student_11', second_name=None, last_name='student_11', birth_date='15-12-2000', academic_year=<AcademicYearsEnum.THIRD: '3'>, academic_group=<AcademicGroupsEnum.FIRST_3: '301'>)]
[2023-03-22 23:59:03 +0100] [120862] [INFO] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_7' second_name='student_7' last_name='student_7' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.THIRD: '3'> academic_group=<AcademicGroupsEnum.SECOND_3: '302'>
[2023-03-22 23:59:22 +0100] [120905] [INFO] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_7', second_name='student_7', last_name='student_7', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.THIRD: '3'>, academic_group=<AcademicGroupsEnum.SECOND_3: '302'>), StudentCreateDTO(first_name='student_11', second_name=None, last_name='student_11', birth_date='15-12-2000', academic_year=<AcademicYearsEnum.THIRD: '3'>, academic_group=<AcademicGroupsEnum.FIRST_3: '301'>)]
[2023-03-22 23:59:22 +0100] [120905] [INFO] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_7' second_name='student_7' last_name='student_7' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.THIRD: '3'> academic_group=<AcademicGroupsEnum.SECOND_3: '302'>
[2023-03-23 00:07:56 +0100] [121469] [INFO] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_7', second_name='student_7', last_name='student_7', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.THIRD: '3'>, academic_group=<AcademicGroupsEnum.SECOND_3: '302'>), StudentCreateDTO(first_name='student_11', second_name=None, last_name='student_11', birth_date='15-12-2000', academic_year=<AcademicYearsEnum.THIRD: '3'>, academic_group=<AcademicGroupsEnum.FIRST_3: '301'>)]
[2023-03-23 00:07:56 +0100] [121469] [INFO] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_7' second_name='student_7' last_name='student_7' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.THIRD: '3'> academic_group=<AcademicGroupsEnum.SECOND_3: '302'>
[2023-03-23 00:07:57 +0100] [121469] [INFO] [services.student_service] StudentService: Got existing student from db: [{'id': UUID('0d045995-48f8-4807-b014-21cdac752f80'), 'registration_token': 'NDg_jsYNcoj3Sg', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 29, 35, 882773), 'updated_at': datetime.datetime(2023, 3, 22, 17, 29, 35, 882779), 'deleted_at': None}, {'id': UUID('482a5b1b-f00c-4332-931d-a25a2b0bee6c'), 'registration_token': 'U9n5p1-V3P8CWw', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 31, 37, 637915), 'updated_at': datetime.datetime(2023, 3, 22, 17, 31, 37, 637919), 'deleted_at': None}, {'id': UUID('5f7c4dfc-21ca-4139-9d3d-09d3c4a764bc'), 'registration_token': 'uNI5LMRAbF-jxQ', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 33, 40, 875252), 'updated_at': datetime.datetime(2023, 3, 22, 17, 33, 40, 875257), 'deleted_at': None}, {'id': UUID('497e58c0-4045-4b45-b767-ea329c66a31c'), 'registration_token': 'sp389IQKr5MFvQ', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 34, 6, 676180), 'updated_at': datetime.datetime(2023, 3, 22, 17, 34, 6, 676186), 'deleted_at': None}, {'id': UUID('83cfd32d-8d57-4d3b-a2d6-f3534348bc05'), 'registration_token': 'lApH-TYP7zoR5g', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 18, 9, 19, 781535), 'updated_at': datetime.datetime(2023, 3, 22, 18, 9, 19, 781541), 'deleted_at': None}, {'id': UUID('549819c8-bf29-49b6-8751-3d7cdc9d7b54'), 'registration_token': '9l2OxaDlYZX2pA', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 18, 13, 46, 627921), 'updated_at': datetime.datetime(2023, 3, 22, 18, 13, 46, 627925), 'deleted_at': None}]
[2023-03-23 00:07:57 +0100] [121469] [INFO] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_11' second_name=None last_name='student_11' birth_date='15-12-2000' academic_year=<AcademicYearsEnum.THIRD: '3'> academic_group=<AcademicGroupsEnum.FIRST_3: '301'>
[2023-03-23 00:07:57 +0100] [121469] [INFO] [services.student_service] StudentService: Got existing student from db: [{'id': UUID('f978f1bd-6a24-4d14-b6e8-a0319fae7b46'), 'registration_token': '-oahpPS7-FPpJA', 'registered_user': False, 'first_name': 'student_11', 'second_name': None, 'last_name': 'student_11', 'birth_date': datetime.datetime(2000, 12, 15, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.FIRST_3: '301'>, 'created_at': datetime.datetime(2023, 3, 22, 22, 43, 55, 16755), 'updated_at': datetime.datetime(2023, 3, 22, 22, 43, 55, 16759), 'deleted_at': None}]
[2023-03-23 00:07:57 +0100] [121469] [INFO] [services.student_service] StudentService: Students to be registered after check: []
[2023-03-23 00:13:09 +0100] [121833] [INFO] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_7', second_name='student_7', last_name='student_7', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.THIRD: '3'>, academic_group=<AcademicGroupsEnum.SECOND_3: '302'>), StudentCreateDTO(first_name='student_11', second_name=None, last_name='student_11', birth_date='15-12-2000', academic_year=<AcademicYearsEnum.THIRD: '3'>, academic_group=<AcademicGroupsEnum.FIRST_3: '301'>)]
[2023-03-23 00:13:09 +0100] [121833] [INFO] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_7' second_name='student_7' last_name='student_7' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.THIRD: '3'> academic_group=<AcademicGroupsEnum.SECOND_3: '302'>
[2023-03-23 00:13:10 +0100] [121833] [INFO] [services.student_service] StudentService: Got existing student from db: [{'id': UUID('0d045995-48f8-4807-b014-21cdac752f80'), 'registration_token': 'NDg_jsYNcoj3Sg', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 29, 35, 882773), 'updated_at': datetime.datetime(2023, 3, 22, 17, 29, 35, 882779), 'deleted_at': None}, {'id': UUID('482a5b1b-f00c-4332-931d-a25a2b0bee6c'), 'registration_token': 'U9n5p1-V3P8CWw', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 31, 37, 637915), 'updated_at': datetime.datetime(2023, 3, 22, 17, 31, 37, 637919), 'deleted_at': None}, {'id': UUID('5f7c4dfc-21ca-4139-9d3d-09d3c4a764bc'), 'registration_token': 'uNI5LMRAbF-jxQ', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 33, 40, 875252), 'updated_at': datetime.datetime(2023, 3, 22, 17, 33, 40, 875257), 'deleted_at': None}, {'id': UUID('497e58c0-4045-4b45-b767-ea329c66a31c'), 'registration_token': 'sp389IQKr5MFvQ', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 34, 6, 676180), 'updated_at': datetime.datetime(2023, 3, 22, 17, 34, 6, 676186), 'deleted_at': None}, {'id': UUID('83cfd32d-8d57-4d3b-a2d6-f3534348bc05'), 'registration_token': 'lApH-TYP7zoR5g', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 18, 9, 19, 781535), 'updated_at': datetime.datetime(2023, 3, 22, 18, 9, 19, 781541), 'deleted_at': None}, {'id': UUID('549819c8-bf29-49b6-8751-3d7cdc9d7b54'), 'registration_token': '9l2OxaDlYZX2pA', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 18, 13, 46, 627921), 'updated_at': datetime.datetime(2023, 3, 22, 18, 13, 46, 627925), 'deleted_at': None}]
[2023-03-23 00:13:10 +0100] [121833] [INFO] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_11' second_name=None last_name='student_11' birth_date='15-12-2000' academic_year=<AcademicYearsEnum.THIRD: '3'> academic_group=<AcademicGroupsEnum.FIRST_3: '301'>
[2023-03-23 00:13:10 +0100] [121833] [INFO] [services.student_service] StudentService: Got existing student from db: [{'id': UUID('f978f1bd-6a24-4d14-b6e8-a0319fae7b46'), 'registration_token': '-oahpPS7-FPpJA', 'registered_user': False, 'first_name': 'student_11', 'second_name': None, 'last_name': 'student_11', 'birth_date': datetime.datetime(2000, 12, 15, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.FIRST_3: '301'>, 'created_at': datetime.datetime(2023, 3, 22, 22, 43, 55, 16755), 'updated_at': datetime.datetime(2023, 3, 22, 22, 43, 55, 16759), 'deleted_at': None}]
[2023-03-23 00:13:10 +0100] [121833] [INFO] [services.student_service] StudentService: Students to be registered after check: []
[2023-03-23 00:21:40 +0100] [122206] [INFO] [services.student_service] StudentService: Get student by id: 0d22bfff-c1b8-49a3-98e7-59f637d9f4eb
[2023-03-23 00:21:40 +0100] [122206] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by id
[2023-03-23 00:21:40 +0100] [122206] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed fto filter: id: 0d22bfff-c1b8-49a3-98e7-59f637d9f4eb
[2023-03-23 00:22:58 +0100] [122406] [TRACE] [services.student_service] StudentService: Update student
[2023-03-23 00:22:58 +0100] [122406] [INFO] [services.student_service] StudentService: Patch student with id: 0d22bfff-c1b8-49a3-98e7-59f637d9f4eb - with following data: academic_year=<AcademicYearsEnum.THIRD: '3'> academic_group=<AcademicGroupsEnum.FIRST_3: '301'>
[2023-03-23 00:22:58 +0100] [122406] [INFO] [db.dao.base_dao] StudentModel DAO: Update db entry
[2023-03-23 00:22:58 +0100] [122406] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for update: item_id: 0d22bfff-c1b8-49a3-98e7-59f637d9f4eb, patch_data: academic_year=<AcademicYearsEnum.THIRD: '3'> academic_group=<AcademicGroupsEnum.FIRST_3: '301'>
[2023-03-23 00:29:43 +0100] [122727] [INFO] [services.student_service] StudentService: Update student
[2023-03-23 00:29:43 +0100] [122727] [TRACE] [services.student_service] StudentService: Patch student with id: 0d22bfff-c1b8-49a3-98e7-59f637d9f4eb - with following data: academic_year=<AcademicYearsEnum.THIRD: '3'> academic_group=<AcademicGroupsEnum.FIRST_3: '301'>
[2023-03-23 00:29:43 +0100] [122727] [INFO] [db.dao.base_dao] StudentModel DAO: Update db entry
[2023-03-23 00:29:43 +0100] [122727] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for update: item_id: 0d22bfff-c1b8-49a3-98e7-59f637d9f4eb, patch_data: academic_year=<AcademicYearsEnum.THIRD: '3'> academic_group=<AcademicGroupsEnum.FIRST_3: '301'>
[2023-03-23 00:29:45 +0100] [122727] [DEBUG] [db.dao.base_dao] StudentModel DAO: received an updated entry from the database <db.models.StudentModel.StudentModel object at 0x7fdfe4e4d670>
[2023-03-23 00:33:08 +0100] [122887] [INFO] [services.student_service] StudentService: Create students
[2023-03-23 00:33:08 +0100] [122887] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_7', second_name='student_7', last_name='student_7', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.THIRD: '3'>, academic_group=<AcademicGroupsEnum.SECOND_3: '302'>), StudentCreateDTO(first_name='student_12', second_name=None, last_name='student_12', birth_date='15-12-2000', academic_year=<AcademicYearsEnum.THIRD: '3'>, academic_group=<AcademicGroupsEnum.FIRST_3: '301'>)]
[2023-03-23 00:33:08 +0100] [122887] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_7' second_name='student_7' last_name='student_7' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.THIRD: '3'> academic_group=<AcademicGroupsEnum.SECOND_3: '302'>
[2023-03-23 00:33:08 +0100] [122887] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-03-23 00:33:08 +0100] [122887] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>}
[2023-03-23 00:33:09 +0100] [122887] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database [{'id': UUID('0d045995-48f8-4807-b014-21cdac752f80'), 'registration_token': 'NDg_jsYNcoj3Sg', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 29, 35, 882773), 'updated_at': datetime.datetime(2023, 3, 22, 17, 29, 35, 882779), 'deleted_at': None}, {'id': UUID('482a5b1b-f00c-4332-931d-a25a2b0bee6c'), 'registration_token': 'U9n5p1-V3P8CWw', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 31, 37, 637915), 'updated_at': datetime.datetime(2023, 3, 22, 17, 31, 37, 637919), 'deleted_at': None}, {'id': UUID('5f7c4dfc-21ca-4139-9d3d-09d3c4a764bc'), 'registration_token': 'uNI5LMRAbF-jxQ', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 33, 40, 875252), 'updated_at': datetime.datetime(2023, 3, 22, 17, 33, 40, 875257), 'deleted_at': None}, {'id': UUID('497e58c0-4045-4b45-b767-ea329c66a31c'), 'registration_token': 'sp389IQKr5MFvQ', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 34, 6, 676180), 'updated_at': datetime.datetime(2023, 3, 22, 17, 34, 6, 676186), 'deleted_at': None}, {'id': UUID('83cfd32d-8d57-4d3b-a2d6-f3534348bc05'), 'registration_token': 'lApH-TYP7zoR5g', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 18, 9, 19, 781535), 'updated_at': datetime.datetime(2023, 3, 22, 18, 9, 19, 781541), 'deleted_at': None}, {'id': UUID('549819c8-bf29-49b6-8751-3d7cdc9d7b54'), 'registration_token': '9l2OxaDlYZX2pA', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 18, 13, 46, 627921), 'updated_at': datetime.datetime(2023, 3, 22, 18, 13, 46, 627925), 'deleted_at': None}]
[2023-03-23 00:34:28 +0100] [122931] [INFO] [services.student_service] StudentService: Create students
[2023-03-23 00:34:28 +0100] [122931] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_7', second_name='student_7', last_name='student_7', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.THIRD: '3'>, academic_group=<AcademicGroupsEnum.SECOND_3: '302'>), StudentCreateDTO(first_name='student_12', second_name=None, last_name='student_12', birth_date='15-12-2000', academic_year=<AcademicYearsEnum.THIRD: '3'>, academic_group=<AcademicGroupsEnum.FIRST_3: '301'>)]
[2023-03-23 00:34:28 +0100] [122931] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_7' second_name='student_7' last_name='student_7' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.THIRD: '3'> academic_group=<AcademicGroupsEnum.SECOND_3: '302'>
[2023-03-23 00:34:28 +0100] [122931] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-03-23 00:34:28 +0100] [122931] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>}
[2023-03-23 00:34:29 +0100] [122931] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database [{'id': UUID('0d045995-48f8-4807-b014-21cdac752f80'), 'registration_token': 'NDg_jsYNcoj3Sg', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 29, 35, 882773), 'updated_at': datetime.datetime(2023, 3, 22, 17, 29, 35, 882779), 'deleted_at': None}, {'id': UUID('482a5b1b-f00c-4332-931d-a25a2b0bee6c'), 'registration_token': 'U9n5p1-V3P8CWw', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 31, 37, 637915), 'updated_at': datetime.datetime(2023, 3, 22, 17, 31, 37, 637919), 'deleted_at': None}, {'id': UUID('5f7c4dfc-21ca-4139-9d3d-09d3c4a764bc'), 'registration_token': 'uNI5LMRAbF-jxQ', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 33, 40, 875252), 'updated_at': datetime.datetime(2023, 3, 22, 17, 33, 40, 875257), 'deleted_at': None}, {'id': UUID('497e58c0-4045-4b45-b767-ea329c66a31c'), 'registration_token': 'sp389IQKr5MFvQ', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 34, 6, 676180), 'updated_at': datetime.datetime(2023, 3, 22, 17, 34, 6, 676186), 'deleted_at': None}, {'id': UUID('83cfd32d-8d57-4d3b-a2d6-f3534348bc05'), 'registration_token': 'lApH-TYP7zoR5g', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 18, 9, 19, 781535), 'updated_at': datetime.datetime(2023, 3, 22, 18, 9, 19, 781541), 'deleted_at': None}, {'id': UUID('549819c8-bf29-49b6-8751-3d7cdc9d7b54'), 'registration_token': '9l2OxaDlYZX2pA', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 18, 13, 46, 627921), 'updated_at': datetime.datetime(2023, 3, 22, 18, 13, 46, 627925), 'deleted_at': None}]
[2023-03-23 00:36:00 +0100] [123030] [INFO] [services.student_service] StudentService: Create students
[2023-03-23 00:36:00 +0100] [123030] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_7', second_name='student_7', last_name='student_7', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.THIRD: '3'>, academic_group=<AcademicGroupsEnum.SECOND_3: '302'>), StudentCreateDTO(first_name='student_12', second_name=None, last_name='student_12', birth_date='15-12-2000', academic_year=<AcademicYearsEnum.THIRD: '3'>, academic_group=<AcademicGroupsEnum.FIRST_3: '301'>)]
[2023-03-23 00:36:00 +0100] [123030] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_7' second_name='student_7' last_name='student_7' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.THIRD: '3'> academic_group=<AcademicGroupsEnum.SECOND_3: '302'>
[2023-03-23 00:36:00 +0100] [123030] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-03-23 00:36:00 +0100] [123030] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>}
[2023-03-23 00:36:01 +0100] [123030] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database [{'id': UUID('0d045995-48f8-4807-b014-21cdac752f80'), 'registration_token': 'NDg_jsYNcoj3Sg', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 29, 35, 882773), 'updated_at': datetime.datetime(2023, 3, 22, 17, 29, 35, 882779), 'deleted_at': None}, {'id': UUID('482a5b1b-f00c-4332-931d-a25a2b0bee6c'), 'registration_token': 'U9n5p1-V3P8CWw', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 31, 37, 637915), 'updated_at': datetime.datetime(2023, 3, 22, 17, 31, 37, 637919), 'deleted_at': None}, {'id': UUID('5f7c4dfc-21ca-4139-9d3d-09d3c4a764bc'), 'registration_token': 'uNI5LMRAbF-jxQ', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 33, 40, 875252), 'updated_at': datetime.datetime(2023, 3, 22, 17, 33, 40, 875257), 'deleted_at': None}, {'id': UUID('497e58c0-4045-4b45-b767-ea329c66a31c'), 'registration_token': 'sp389IQKr5MFvQ', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 34, 6, 676180), 'updated_at': datetime.datetime(2023, 3, 22, 17, 34, 6, 676186), 'deleted_at': None}, {'id': UUID('83cfd32d-8d57-4d3b-a2d6-f3534348bc05'), 'registration_token': 'lApH-TYP7zoR5g', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 18, 9, 19, 781535), 'updated_at': datetime.datetime(2023, 3, 22, 18, 9, 19, 781541), 'deleted_at': None}, {'id': UUID('549819c8-bf29-49b6-8751-3d7cdc9d7b54'), 'registration_token': '9l2OxaDlYZX2pA', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 18, 13, 46, 627921), 'updated_at': datetime.datetime(2023, 3, 22, 18, 13, 46, 627925), 'deleted_at': None}]
[2023-03-23 00:36:30 +0100] [123065] [INFO] [services.student_service] StudentService: Create students
[2023-03-23 00:36:30 +0100] [123065] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_7', second_name='student_7', last_name='student_7', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.THIRD: '3'>, academic_group=<AcademicGroupsEnum.SECOND_3: '302'>), StudentCreateDTO(first_name='student_12', second_name=None, last_name='student_12', birth_date='15-12-2000', academic_year=<AcademicYearsEnum.THIRD: '3'>, academic_group=<AcademicGroupsEnum.FIRST_3: '301'>)]
[2023-03-23 00:36:30 +0100] [123065] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_7' second_name='student_7' last_name='student_7' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.THIRD: '3'> academic_group=<AcademicGroupsEnum.SECOND_3: '302'>
[2023-03-23 00:36:30 +0100] [123065] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-03-23 00:36:30 +0100] [123065] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>}
[2023-03-23 00:36:31 +0100] [123065] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database [{'id': UUID('0d045995-48f8-4807-b014-21cdac752f80'), 'registration_token': 'NDg_jsYNcoj3Sg', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 29, 35, 882773), 'updated_at': datetime.datetime(2023, 3, 22, 17, 29, 35, 882779), 'deleted_at': None}, {'id': UUID('482a5b1b-f00c-4332-931d-a25a2b0bee6c'), 'registration_token': 'U9n5p1-V3P8CWw', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 31, 37, 637915), 'updated_at': datetime.datetime(2023, 3, 22, 17, 31, 37, 637919), 'deleted_at': None}, {'id': UUID('5f7c4dfc-21ca-4139-9d3d-09d3c4a764bc'), 'registration_token': 'uNI5LMRAbF-jxQ', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 33, 40, 875252), 'updated_at': datetime.datetime(2023, 3, 22, 17, 33, 40, 875257), 'deleted_at': None}, {'id': UUID('497e58c0-4045-4b45-b767-ea329c66a31c'), 'registration_token': 'sp389IQKr5MFvQ', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 34, 6, 676180), 'updated_at': datetime.datetime(2023, 3, 22, 17, 34, 6, 676186), 'deleted_at': None}, {'id': UUID('83cfd32d-8d57-4d3b-a2d6-f3534348bc05'), 'registration_token': 'lApH-TYP7zoR5g', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 18, 9, 19, 781535), 'updated_at': datetime.datetime(2023, 3, 22, 18, 9, 19, 781541), 'deleted_at': None}, {'id': UUID('549819c8-bf29-49b6-8751-3d7cdc9d7b54'), 'registration_token': '9l2OxaDlYZX2pA', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 18, 13, 46, 627921), 'updated_at': datetime.datetime(2023, 3, 22, 18, 13, 46, 627925), 'deleted_at': None}]
[2023-03-23 00:36:31 +0100] [123065] [INFO] [services.student_service] StudentService: Got existing student from db: [{'id': UUID('0d045995-48f8-4807-b014-21cdac752f80'), 'registration_token': 'NDg_jsYNcoj3Sg', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 29, 35, 882773), 'updated_at': datetime.datetime(2023, 3, 22, 17, 29, 35, 882779), 'deleted_at': None}, {'id': UUID('482a5b1b-f00c-4332-931d-a25a2b0bee6c'), 'registration_token': 'U9n5p1-V3P8CWw', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 31, 37, 637915), 'updated_at': datetime.datetime(2023, 3, 22, 17, 31, 37, 637919), 'deleted_at': None}, {'id': UUID('5f7c4dfc-21ca-4139-9d3d-09d3c4a764bc'), 'registration_token': 'uNI5LMRAbF-jxQ', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 33, 40, 875252), 'updated_at': datetime.datetime(2023, 3, 22, 17, 33, 40, 875257), 'deleted_at': None}, {'id': UUID('497e58c0-4045-4b45-b767-ea329c66a31c'), 'registration_token': 'sp389IQKr5MFvQ', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 34, 6, 676180), 'updated_at': datetime.datetime(2023, 3, 22, 17, 34, 6, 676186), 'deleted_at': None}, {'id': UUID('83cfd32d-8d57-4d3b-a2d6-f3534348bc05'), 'registration_token': 'lApH-TYP7zoR5g', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 18, 9, 19, 781535), 'updated_at': datetime.datetime(2023, 3, 22, 18, 9, 19, 781541), 'deleted_at': None}, {'id': UUID('549819c8-bf29-49b6-8751-3d7cdc9d7b54'), 'registration_token': '9l2OxaDlYZX2pA', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 18, 13, 46, 627921), 'updated_at': datetime.datetime(2023, 3, 22, 18, 13, 46, 627925), 'deleted_at': None}]
[2023-03-23 00:36:31 +0100] [123065] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_12' second_name=None last_name='student_12' birth_date='15-12-2000' academic_year=<AcademicYearsEnum.THIRD: '3'> academic_group=<AcademicGroupsEnum.FIRST_3: '301'>
[2023-03-23 00:36:31 +0100] [123065] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-03-23 00:36:31 +0100] [123065] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_12', 'second_name': None, 'last_name': 'student_12', 'birth_date': datetime.datetime(2000, 12, 15, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.FIRST_3: '301'>}
[2023-03-23 00:36:31 +0100] [123065] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-03-23 00:36:31 +0100] [123065] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_12', second_name=None, last_name='student_12', birth_date=datetime.datetime(2000, 12, 15, 0, 0), academic_year=<AcademicYearsEnum.THIRD: '3'>, academic_group=<AcademicGroupsEnum.FIRST_3: '301'>, registration_token='cTI74eyuvuCogA')]
[2023-03-23 00:36:31 +0100] [123065] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-03-23 00:36:31 +0100] [123065] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_12', second_name=None, last_name='student_12', birth_date=datetime.datetime(2000, 12, 15, 0, 0), academic_year=<AcademicYearsEnum.THIRD: '3'>, academic_group=<AcademicGroupsEnum.FIRST_3: '301'>, registration_token='cTI74eyuvuCogA')]
[2023-03-23 00:37:53 +0100] [123107] [INFO] [services.student_service] StudentService: Create students
[2023-03-23 00:37:53 +0100] [123107] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_7', second_name='student_7', last_name='student_7', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.THIRD: '3'>, academic_group=<AcademicGroupsEnum.SECOND_3: '302'>), StudentCreateDTO(first_name='student_13', second_name=None, last_name='student_13', birth_date='15-12-2000', academic_year=<AcademicYearsEnum.THIRD: '3'>, academic_group=<AcademicGroupsEnum.FIRST_3: '301'>)]
[2023-03-23 00:37:53 +0100] [123107] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_7' second_name='student_7' last_name='student_7' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.THIRD: '3'> academic_group=<AcademicGroupsEnum.SECOND_3: '302'>
[2023-03-23 00:37:53 +0100] [123107] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-03-23 00:37:53 +0100] [123107] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>}
[2023-03-23 00:37:55 +0100] [123107] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database [{'id': UUID('0d045995-48f8-4807-b014-21cdac752f80'), 'registration_token': 'NDg_jsYNcoj3Sg', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 29, 35, 882773), 'updated_at': datetime.datetime(2023, 3, 22, 17, 29, 35, 882779), 'deleted_at': None}, {'id': UUID('482a5b1b-f00c-4332-931d-a25a2b0bee6c'), 'registration_token': 'U9n5p1-V3P8CWw', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 31, 37, 637915), 'updated_at': datetime.datetime(2023, 3, 22, 17, 31, 37, 637919), 'deleted_at': None}, {'id': UUID('5f7c4dfc-21ca-4139-9d3d-09d3c4a764bc'), 'registration_token': 'uNI5LMRAbF-jxQ', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 33, 40, 875252), 'updated_at': datetime.datetime(2023, 3, 22, 17, 33, 40, 875257), 'deleted_at': None}, {'id': UUID('497e58c0-4045-4b45-b767-ea329c66a31c'), 'registration_token': 'sp389IQKr5MFvQ', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 34, 6, 676180), 'updated_at': datetime.datetime(2023, 3, 22, 17, 34, 6, 676186), 'deleted_at': None}, {'id': UUID('83cfd32d-8d57-4d3b-a2d6-f3534348bc05'), 'registration_token': 'lApH-TYP7zoR5g', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 18, 9, 19, 781535), 'updated_at': datetime.datetime(2023, 3, 22, 18, 9, 19, 781541), 'deleted_at': None}, {'id': UUID('549819c8-bf29-49b6-8751-3d7cdc9d7b54'), 'registration_token': '9l2OxaDlYZX2pA', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 18, 13, 46, 627921), 'updated_at': datetime.datetime(2023, 3, 22, 18, 13, 46, 627925), 'deleted_at': None}]
[2023-03-23 00:37:55 +0100] [123107] [INFO] [services.student_service] StudentService: Got existing student from db: [{'id': UUID('0d045995-48f8-4807-b014-21cdac752f80'), 'registration_token': 'NDg_jsYNcoj3Sg', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 29, 35, 882773), 'updated_at': datetime.datetime(2023, 3, 22, 17, 29, 35, 882779), 'deleted_at': None}, {'id': UUID('482a5b1b-f00c-4332-931d-a25a2b0bee6c'), 'registration_token': 'U9n5p1-V3P8CWw', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 31, 37, 637915), 'updated_at': datetime.datetime(2023, 3, 22, 17, 31, 37, 637919), 'deleted_at': None}, {'id': UUID('5f7c4dfc-21ca-4139-9d3d-09d3c4a764bc'), 'registration_token': 'uNI5LMRAbF-jxQ', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 33, 40, 875252), 'updated_at': datetime.datetime(2023, 3, 22, 17, 33, 40, 875257), 'deleted_at': None}, {'id': UUID('497e58c0-4045-4b45-b767-ea329c66a31c'), 'registration_token': 'sp389IQKr5MFvQ', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 17, 34, 6, 676180), 'updated_at': datetime.datetime(2023, 3, 22, 17, 34, 6, 676186), 'deleted_at': None}, {'id': UUID('83cfd32d-8d57-4d3b-a2d6-f3534348bc05'), 'registration_token': 'lApH-TYP7zoR5g', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 18, 9, 19, 781535), 'updated_at': datetime.datetime(2023, 3, 22, 18, 9, 19, 781541), 'deleted_at': None}, {'id': UUID('549819c8-bf29-49b6-8751-3d7cdc9d7b54'), 'registration_token': '9l2OxaDlYZX2pA', 'registered_user': False, 'first_name': 'student_7', 'second_name': 'student_7', 'last_name': 'student_7', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.SECOND_3: '302'>, 'created_at': datetime.datetime(2023, 3, 22, 18, 13, 46, 627921), 'updated_at': datetime.datetime(2023, 3, 22, 18, 13, 46, 627925), 'deleted_at': None}]
[2023-03-23 00:37:55 +0100] [123107] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_13' second_name=None last_name='student_13' birth_date='15-12-2000' academic_year=<AcademicYearsEnum.THIRD: '3'> academic_group=<AcademicGroupsEnum.FIRST_3: '301'>
[2023-03-23 00:37:55 +0100] [123107] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-03-23 00:37:55 +0100] [123107] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_13', 'second_name': None, 'last_name': 'student_13', 'birth_date': datetime.datetime(2000, 12, 15, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.FIRST_3: '301'>}
[2023-03-23 00:37:55 +0100] [123107] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-03-23 00:37:55 +0100] [123107] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_13', second_name=None, last_name='student_13', birth_date=datetime.datetime(2000, 12, 15, 0, 0), academic_year=<AcademicYearsEnum.THIRD: '3'>, academic_group=<AcademicGroupsEnum.FIRST_3: '301'>, registration_token='2M7Juo-hvkHOMg')]
[2023-03-23 00:37:55 +0100] [123107] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-03-23 00:37:55 +0100] [123107] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_13', second_name=None, last_name='student_13', birth_date=datetime.datetime(2000, 12, 15, 0, 0), academic_year=<AcademicYearsEnum.THIRD: '3'>, academic_group=<AcademicGroupsEnum.FIRST_3: '301'>, registration_token='2M7Juo-hvkHOMg')]
[2023-03-23 00:37:55 +0100] [123107] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('e277b9a7-81b6-452e-be66-d0884aca34d0'), 'registration_token': '2M7Juo-hvkHOMg', 'registered_user': False, 'first_name': 'student_13', 'second_name': None, 'last_name': 'student_13', 'birth_date': datetime.datetime(2000, 12, 15, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.FIRST_3: '301'>, 'created_at': datetime.datetime(2023, 3, 22, 23, 37, 55, 71124), 'updated_at': datetime.datetime(2023, 3, 22, 23, 37, 55, 71128), 'deleted_at': None}]
[2023-03-23 01:57:24 +0100] [126476] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-03-23 01:57:24 +0100] [126476] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$58VdgkL47ZqBRllY2LuT1eA81aA3XeBvplAa/Ifbk8xvOWvjrJ6Dy' email='admin@admin' registration_token='string' first_name='admin' second_name=None last_name='admin' birth_date='01-01-2001'
[2023-03-23 02:43:21 +0100] [130089] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-03-23 02:43:21 +0100] [130089] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: first_name='admin' second_name=None last_name='admin' birth_date='01-01-2001' role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$5fZAHGK/xQSJmhNB18KUOO935o6W9.LNi4MTZ3InmTkTnVX8RYHpe' email='admin@admin' id=None
[2023-03-23 02:44:18 +0100] [130089] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-03-23 02:44:18 +0100] [130089] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: first_name='admin' second_name=None last_name='admin' birth_date='01-01-2001' role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$yoY95qdZdYQtT1/NpuIKM.AlijzQPmHkiYEHCDEbYUmijvqncyYZC' email='admin@admin' id=None
[2023-03-23 02:44:55 +0100] [130157] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-03-23 02:44:55 +0100] [130157] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: first_name='admin' second_name=None last_name='admin' birth_date='01-01-2001' role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$9jVQNftiFQjOqzrv2IResuUMAZjJ67X7miGP2Vqv4/m5UYOvs8Nbm' email='admin@admin' id=None
[2023-03-23 02:46:08 +0100] [130246] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-03-23 02:46:08 +0100] [130246] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: first_name='admin' second_name=None last_name='admin' birth_date='01-01-2001' role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$b6/blgEc39k6n3qmNzNFredgWx/aY/SEgppJZ50a/Z4D.F0ItwwpO' email='admin@admin' id=None
[2023-03-23 02:49:34 +0100] [130272] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-03-23 02:49:34 +0100] [130272] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: first_name='admin' second_name=None last_name='admin' birth_date='01-01-2001' role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$oyLk5CX08crf8Fl/QR77TenLFD/zTrEqgee1Uvrg//1SPM0N64tyu' email='admin@admin' id=None
[2023-03-23 02:51:00 +0100] [130412] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-03-23 02:51:00 +0100] [130412] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$asQdp.huYuXwDT9lPskSdeqYxbaasvCtDtU8bRSwAxs6LHvWZR2Bi' email='admin@admin' id=None
[2023-03-23 02:51:00 +0100] [130412] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: <db.models.UserModel.UserModel object at 0x7f2c4c339340>
