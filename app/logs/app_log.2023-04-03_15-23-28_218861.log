[2023-04-03 15:23:28 +0200] [48070] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 15:23:28 +0200] [48070] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 15:23:28 +0200] [48070] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 15:23:28 +0200] [48070] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 15:23:28 +0200] [48070] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f3f8c757760>
[2023-04-03 15:24:08 +0200] [48380] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 15:24:08 +0200] [48380] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 15:24:08 +0200] [48380] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 15:24:08 +0200] [48380] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 15:24:08 +0200] [48380] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7ff9695dca00>
[2023-04-03 15:24:09 +0200] [48380] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 15:24:09 +0200] [48380] [TRACE] [services.auth_service] AuthService: Create session with user: c2b25623-1567-4c91-9bae-bf50ef7ae791
[2023-04-03 15:24:41 +0200] [48409] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 15:24:41 +0200] [48409] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 15:24:41 +0200] [48409] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 15:24:41 +0200] [48409] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 15:24:41 +0200] [48409] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f10e30b8a30>
[2023-04-03 15:24:41 +0200] [48409] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 15:24:41 +0200] [48409] [TRACE] [services.auth_service] AuthService: Create session with user: c2b25623-1567-4c91-9bae-bf50ef7ae791
[2023-04-03 15:28:52 +0200] [48578] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 15:28:52 +0200] [48578] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 15:28:52 +0200] [48578] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 15:28:52 +0200] [48578] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 15:28:53 +0200] [48578] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fe8d4de84f0>
[2023-04-03 15:28:53 +0200] [48578] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 15:28:53 +0200] [48578] [TRACE] [services.auth_service] AuthService: Create session with user: c2b25623-1567-4c91-9bae-bf50ef7ae791
[2023-04-03 15:31:51 +0200] [48702] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 15:31:51 +0200] [48702] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 15:31:51 +0200] [48702] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 15:31:51 +0200] [48702] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 15:31:51 +0200] [48702] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f74140524f0>
[2023-04-03 15:31:52 +0200] [48702] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 15:31:52 +0200] [48702] [TRACE] [services.auth_service] AuthService: Create session with user: c2b25623-1567-4c91-9bae-bf50ef7ae791
[2023-04-03 15:31:52 +0200] [48702] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 15:31:52 +0200] [48702] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('c2b25623-1567-4c91-9bae-bf50ef7ae791') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 13, 36, 52, 201973) refresh_expire_time=datetime.datetime(2023, 4, 5, 13, 31, 52, 202136) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MjkwMTIsInN1YiI6ImFkbWluQGFkbWluIn0.q4MWXpRUZyniBzdPMPOZ_Gl5lzMhghHnnx5chuP2Vo8' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDE1MTIsInN1YiI6ImFkbWluQGFkbWluIn0.IV_5pmL_qR7EEUfu4b0iHEbEw0fGbd1DXEQJKIzWEaM' blocked=False is_active=True
[2023-04-03 15:34:44 +0200] [48762] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 15:34:44 +0200] [48762] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 15:34:44 +0200] [48762] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 15:34:44 +0200] [48762] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 15:34:44 +0200] [48762] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f10dad764f0>
[2023-04-03 15:34:45 +0200] [48762] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 15:34:45 +0200] [48762] [TRACE] [services.auth_service] AuthService: Create session with user: c2b25623-1567-4c91-9bae-bf50ef7ae791
[2023-04-03 15:34:45 +0200] [48762] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 15:34:45 +0200] [48762] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('c2b25623-1567-4c91-9bae-bf50ef7ae791') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 13, 39, 45, 174794) refresh_expire_time=datetime.datetime(2023, 4, 5, 13, 34, 45, 174956) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MjkxODUsInN1YiI6ImFkbWluQGFkbWluIn0.KeMgx_y5ZzaZQ4iFKqLy1Qt4Kmp2fm4wInSMf0gu6CE' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDE2ODUsInN1YiI6ImFkbWluQGFkbWluIn0.jBv7ZHgWyWgAiYZunrCUl3H02L-KaaPznL3nVEs8SfA' blocked=False is_active=True
[2023-04-03 15:35:42 +0200] [48869] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 15:35:42 +0200] [48869] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 15:35:42 +0200] [48869] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 15:35:42 +0200] [48869] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 15:35:42 +0200] [48869] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fa9a7a87220>
[2023-04-03 15:35:42 +0200] [48869] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 15:35:42 +0200] [48869] [TRACE] [services.auth_service] AuthService: Create session with user: c2b25623-1567-4c91-9bae-bf50ef7ae791
[2023-04-03 15:35:42 +0200] [48869] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 15:35:42 +0200] [48869] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('c2b25623-1567-4c91-9bae-bf50ef7ae791') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 13, 40, 42, 970451) refresh_expire_time=datetime.datetime(2023, 4, 5, 13, 35, 42, 970607) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MjkyNDIsInN1YiI6ImFkbWluQGFkbWluIn0.ohshHvxGlzVPeBmTkmEjC_l30U97p4-mpdGff5CZtI0' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDE3NDIsInN1YiI6ImFkbWluQGFkbWluIn0.ALeSORIAjNPnx26_zC10h5Q4vrF7_foJ1A6FMSRh_i0' blocked=False is_active=True
[2023-04-03 15:37:04 +0200] [48943] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 15:37:04 +0200] [48943] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 15:37:04 +0200] [48943] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 15:37:04 +0200] [48943] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 15:37:04 +0200] [48943] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database None
[2023-04-03 15:37:34 +0200] [48943] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 15:37:34 +0200] [48943] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$zt4aObZxOwsiNmsve/2jKuD9xlBESnpv8vHxZHArJ2InsE2PER2Zm' email='admin@admin' id=None
[2023-04-03 15:39:01 +0200] [49048] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 15:39:01 +0200] [49048] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$nVPOWTyGbOCmo26lyzZVyuUdj6eatcheshMNRvpWg8z2Yx1lk.bF.' email='admin@admin' id=None
[2023-04-03 15:39:01 +0200] [49048] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('4521c8fd-28c4-4f56-976e-5411a9d8cb7b'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$nVPOWTyGbOCmo26lyzZVyuUdj6eatcheshMNRvpWg8z2Yx1lk.bF.', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 13, 39, 1, 479646), 'updated_at': datetime.datetime(2023, 4, 3, 13, 39, 1, 479651)}
[2023-04-03 15:39:07 +0200] [49048] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 15:39:07 +0200] [49048] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 15:39:07 +0200] [49048] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 15:39:07 +0200] [49048] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 15:39:07 +0200] [49048] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fc0f07ce9a0>
[2023-04-03 15:39:07 +0200] [49048] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 15:39:07 +0200] [49048] [TRACE] [services.auth_service] AuthService: Create session with user: 4521c8fd-28c4-4f56-976e-5411a9d8cb7b
[2023-04-03 15:39:07 +0200] [49048] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 15:39:07 +0200] [49048] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('4521c8fd-28c4-4f56-976e-5411a9d8cb7b') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 13, 44, 7, 486698) refresh_expire_time=datetime.datetime(2023, 4, 5, 13, 39, 7, 486852) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1Mjk0NDcsInN1YiI6ImFkbWluQGFkbWluIn0.zeQhc7IH1uu9HcETxQfD7_wfGxotr5WLMB0-Wn1yqxQ' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDE5NDcsInN1YiI6ImFkbWluQGFkbWluIn0.B--u1z5xaVbkqEKVn7qrSChkx4EehE6PW07SheTtWiY' blocked=False is_active=True
[2023-04-03 15:39:07 +0200] [49048] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('7f75c8f5-f9b6-4973-afd7-5e1fe9b9061c'), 'user_id': UUID('4521c8fd-28c4-4f56-976e-5411a9d8cb7b'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1Mjk0NDcsInN1YiI6ImFkbWluQGFkbWluIn0.zeQhc7IH1uu9HcETxQfD7_wfGxotr5WLMB0-Wn1yqxQ', 'access_expire_time': datetime.datetime(2023, 4, 3, 13, 44, 7, 486698), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDE5NDcsInN1YiI6ImFkbWluQGFkbWluIn0.B--u1z5xaVbkqEKVn7qrSChkx4EehE6PW07SheTtWiY', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 13, 39, 7, 486852), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 13, 39, 7, 489404), 'updated_at': datetime.datetime(2023, 4, 3, 13, 39, 7, 489409)}
[2023-04-03 15:58:58 +0200] [54190] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 15:58:58 +0200] [54190] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 15:58:58 +0200] [54190] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 15:58:58 +0200] [54190] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 15:58:58 +0200] [54190] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database None
[2023-04-03 15:59:02 +0200] [54190] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 15:59:02 +0200] [54190] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$KjQYVbXDlDkZv/Nl.66vkObODUjHCrWXH59hokty8OSa7iMhRCV8.' email='admin@admin' id=None
[2023-04-03 15:59:02 +0200] [54190] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('26d27f55-8ea5-4012-a2bd-3b8cce5bb6d8'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$KjQYVbXDlDkZv/Nl.66vkObODUjHCrWXH59hokty8OSa7iMhRCV8.', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 13, 59, 2, 750549), 'updated_at': datetime.datetime(2023, 4, 3, 13, 59, 2, 750553)}
[2023-04-03 15:59:05 +0200] [54190] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 15:59:05 +0200] [54190] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 15:59:05 +0200] [54190] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 15:59:05 +0200] [54190] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 15:59:05 +0200] [54190] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7ff17803f400>
[2023-04-03 15:59:05 +0200] [54190] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 15:59:05 +0200] [54190] [TRACE] [services.auth_service] AuthService: Create session with user: 26d27f55-8ea5-4012-a2bd-3b8cce5bb6d8
[2023-04-03 15:59:05 +0200] [54190] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 15:59:05 +0200] [54190] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('26d27f55-8ea5-4012-a2bd-3b8cce5bb6d8') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 14, 4, 5, 321974) refresh_expire_time=datetime.datetime(2023, 4, 5, 13, 59, 5, 322156) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MzA2NDUsInN1YiI6ImFkbWluQGFkbWluIn0.wYROnSt9w169Z0osggao1NN9z1MN4mroOHkqR4Z3cPE' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDMxNDUsInN1YiI6ImFkbWluQGFkbWluIn0.T9PVNVF_Z1ltTtA4bKsnge-UreRukDgWb5aL1d2aBvU' blocked=False is_active=True
[2023-04-03 15:59:05 +0200] [54190] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('9772af08-b4e1-49e9-8278-515033cee946'), 'user_id': UUID('26d27f55-8ea5-4012-a2bd-3b8cce5bb6d8'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MzA2NDUsInN1YiI6ImFkbWluQGFkbWluIn0.wYROnSt9w169Z0osggao1NN9z1MN4mroOHkqR4Z3cPE', 'access_expire_time': datetime.datetime(2023, 4, 3, 14, 4, 5, 321974), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDMxNDUsInN1YiI6ImFkbWluQGFkbWluIn0.T9PVNVF_Z1ltTtA4bKsnge-UreRukDgWb5aL1d2aBvU', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 13, 59, 5, 322156), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 13, 59, 5, 324880), 'updated_at': datetime.datetime(2023, 4, 3, 13, 59, 5, 324884)}
[2023-04-03 16:02:22 +0200] [54190] [INFO] [services.student_service] StudentService: Create students
[2023-04-03 16:02:22 +0200] [54190] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-03 16:02:22 +0200] [54190] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_1' second_name=None last_name='student_1' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-03 16:02:22 +0200] [54190] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-03 16:02:22 +0200] [54190] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-03 16:02:24 +0200] [54190] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-03 16:02:24 +0200] [54190] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='TbIZ5LCxJxNC2w')]
[2023-04-03 16:02:24 +0200] [54190] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-03 16:02:24 +0200] [54190] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='TbIZ5LCxJxNC2w')]
[2023-04-03 16:02:24 +0200] [54190] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('0e0a7786-dce3-41e8-a6f3-6161f7119d4b'), 'registration_token': 'TbIZ5LCxJxNC2w', 'registered_user': False, 'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 3, 14, 2, 24, 253524), 'updated_at': datetime.datetime(2023, 4, 3, 14, 2, 24, 253528), 'deleted_at': None}]
[2023-04-03 16:06:15 +0200] [54550] [INFO] [services.student_service] StudentService: Create students
[2023-04-03 16:06:15 +0200] [54550] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-03 16:06:15 +0200] [54550] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_1' second_name=None last_name='student_1' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-03 16:06:15 +0200] [54550] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-03 16:06:15 +0200] [54550] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-03 16:06:16 +0200] [54550] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-03 16:06:16 +0200] [54550] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='132e-4Ut_At8Vg')]
[2023-04-03 16:06:16 +0200] [54550] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-03 16:06:16 +0200] [54550] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='132e-4Ut_At8Vg')]
[2023-04-03 16:06:16 +0200] [54550] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('f423c4a9-4fde-4cf2-a525-f9babaed6094'), 'registration_token': '132e-4Ut_At8Vg', 'registered_user': False, 'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 3, 14, 6, 16, 798020), 'updated_at': datetime.datetime(2023, 4, 3, 14, 6, 16, 798025), 'deleted_at': None}]
[2023-04-03 16:08:37 +0200] [54683] [INFO] [services.student_service] StudentService: Create students
[2023-04-03 16:08:37 +0200] [54683] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_2', second_name=None, last_name='student_2', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-03 16:08:37 +0200] [54683] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_2' second_name=None last_name='student_2' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-03 16:08:37 +0200] [54683] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-03 16:08:37 +0200] [54683] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_2', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-03 16:08:38 +0200] [54683] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-03 16:08:38 +0200] [54683] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_2', second_name=None, last_name='student_2', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='UI-7KiSWBfbiJA')]
[2023-04-03 16:08:38 +0200] [54683] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-03 16:08:38 +0200] [54683] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_2', second_name=None, last_name='student_2', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='UI-7KiSWBfbiJA')]
[2023-04-03 16:08:38 +0200] [54683] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('04f3a2af-caf2-424c-8396-56609e0850b6'), 'registration_token': 'UI-7KiSWBfbiJA', 'registered_user': False, 'first_name': 'student_2', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 3, 14, 8, 38, 360709), 'updated_at': datetime.datetime(2023, 4, 3, 14, 8, 38, 360713), 'deleted_at': None}]
[2023-04-03 16:11:13 +0200] [54683] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 16:11:13 +0200] [54683] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 16:11:13 +0200] [54683] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 16:11:13 +0200] [54683] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 16:11:13 +0200] [54683] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database None
[2023-04-03 16:11:21 +0200] [54683] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 16:11:21 +0200] [54683] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$bm60L3zQQ7vD33okVnWUY.lJmXmZyYkVcN.lmBPYeJZjOamwREQuO' email='admin@admin' id=None
[2023-04-03 16:11:21 +0200] [54683] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('066621d8-4d26-457a-bce9-e26a266b67ab'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$bm60L3zQQ7vD33okVnWUY.lJmXmZyYkVcN.lmBPYeJZjOamwREQuO', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 14, 11, 21, 155248), 'updated_at': datetime.datetime(2023, 4, 3, 14, 11, 21, 155254)}
[2023-04-03 16:11:23 +0200] [54683] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 16:11:23 +0200] [54683] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 16:11:23 +0200] [54683] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 16:11:23 +0200] [54683] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 16:11:23 +0200] [54683] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f0fb54364f0>
[2023-04-03 16:11:23 +0200] [54683] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 16:11:23 +0200] [54683] [TRACE] [services.auth_service] AuthService: Create session with user: 066621d8-4d26-457a-bce9-e26a266b67ab
[2023-04-03 16:11:23 +0200] [54683] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 16:11:23 +0200] [54683] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('066621d8-4d26-457a-bce9-e26a266b67ab') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 14, 16, 23, 946867) refresh_expire_time=datetime.datetime(2023, 4, 5, 14, 11, 23, 947016) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MzEzODMsInN1YiI6ImFkbWluQGFkbWluIn0.xrKLwaaaJb0O5yYXlBmSqvcD9N_hcCuFLXOSv8GY1Ck' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDM4ODMsInN1YiI6ImFkbWluQGFkbWluIn0.7yDlH--pK7hEIWBUudsDhHI7sVvHlMyX1B8wedap_aA' blocked=False is_active=True
[2023-04-03 16:11:23 +0200] [54683] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('61348572-6c0d-449e-a5d0-5d41308afef5'), 'user_id': UUID('066621d8-4d26-457a-bce9-e26a266b67ab'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MzEzODMsInN1YiI6ImFkbWluQGFkbWluIn0.xrKLwaaaJb0O5yYXlBmSqvcD9N_hcCuFLXOSv8GY1Ck', 'access_expire_time': datetime.datetime(2023, 4, 3, 14, 16, 23, 946867), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDM4ODMsInN1YiI6ImFkbWluQGFkbWluIn0.7yDlH--pK7hEIWBUudsDhHI7sVvHlMyX1B8wedap_aA', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 14, 11, 23, 947016), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 14, 11, 23, 949441), 'updated_at': datetime.datetime(2023, 4, 3, 14, 11, 23, 949445)}
[2023-04-03 16:11:43 +0200] [54683] [INFO] [services.student_service] StudentService: Create students
[2023-04-03 16:11:43 +0200] [54683] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_2', second_name=None, last_name='student_2', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-03 16:11:43 +0200] [54683] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_2' second_name=None last_name='student_2' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-03 16:11:43 +0200] [54683] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-03 16:11:43 +0200] [54683] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_2', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-03 16:11:43 +0200] [54683] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database [{'id': UUID('04f3a2af-caf2-424c-8396-56609e0850b6'), 'registration_token': 'UI-7KiSWBfbiJA', 'registered_user': False, 'first_name': 'student_2', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 3, 14, 8, 38, 360709), 'updated_at': datetime.datetime(2023, 4, 3, 14, 8, 38, 360713), 'deleted_at': None}]
[2023-04-03 16:11:43 +0200] [54683] [INFO] [services.student_service] StudentService: Got existing student from db: [{'id': UUID('04f3a2af-caf2-424c-8396-56609e0850b6'), 'registration_token': 'UI-7KiSWBfbiJA', 'registered_user': False, 'first_name': 'student_2', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 3, 14, 8, 38, 360709), 'updated_at': datetime.datetime(2023, 4, 3, 14, 8, 38, 360713), 'deleted_at': None}]
[2023-04-03 16:11:43 +0200] [54683] [DEBUG] [services.student_service] StudentService: Students to be registered after check: []
[2023-04-03 16:11:43 +0200] [54683] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-03 16:11:43 +0200] [54683] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: []
[2023-04-03 16:11:43 +0200] [54683] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: []
[2023-04-03 16:13:47 +0200] [54839] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 16:13:47 +0200] [54839] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 16:13:47 +0200] [54839] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 16:13:47 +0200] [54839] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 16:13:47 +0200] [54839] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database None
[2023-04-03 16:13:49 +0200] [54839] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 16:13:49 +0200] [54839] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$1Uh4k7fZUUJqhXPJIGR6ce/owzGVrN32QbGe0ltO/YdzvransvfAG' email='admin@admin' id=None
[2023-04-03 16:13:49 +0200] [54839] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('d3f0c6f4-9bf7-4529-95a1-a619f0cd6c05'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$1Uh4k7fZUUJqhXPJIGR6ce/owzGVrN32QbGe0ltO/YdzvransvfAG', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 14, 13, 49, 933722), 'updated_at': datetime.datetime(2023, 4, 3, 14, 13, 49, 933727)}
[2023-04-03 16:13:51 +0200] [54839] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 16:13:51 +0200] [54839] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 16:13:51 +0200] [54839] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 16:13:51 +0200] [54839] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 16:13:51 +0200] [54839] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fbdc2bc5430>
[2023-04-03 16:13:52 +0200] [54839] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 16:13:52 +0200] [54839] [TRACE] [services.auth_service] AuthService: Create session with user: d3f0c6f4-9bf7-4529-95a1-a619f0cd6c05
[2023-04-03 16:13:52 +0200] [54839] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 16:13:52 +0200] [54839] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('d3f0c6f4-9bf7-4529-95a1-a619f0cd6c05') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 14, 18, 52, 173544) refresh_expire_time=datetime.datetime(2023, 4, 5, 14, 13, 52, 173708) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MzE1MzIsInN1YiI6ImFkbWluQGFkbWluIn0.Y2r6eOdQUDPxxROn4-Ieqi5_mEq144JJI0iiOCDl1w4' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDQwMzIsInN1YiI6ImFkbWluQGFkbWluIn0.AXiBNIafpDQK3QcGO8H4Goa5jecWqa8v3ZN3j-54lew' blocked=False is_active=True
[2023-04-03 16:13:52 +0200] [54839] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('f608d924-0b27-48a7-a060-95581886f6a1'), 'user_id': UUID('d3f0c6f4-9bf7-4529-95a1-a619f0cd6c05'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MzE1MzIsInN1YiI6ImFkbWluQGFkbWluIn0.Y2r6eOdQUDPxxROn4-Ieqi5_mEq144JJI0iiOCDl1w4', 'access_expire_time': datetime.datetime(2023, 4, 3, 14, 18, 52, 173544), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDQwMzIsInN1YiI6ImFkbWluQGFkbWluIn0.AXiBNIafpDQK3QcGO8H4Goa5jecWqa8v3ZN3j-54lew', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 14, 13, 52, 173708), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 14, 13, 52, 176353), 'updated_at': datetime.datetime(2023, 4, 3, 14, 13, 52, 176357)}
[2023-04-03 16:14:03 +0200] [54839] [INFO] [services.student_service] StudentService: Create students
[2023-04-03 16:14:03 +0200] [54839] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_2', second_name=None, last_name='student_2', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-03 16:14:03 +0200] [54839] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_2' second_name=None last_name='student_2' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-03 16:14:03 +0200] [54839] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-03 16:14:03 +0200] [54839] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_2', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-03 16:14:04 +0200] [54839] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-03 16:14:04 +0200] [54839] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_2', second_name=None, last_name='student_2', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='peoOjDv6zOIrpA')]
[2023-04-03 16:14:04 +0200] [54839] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-03 16:14:04 +0200] [54839] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_2', second_name=None, last_name='student_2', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='peoOjDv6zOIrpA')]
[2023-04-03 16:14:04 +0200] [54839] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('916cb42a-7f9c-4718-85de-5b2c8fb5c7b0'), 'registration_token': 'peoOjDv6zOIrpA', 'registered_user': False, 'first_name': 'student_2', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 3, 14, 14, 4, 440017), 'updated_at': datetime.datetime(2023, 4, 3, 14, 14, 4, 440021), 'deleted_at': None}]
[2023-04-03 16:16:40 +0200] [55629] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 16:16:40 +0200] [55629] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 16:16:40 +0200] [55629] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 16:16:40 +0200] [55629] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 16:16:40 +0200] [55629] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database None
[2023-04-03 16:16:42 +0200] [55629] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 16:16:42 +0200] [55629] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$9ifbHKhw.1OpSkOp1eMjhOJeXtHB93YmeuBvI8h4aajsiziNlLUCm' email='admin@admin' id=None
[2023-04-03 16:16:42 +0200] [55629] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('7c7f9620-668a-4c34-837a-48b0f6b61ec0'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$9ifbHKhw.1OpSkOp1eMjhOJeXtHB93YmeuBvI8h4aajsiziNlLUCm', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 14, 16, 42, 863988), 'updated_at': datetime.datetime(2023, 4, 3, 14, 16, 42, 863993)}
[2023-04-03 16:16:44 +0200] [55629] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 16:16:44 +0200] [55629] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 16:16:44 +0200] [55629] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 16:16:44 +0200] [55629] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 16:16:44 +0200] [55629] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f2887fe43a0>
[2023-04-03 16:16:44 +0200] [55629] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 16:16:44 +0200] [55629] [TRACE] [services.auth_service] AuthService: Create session with user: 7c7f9620-668a-4c34-837a-48b0f6b61ec0
[2023-04-03 16:16:44 +0200] [55629] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 16:16:44 +0200] [55629] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('7c7f9620-668a-4c34-837a-48b0f6b61ec0') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 14, 21, 44, 912944) refresh_expire_time=datetime.datetime(2023, 4, 5, 14, 16, 44, 913092) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MzE3MDQsInN1YiI6ImFkbWluQGFkbWluIn0.CAOBsJVOkWgRUJSkerdiqC2d73sgeKt25kpHSVO1Vbg' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDQyMDQsInN1YiI6ImFkbWluQGFkbWluIn0.stn5cc3aUxZZpBmqgBXeGp-jKPGVE0555_4YaGLWWD0' blocked=False is_active=True
[2023-04-03 16:16:44 +0200] [55629] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('04a95474-737e-42d8-8c72-9ef11b1755d0'), 'user_id': UUID('7c7f9620-668a-4c34-837a-48b0f6b61ec0'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MzE3MDQsInN1YiI6ImFkbWluQGFkbWluIn0.CAOBsJVOkWgRUJSkerdiqC2d73sgeKt25kpHSVO1Vbg', 'access_expire_time': datetime.datetime(2023, 4, 3, 14, 21, 44, 912944), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDQyMDQsInN1YiI6ImFkbWluQGFkbWluIn0.stn5cc3aUxZZpBmqgBXeGp-jKPGVE0555_4YaGLWWD0', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 14, 16, 44, 913092), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 14, 16, 44, 915745), 'updated_at': datetime.datetime(2023, 4, 3, 14, 16, 44, 915748)}
[2023-04-03 16:16:48 +0200] [55629] [INFO] [services.student_service] StudentService: Create students
[2023-04-03 16:16:48 +0200] [55629] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_2', second_name=None, last_name='student_2', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-03 16:16:48 +0200] [55629] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_2' second_name=None last_name='student_2' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-03 16:16:48 +0200] [55629] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-03 16:16:48 +0200] [55629] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_2', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-03 16:16:49 +0200] [55629] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-03 16:16:49 +0200] [55629] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_2', second_name=None, last_name='student_2', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='ZvFS2gWUcHcXeA')]
[2023-04-03 16:16:49 +0200] [55629] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-03 16:16:49 +0200] [55629] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_2', second_name=None, last_name='student_2', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='ZvFS2gWUcHcXeA')]
[2023-04-03 16:16:49 +0200] [55629] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('71447f7a-23e2-4f30-8d1f-53db6a60342f'), 'registration_token': 'ZvFS2gWUcHcXeA', 'registered_user': False, 'first_name': 'student_2', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 3, 14, 16, 49, 388027), 'updated_at': datetime.datetime(2023, 4, 3, 14, 16, 49, 388031), 'deleted_at': None}]
[2023-04-03 16:19:46 +0200] [55716] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 16:19:46 +0200] [55716] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$07KV2vg29jAl1V.rUulMkeTpgK8h7XLJSoc2gftmVtQQgT5acw4L.' email='admin@admin' id=None
[2023-04-03 16:19:46 +0200] [55716] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('565d84a3-3ccb-4d85-b34d-3a97d1c4063f'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$07KV2vg29jAl1V.rUulMkeTpgK8h7XLJSoc2gftmVtQQgT5acw4L.', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 14, 19, 46, 339472), 'updated_at': datetime.datetime(2023, 4, 3, 14, 19, 46, 339480)}
[2023-04-03 16:19:48 +0200] [55716] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 16:19:48 +0200] [55716] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 16:19:48 +0200] [55716] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 16:19:48 +0200] [55716] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 16:19:48 +0200] [55716] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f13e13327f0>
[2023-04-03 16:19:48 +0200] [55716] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 16:19:48 +0200] [55716] [TRACE] [services.auth_service] AuthService: Create session with user: 565d84a3-3ccb-4d85-b34d-3a97d1c4063f
[2023-04-03 16:19:48 +0200] [55716] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 16:19:48 +0200] [55716] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('565d84a3-3ccb-4d85-b34d-3a97d1c4063f') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 14, 24, 48, 438028) refresh_expire_time=datetime.datetime(2023, 4, 5, 14, 19, 48, 438185) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MzE4ODgsInN1YiI6ImFkbWluQGFkbWluIn0.-OUiwjAP2b95z2gDTCw4fTeiDEAXjbNh7TZ0wXl5jY0' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDQzODgsInN1YiI6ImFkbWluQGFkbWluIn0.2ZPNbebVaSyhxVB-uuN7O8O6wgKENXz7kkdGv_TtVVk' blocked=False is_active=True
[2023-04-03 16:19:48 +0200] [55716] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('562ac047-5385-4bd4-8868-9fea49e1883e'), 'user_id': UUID('565d84a3-3ccb-4d85-b34d-3a97d1c4063f'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MzE4ODgsInN1YiI6ImFkbWluQGFkbWluIn0.-OUiwjAP2b95z2gDTCw4fTeiDEAXjbNh7TZ0wXl5jY0', 'access_expire_time': datetime.datetime(2023, 4, 3, 14, 24, 48, 438028), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDQzODgsInN1YiI6ImFkbWluQGFkbWluIn0.2ZPNbebVaSyhxVB-uuN7O8O6wgKENXz7kkdGv_TtVVk', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 14, 19, 48, 438185), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 14, 19, 48, 440869), 'updated_at': datetime.datetime(2023, 4, 3, 14, 19, 48, 440874)}
[2023-04-03 16:19:51 +0200] [55716] [INFO] [services.student_service] StudentService: Create students
[2023-04-03 16:19:51 +0200] [55716] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_2', second_name=None, last_name='student_2', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-03 16:19:51 +0200] [55716] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_2' second_name=None last_name='student_2' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-03 16:19:51 +0200] [55716] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-03 16:19:51 +0200] [55716] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_2', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-03 16:19:52 +0200] [55716] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-03 16:19:52 +0200] [55716] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_2', second_name=None, last_name='student_2', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='lic8R_M7uf5MGg')]
[2023-04-03 16:19:52 +0200] [55716] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-03 16:19:52 +0200] [55716] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_2', second_name=None, last_name='student_2', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='lic8R_M7uf5MGg')]
[2023-04-03 16:19:52 +0200] [55716] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('07abcefc-f029-4b25-ae84-3c22bd26d980'), 'registration_token': 'lic8R_M7uf5MGg', 'registered_user': False, 'first_name': 'student_2', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 3, 14, 19, 52, 334017), 'updated_at': datetime.datetime(2023, 4, 3, 14, 19, 52, 334020), 'deleted_at': None}]
[2023-04-03 16:21:05 +0200] [55863] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 16:21:05 +0200] [55863] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$/amH5gkk3b9OYF2yZMYj1eU.y2NkvE3jEJ/2KoSs5Lkcr.J7pUZsW' email='admin@admin' id=None
[2023-04-03 16:21:05 +0200] [55863] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('fe7bab4d-33a5-4bf8-a09c-fe19145a5dce'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$/amH5gkk3b9OYF2yZMYj1eU.y2NkvE3jEJ/2KoSs5Lkcr.J7pUZsW', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 14, 21, 5, 502579), 'updated_at': datetime.datetime(2023, 4, 3, 14, 21, 5, 502584)}
[2023-04-03 16:21:07 +0200] [55863] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 16:21:07 +0200] [55863] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 16:21:07 +0200] [55863] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 16:21:07 +0200] [55863] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 16:21:07 +0200] [55863] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fcfb4fe8910>
[2023-04-03 16:21:08 +0200] [55863] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 16:21:08 +0200] [55863] [TRACE] [services.auth_service] AuthService: Create session with user: fe7bab4d-33a5-4bf8-a09c-fe19145a5dce
[2023-04-03 16:21:08 +0200] [55863] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 16:21:08 +0200] [55863] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('fe7bab4d-33a5-4bf8-a09c-fe19145a5dce') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 14, 26, 8, 130453) refresh_expire_time=datetime.datetime(2023, 4, 5, 14, 21, 8, 130608) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MzE5NjgsInN1YiI6ImFkbWluQGFkbWluIn0.3ZnBAk02tBC5zZ2Xl4gBJq5So6QFZvM1mvvwl1U_rrw' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDQ0NjgsInN1YiI6ImFkbWluQGFkbWluIn0.SjQqgrQMH9Z6ByF9AhqfLZ9G-b9kTCAI8D1UoA9F4xk' blocked=False is_active=True
[2023-04-03 16:21:08 +0200] [55863] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('62baa2be-4fb5-4661-a778-61188f058dff'), 'user_id': UUID('fe7bab4d-33a5-4bf8-a09c-fe19145a5dce'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MzE5NjgsInN1YiI6ImFkbWluQGFkbWluIn0.3ZnBAk02tBC5zZ2Xl4gBJq5So6QFZvM1mvvwl1U_rrw', 'access_expire_time': datetime.datetime(2023, 4, 3, 14, 26, 8, 130453), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDQ0NjgsInN1YiI6ImFkbWluQGFkbWluIn0.SjQqgrQMH9Z6ByF9AhqfLZ9G-b9kTCAI8D1UoA9F4xk', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 14, 21, 8, 130608), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 14, 21, 8, 133206), 'updated_at': datetime.datetime(2023, 4, 3, 14, 21, 8, 133210)}
[2023-04-03 16:21:11 +0200] [55863] [INFO] [services.student_service] StudentService: Create students
[2023-04-03 16:21:11 +0200] [55863] [TRACE] [services.student_service] StudentService: Register students with passed data [{'first_name': 'student_2', 'last_name': 'student_2', 'birth_date': '28-02-2002', 'academic_year': '2', 'academic_group': '202'}]
[2023-04-03 16:21:11 +0200] [55863] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: {'first_name': 'student_2', 'last_name': 'student_2', 'birth_date': '28-02-2002', 'academic_year': '2', 'academic_group': '202'}
[2023-04-03 16:22:54 +0200] [55948] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 16:22:54 +0200] [55948] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$JFcvXq5x3Vsv40ZnHv4lH.AJFFIp6wWyhfyx5NCF3gB7DQRjoIAgO' email='admin@admin' id=None
[2023-04-03 16:22:55 +0200] [55948] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('334d6f36-723a-42a9-95c2-e721acdcf293'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$JFcvXq5x3Vsv40ZnHv4lH.AJFFIp6wWyhfyx5NCF3gB7DQRjoIAgO', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 14, 22, 54, 555532), 'updated_at': datetime.datetime(2023, 4, 3, 14, 22, 54, 555537)}
[2023-04-03 16:22:57 +0200] [55948] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 16:22:57 +0200] [55948] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 16:22:57 +0200] [55948] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 16:22:57 +0200] [55948] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 16:22:57 +0200] [55948] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f6bbc3fb910>
[2023-04-03 16:22:57 +0200] [55948] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 16:22:57 +0200] [55948] [TRACE] [services.auth_service] AuthService: Create session with user: 334d6f36-723a-42a9-95c2-e721acdcf293
[2023-04-03 16:22:57 +0200] [55948] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 16:22:57 +0200] [55948] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('334d6f36-723a-42a9-95c2-e721acdcf293') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 14, 27, 57, 926174) refresh_expire_time=datetime.datetime(2023, 4, 5, 14, 22, 57, 926318) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MzIwNzcsInN1YiI6ImFkbWluQGFkbWluIn0.vOnXbHlKzNQGYYDCTMPtRIqSv7IJL8wjKr9bElwt65o' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDQ1NzcsInN1YiI6ImFkbWluQGFkbWluIn0.AqjKxBm1c70PulTaTazF6tS3iFyhFTDzjY4IkWe9rlA' blocked=False is_active=True
[2023-04-03 16:22:57 +0200] [55948] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('7474ea3e-151f-4393-aef0-381e49ef0ebe'), 'user_id': UUID('334d6f36-723a-42a9-95c2-e721acdcf293'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MzIwNzcsInN1YiI6ImFkbWluQGFkbWluIn0.vOnXbHlKzNQGYYDCTMPtRIqSv7IJL8wjKr9bElwt65o', 'access_expire_time': datetime.datetime(2023, 4, 3, 14, 27, 57, 926174), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDQ1NzcsInN1YiI6ImFkbWluQGFkbWluIn0.AqjKxBm1c70PulTaTazF6tS3iFyhFTDzjY4IkWe9rlA', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 14, 22, 57, 926318), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 14, 22, 57, 928846), 'updated_at': datetime.datetime(2023, 4, 3, 14, 22, 57, 928850)}
[2023-04-03 16:29:04 +0200] [56477] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 16:29:04 +0200] [56477] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$fEyeL5cmkakFMRGc8jogKOihktcSVr8EgFGdJV1mVz1DGuJfbw4UC' email='admin@admin' id=None
[2023-04-03 16:29:05 +0200] [56477] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('54b1086d-0fc0-4c7e-b079-f48819cdebb3'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$fEyeL5cmkakFMRGc8jogKOihktcSVr8EgFGdJV1mVz1DGuJfbw4UC', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 14, 29, 4, 331487), 'updated_at': datetime.datetime(2023, 4, 3, 14, 29, 4, 331492)}
[2023-04-03 16:29:08 +0200] [56477] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 16:29:08 +0200] [56477] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 16:29:08 +0200] [56477] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 16:29:08 +0200] [56477] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 16:29:08 +0200] [56477] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f5640722370>
[2023-04-03 16:29:08 +0200] [56477] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 16:29:08 +0200] [56477] [TRACE] [services.auth_service] AuthService: Create session with user: 54b1086d-0fc0-4c7e-b079-f48819cdebb3
[2023-04-03 16:29:08 +0200] [56477] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 16:29:08 +0200] [56477] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('54b1086d-0fc0-4c7e-b079-f48819cdebb3') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 14, 34, 8, 261409) refresh_expire_time=datetime.datetime(2023, 4, 5, 14, 29, 8, 261560) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MzI0NDgsInN1YiI6ImFkbWluQGFkbWluIn0.ka0B79ZtMnteJtC_3gd-BRg4wT_buUgc7IFijAToQnc' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDQ5NDgsInN1YiI6ImFkbWluQGFkbWluIn0.pr7IHllqyLHT6-z1iAPbrG8K9G1M9SsqXQM1VRXIb_k' blocked=False is_active=True
[2023-04-03 16:29:08 +0200] [56477] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('377e5752-66cc-49a0-b5bf-acae21afd494'), 'user_id': UUID('54b1086d-0fc0-4c7e-b079-f48819cdebb3'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MzI0NDgsInN1YiI6ImFkbWluQGFkbWluIn0.ka0B79ZtMnteJtC_3gd-BRg4wT_buUgc7IFijAToQnc', 'access_expire_time': datetime.datetime(2023, 4, 3, 14, 34, 8, 261409), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDQ5NDgsInN1YiI6ImFkbWluQGFkbWluIn0.pr7IHllqyLHT6-z1iAPbrG8K9G1M9SsqXQM1VRXIb_k', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 14, 29, 8, 261560), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 14, 29, 8, 264358), 'updated_at': datetime.datetime(2023, 4, 3, 14, 29, 8, 264362)}
[2023-04-03 16:29:45 +0200] [56667] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 16:29:45 +0200] [56667] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$NduNmE2ySCxNCESzb1tSVuCtaj9lCRpTQsfcCYpz.WQuABxtCjz1u' email='admin@admin' id=None
[2023-04-03 16:29:46 +0200] [56667] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('8fbcaea4-b6c9-4031-a6e4-6df7fd40bccd'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$NduNmE2ySCxNCESzb1tSVuCtaj9lCRpTQsfcCYpz.WQuABxtCjz1u', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 14, 29, 45, 514643), 'updated_at': datetime.datetime(2023, 4, 3, 14, 29, 45, 514648)}
[2023-04-03 16:29:49 +0200] [56667] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 16:29:49 +0200] [56667] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 16:29:49 +0200] [56667] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 16:29:49 +0200] [56667] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 16:29:49 +0200] [56667] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fc41b031310>
[2023-04-03 16:29:50 +0200] [56667] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 16:29:50 +0200] [56667] [TRACE] [services.auth_service] AuthService: Create session with user: 8fbcaea4-b6c9-4031-a6e4-6df7fd40bccd
[2023-04-03 16:29:50 +0200] [56667] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 16:29:50 +0200] [56667] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('8fbcaea4-b6c9-4031-a6e4-6df7fd40bccd') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 14, 34, 50, 230775) refresh_expire_time=datetime.datetime(2023, 4, 5, 14, 29, 50, 230932) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MzI0OTAsInN1YiI6ImFkbWluQGFkbWluIn0.YimsN_HuaBTH0nxuJcn6lsActMJiOtulKztW5b6PLI0' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDQ5OTAsInN1YiI6ImFkbWluQGFkbWluIn0.mKXz1ZY68WfW_8MbEjp6OkTDJcnyqJH6DjaiHHBqU6c' blocked=False is_active=True
[2023-04-03 16:29:50 +0200] [56667] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('2fc12c81-9471-4cb2-b3c7-247754bf62e7'), 'user_id': UUID('8fbcaea4-b6c9-4031-a6e4-6df7fd40bccd'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MzI0OTAsInN1YiI6ImFkbWluQGFkbWluIn0.YimsN_HuaBTH0nxuJcn6lsActMJiOtulKztW5b6PLI0', 'access_expire_time': datetime.datetime(2023, 4, 3, 14, 34, 50, 230775), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDQ5OTAsInN1YiI6ImFkbWluQGFkbWluIn0.mKXz1ZY68WfW_8MbEjp6OkTDJcnyqJH6DjaiHHBqU6c', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 14, 29, 50, 230932), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 14, 29, 50, 234145), 'updated_at': datetime.datetime(2023, 4, 3, 14, 29, 50, 234151)}
[2023-04-03 16:32:50 +0200] [56818] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 16:32:50 +0200] [56818] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$o8z7tt1p8aM5FsPM54E5mu9wjLt108xKkyuX4sSYrV443Yl0yM7Jq' email='admin@admin' id=None
[2023-04-03 16:32:51 +0200] [56818] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('49cf9b02-a5ee-46b1-8199-3aaa2aba9872'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$o8z7tt1p8aM5FsPM54E5mu9wjLt108xKkyuX4sSYrV443Yl0yM7Jq', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 14, 32, 50, 166927), 'updated_at': datetime.datetime(2023, 4, 3, 14, 32, 50, 166931)}
[2023-04-03 16:32:53 +0200] [56818] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 16:32:53 +0200] [56818] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 16:32:53 +0200] [56818] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 16:32:53 +0200] [56818] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 16:32:53 +0200] [56818] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f0c9df42130>
[2023-04-03 16:32:53 +0200] [56818] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 16:32:53 +0200] [56818] [TRACE] [services.auth_service] AuthService: Create session with user: 49cf9b02-a5ee-46b1-8199-3aaa2aba9872
[2023-04-03 16:32:53 +0200] [56818] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 16:32:53 +0200] [56818] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('49cf9b02-a5ee-46b1-8199-3aaa2aba9872') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 14, 37, 53, 995110) refresh_expire_time=datetime.datetime(2023, 4, 5, 14, 32, 53, 995258) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MzI2NzMsInN1YiI6ImFkbWluQGFkbWluIn0.fvOsO9zBine8Wc2GGgiLLANFtPevMCiwK3a9dcUxYDA' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDUxNzMsInN1YiI6ImFkbWluQGFkbWluIn0.q2TStNuHxHs55UnEwwv2DqNzveBe1GOmyiI7XASDz5o' blocked=False is_active=True
[2023-04-03 16:32:54 +0200] [56818] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('0a445912-bfb5-4a62-933b-20f4ed457d25'), 'user_id': UUID('49cf9b02-a5ee-46b1-8199-3aaa2aba9872'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MzI2NzMsInN1YiI6ImFkbWluQGFkbWluIn0.fvOsO9zBine8Wc2GGgiLLANFtPevMCiwK3a9dcUxYDA', 'access_expire_time': datetime.datetime(2023, 4, 3, 14, 37, 53, 995110), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDUxNzMsInN1YiI6ImFkbWluQGFkbWluIn0.q2TStNuHxHs55UnEwwv2DqNzveBe1GOmyiI7XASDz5o', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 14, 32, 53, 995258), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 14, 32, 53, 997881), 'updated_at': datetime.datetime(2023, 4, 3, 14, 32, 53, 997885)}
[2023-04-03 16:47:36 +0200] [57400] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 16:47:36 +0200] [57400] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$vM5U5m7FhBSVbhqr82CARuX.i.8i9wMCLjDa.O5F.U88IfD.sFfCW' email='admin@admin' id=None
[2023-04-03 16:47:37 +0200] [57400] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('68df6954-9f06-4645-beed-662f1759ed82'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$vM5U5m7FhBSVbhqr82CARuX.i.8i9wMCLjDa.O5F.U88IfD.sFfCW', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 14, 47, 36, 344992), 'updated_at': datetime.datetime(2023, 4, 3, 14, 47, 36, 344998)}
[2023-04-03 16:47:39 +0200] [57400] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 16:47:39 +0200] [57400] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 16:47:39 +0200] [57400] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 16:47:39 +0200] [57400] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 16:47:39 +0200] [57400] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f12cc06a4c0>
[2023-04-03 16:47:39 +0200] [57400] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 16:47:39 +0200] [57400] [TRACE] [services.auth_service] AuthService: Create session with user: 68df6954-9f06-4645-beed-662f1759ed82
[2023-04-03 16:47:39 +0200] [57400] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 16:47:39 +0200] [57400] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('68df6954-9f06-4645-beed-662f1759ed82') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 14, 52, 39, 973102) refresh_expire_time=datetime.datetime(2023, 4, 5, 14, 47, 39, 973265) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MzM1NTksInN1YiI6ImFkbWluQGFkbWluIn0.1nXffDQ3lS5qcrNfFChwZjfEUlvGRSNfMtMiHno8FM0' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDYwNTksInN1YiI6ImFkbWluQGFkbWluIn0.9R2hLAQjuoXZ1N1VDxOo_F7qgWGncpOSQeoU_3tLgog' blocked=False is_active=True
[2023-04-03 16:47:39 +0200] [57400] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('d4d85d2d-3f68-4b4c-9b8b-a3fe00dc6e6c'), 'user_id': UUID('68df6954-9f06-4645-beed-662f1759ed82'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MzM1NTksInN1YiI6ImFkbWluQGFkbWluIn0.1nXffDQ3lS5qcrNfFChwZjfEUlvGRSNfMtMiHno8FM0', 'access_expire_time': datetime.datetime(2023, 4, 3, 14, 52, 39, 973102), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDYwNTksInN1YiI6ImFkbWluQGFkbWluIn0.9R2hLAQjuoXZ1N1VDxOo_F7qgWGncpOSQeoU_3tLgog', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 14, 47, 39, 973265), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 14, 47, 39, 976871), 'updated_at': datetime.datetime(2023, 4, 3, 14, 47, 39, 976875)}
[2023-04-03 16:48:46 +0200] [57488] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 16:48:46 +0200] [57488] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$OFBz41Lr8uKrPUUps30yUu/JUU48xnt1w7/ukyP0seimFhu0DLUpS' email='admin@admin' id=None
[2023-04-03 16:48:48 +0200] [57488] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('6cfecffa-95fd-4e7f-b5f5-f054f54775c9'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$OFBz41Lr8uKrPUUps30yUu/JUU48xnt1w7/ukyP0seimFhu0DLUpS', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 14, 48, 46, 840520), 'updated_at': datetime.datetime(2023, 4, 3, 14, 48, 46, 840529)}
[2023-04-03 16:48:50 +0200] [57488] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 16:48:50 +0200] [57488] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 16:48:50 +0200] [57488] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 16:48:50 +0200] [57488] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 16:48:50 +0200] [57488] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f2c8c3e6550>
[2023-04-03 16:48:50 +0200] [57488] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 16:48:50 +0200] [57488] [TRACE] [services.auth_service] AuthService: Create session with user: 6cfecffa-95fd-4e7f-b5f5-f054f54775c9
[2023-04-03 16:48:50 +0200] [57488] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 16:48:50 +0200] [57488] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('6cfecffa-95fd-4e7f-b5f5-f054f54775c9') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 14, 53, 50, 643569) refresh_expire_time=datetime.datetime(2023, 4, 5, 14, 48, 50, 643747) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MzM2MzAsInN1YiI6ImFkbWluQGFkbWluIn0.bR4ZfdSiiUaHp4iVXe0P5P0fts1BGFhSU9Iyi-pqCGc' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDYxMzAsInN1YiI6ImFkbWluQGFkbWluIn0.rm6cOywg6lA8hg4PTO0hQ_hyx3vj-9qovxAGf3DbP9k' blocked=False is_active=True
[2023-04-03 16:48:50 +0200] [57488] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('7d6ea10c-9bf3-455d-9d00-aac38637f665'), 'user_id': UUID('6cfecffa-95fd-4e7f-b5f5-f054f54775c9'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MzM2MzAsInN1YiI6ImFkbWluQGFkbWluIn0.bR4ZfdSiiUaHp4iVXe0P5P0fts1BGFhSU9Iyi-pqCGc', 'access_expire_time': datetime.datetime(2023, 4, 3, 14, 53, 50, 643569), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDYxMzAsInN1YiI6ImFkbWluQGFkbWluIn0.rm6cOywg6lA8hg4PTO0hQ_hyx3vj-9qovxAGf3DbP9k', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 14, 48, 50, 643747), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 14, 48, 50, 646636), 'updated_at': datetime.datetime(2023, 4, 3, 14, 48, 50, 646640)}
[2023-04-03 16:50:40 +0200] [57566] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 16:50:40 +0200] [57566] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$Yj.2.n.6lUjSr9MMmnplrO3UwhHc/J2hg8Lfy/Oo75pxVhi7wd0dm' email='admin@admin' id=None
[2023-04-03 16:50:41 +0200] [57566] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('ff482f3f-d43a-48bd-b68d-bda011ec1061'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$Yj.2.n.6lUjSr9MMmnplrO3UwhHc/J2hg8Lfy/Oo75pxVhi7wd0dm', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 14, 50, 40, 174766), 'updated_at': datetime.datetime(2023, 4, 3, 14, 50, 40, 174771)}
[2023-04-03 16:50:43 +0200] [57566] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 16:50:43 +0200] [57566] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 16:50:43 +0200] [57566] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 16:50:43 +0200] [57566] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 16:50:43 +0200] [57566] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fd1f7f5e4c0>
[2023-04-03 16:50:43 +0200] [57566] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 16:50:43 +0200] [57566] [TRACE] [services.auth_service] AuthService: Create session with user: ff482f3f-d43a-48bd-b68d-bda011ec1061
[2023-04-03 16:50:43 +0200] [57566] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 16:50:43 +0200] [57566] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('ff482f3f-d43a-48bd-b68d-bda011ec1061') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 14, 55, 43, 956730) refresh_expire_time=datetime.datetime(2023, 4, 5, 14, 50, 43, 956876) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MzM3NDMsInN1YiI6ImFkbWluQGFkbWluIn0.RBdWFETvsXGiwz4TpMro8zCkDTSzxXwjsqVGbTKfPP4' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDYyNDMsInN1YiI6ImFkbWluQGFkbWluIn0.X9ikEc0qonKKDOmDCV7a8BbyD1fE-bkWYjilIaRpuYA' blocked=False is_active=True
[2023-04-03 16:50:43 +0200] [57566] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('b3260c41-9cb1-449c-8284-2fd9d0728a46'), 'user_id': UUID('ff482f3f-d43a-48bd-b68d-bda011ec1061'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MzM3NDMsInN1YiI6ImFkbWluQGFkbWluIn0.RBdWFETvsXGiwz4TpMro8zCkDTSzxXwjsqVGbTKfPP4', 'access_expire_time': datetime.datetime(2023, 4, 3, 14, 55, 43, 956730), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDYyNDMsInN1YiI6ImFkbWluQGFkbWluIn0.X9ikEc0qonKKDOmDCV7a8BbyD1fE-bkWYjilIaRpuYA', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 14, 50, 43, 956876), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 14, 50, 43, 959625), 'updated_at': datetime.datetime(2023, 4, 3, 14, 50, 43, 959629)}
[2023-04-03 18:16:39 +0200] [68560] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 18:16:39 +0200] [68560] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$rDLtZYjmo5GIh9FcSVuE5O7DSlNyGc2gSoAkf63nvIDKjlSpAFY5.' email='admin@admin' id=None
[2023-04-03 18:16:41 +0200] [68560] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('8d2e5c2e-8569-4f34-9c23-de460b8ac851'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$rDLtZYjmo5GIh9FcSVuE5O7DSlNyGc2gSoAkf63nvIDKjlSpAFY5.', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 16, 16, 39, 783646), 'updated_at': datetime.datetime(2023, 4, 3, 16, 16, 39, 783652)}
[2023-04-03 18:16:43 +0200] [68560] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 18:16:43 +0200] [68560] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 18:16:43 +0200] [68560] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 18:16:43 +0200] [68560] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 18:16:43 +0200] [68560] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f4d9cbe5400>
[2023-04-03 18:16:43 +0200] [68560] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 18:16:43 +0200] [68560] [TRACE] [services.auth_service] AuthService: Create session with user: 8d2e5c2e-8569-4f34-9c23-de460b8ac851
[2023-04-03 18:16:43 +0200] [68560] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 18:16:43 +0200] [68560] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('8d2e5c2e-8569-4f34-9c23-de460b8ac851') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 16, 21, 43, 451828) refresh_expire_time=datetime.datetime(2023, 4, 5, 16, 16, 43, 451980) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1Mzg5MDMsInN1YiI6ImFkbWluQGFkbWluIn0.7nF8nPRsUCO0Ub6fT-qfCruUrvm2MrauYj_MS7NZugY' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTE0MDMsInN1YiI6ImFkbWluQGFkbWluIn0.0Oyv97r3Pr3PfWIoChRA8bYFhUcmbR2WT_P5emmsCqE' blocked=False is_active=True
[2023-04-03 18:16:43 +0200] [68560] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('6dfa247f-d446-4102-9511-e3c458b0be13'), 'user_id': UUID('8d2e5c2e-8569-4f34-9c23-de460b8ac851'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1Mzg5MDMsInN1YiI6ImFkbWluQGFkbWluIn0.7nF8nPRsUCO0Ub6fT-qfCruUrvm2MrauYj_MS7NZugY', 'access_expire_time': datetime.datetime(2023, 4, 3, 16, 21, 43, 451828), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTE0MDMsInN1YiI6ImFkbWluQGFkbWluIn0.0Oyv97r3Pr3PfWIoChRA8bYFhUcmbR2WT_P5emmsCqE', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 16, 16, 43, 451980), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 16, 16, 43, 456011), 'updated_at': datetime.datetime(2023, 4, 3, 16, 16, 43, 456019)}
[2023-04-03 18:22:11 +0200] [68997] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 18:22:11 +0200] [68997] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$7CGDYHDvexzrY.CA/vzyaOUHB3NJBf5u1gv/kamLM5CMoXVuMl1Ju' email='admin@admin' id=None
[2023-04-03 18:22:12 +0200] [68997] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('e86ee611-3522-4ab1-b6e7-3d4477198d6b'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$7CGDYHDvexzrY.CA/vzyaOUHB3NJBf5u1gv/kamLM5CMoXVuMl1Ju', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 16, 22, 11, 288438), 'updated_at': datetime.datetime(2023, 4, 3, 16, 22, 11, 288443)}
[2023-04-03 18:22:14 +0200] [68997] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 18:22:14 +0200] [68997] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 18:22:14 +0200] [68997] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 18:22:14 +0200] [68997] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 18:22:14 +0200] [68997] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f8c100244c0>
[2023-04-03 18:22:15 +0200] [68997] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 18:22:15 +0200] [68997] [TRACE] [services.auth_service] AuthService: Create session with user: e86ee611-3522-4ab1-b6e7-3d4477198d6b
[2023-04-03 18:22:15 +0200] [68997] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 18:22:15 +0200] [68997] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('e86ee611-3522-4ab1-b6e7-3d4477198d6b') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 16, 27, 15, 34269) refresh_expire_time=datetime.datetime(2023, 4, 5, 16, 22, 15, 34418) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MzkyMzUsInN1YiI6ImFkbWluQGFkbWluIn0._2bDaZj5UvoGKmsFrA0OHfcQjvYsnrC0wzXgUCwr6FU' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTE3MzUsInN1YiI6ImFkbWluQGFkbWluIn0.aUAKsGJiytEUfM4gTibAVk1fRAb65asAXLu1z5DdpbY' blocked=False is_active=True
[2023-04-03 18:22:15 +0200] [68997] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('d43fd259-4f92-4a4e-b734-50d61d7d5989'), 'user_id': UUID('e86ee611-3522-4ab1-b6e7-3d4477198d6b'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MzkyMzUsInN1YiI6ImFkbWluQGFkbWluIn0._2bDaZj5UvoGKmsFrA0OHfcQjvYsnrC0wzXgUCwr6FU', 'access_expire_time': datetime.datetime(2023, 4, 3, 16, 27, 15, 34269), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTE3MzUsInN1YiI6ImFkbWluQGFkbWluIn0.aUAKsGJiytEUfM4gTibAVk1fRAb65asAXLu1z5DdpbY', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 16, 22, 15, 34418), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 16, 22, 15, 36960), 'updated_at': datetime.datetime(2023, 4, 3, 16, 22, 15, 36964)}
[2023-04-03 18:24:21 +0200] [69086] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 18:24:21 +0200] [69086] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$VrpoUid6K2kyOjQBIwbuC.4vu/VLTsy30JDhUlIqV/d697sWaP0iK' email='admin@admin' id=None
[2023-04-03 18:24:22 +0200] [69086] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('ba5f1661-77ee-4b18-b09f-853ec3eefc7c'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$VrpoUid6K2kyOjQBIwbuC.4vu/VLTsy30JDhUlIqV/d697sWaP0iK', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 16, 24, 21, 512413), 'updated_at': datetime.datetime(2023, 4, 3, 16, 24, 21, 512419)}
[2023-04-03 18:24:24 +0200] [69086] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 18:24:24 +0200] [69086] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 18:24:24 +0200] [69086] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 18:24:24 +0200] [69086] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 18:24:24 +0200] [69086] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f12ea1b0100>
[2023-04-03 18:24:24 +0200] [69086] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 18:24:24 +0200] [69086] [TRACE] [services.auth_service] AuthService: Create session with user: ba5f1661-77ee-4b18-b09f-853ec3eefc7c
[2023-04-03 18:24:24 +0200] [69086] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 18:24:24 +0200] [69086] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('ba5f1661-77ee-4b18-b09f-853ec3eefc7c') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 16, 29, 24, 857822) refresh_expire_time=datetime.datetime(2023, 4, 5, 16, 24, 24, 858009) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MzkzNjQsInN1YiI6ImFkbWluQGFkbWluIn0.bU6KiI6AF_vl8PIe9jzHZPwEqZ_t1Nt5knbTchgJgY8' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTE4NjQsInN1YiI6ImFkbWluQGFkbWluIn0.YRdUORljIsd7OvcFqOihuy-1B9Z76OlzSwRF4THFIoU' blocked=False is_active=True
[2023-04-03 18:24:24 +0200] [69086] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('a2bdf52b-1236-40cb-8b65-996547423202'), 'user_id': UUID('ba5f1661-77ee-4b18-b09f-853ec3eefc7c'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1MzkzNjQsInN1YiI6ImFkbWluQGFkbWluIn0.bU6KiI6AF_vl8PIe9jzHZPwEqZ_t1Nt5knbTchgJgY8', 'access_expire_time': datetime.datetime(2023, 4, 3, 16, 29, 24, 857822), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTE4NjQsInN1YiI6ImFkbWluQGFkbWluIn0.YRdUORljIsd7OvcFqOihuy-1B9Z76OlzSwRF4THFIoU', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 16, 24, 24, 858009), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 16, 24, 24, 861892), 'updated_at': datetime.datetime(2023, 4, 3, 16, 24, 24, 861914)}
[2023-04-03 18:27:25 +0200] [69152] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 18:27:25 +0200] [69152] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$A1vr.6w2dI48TIhbe6a/r.y3LOguM4dJg9Wzy5Q5aa8mOYosuTshq' email='admin@admin' id=None
[2023-04-03 18:27:26 +0200] [69152] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('202ebcd1-b5c3-414d-96f3-814018e27f09'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$A1vr.6w2dI48TIhbe6a/r.y3LOguM4dJg9Wzy5Q5aa8mOYosuTshq', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 16, 27, 25, 327226), 'updated_at': datetime.datetime(2023, 4, 3, 16, 27, 25, 327234)}
[2023-04-03 18:27:28 +0200] [69152] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 18:27:28 +0200] [69152] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 18:27:28 +0200] [69152] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 18:27:28 +0200] [69152] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 18:27:28 +0200] [69152] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fc34ca0d4c0>
[2023-04-03 18:27:28 +0200] [69152] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 18:27:28 +0200] [69152] [TRACE] [services.auth_service] AuthService: Create session with user: 202ebcd1-b5c3-414d-96f3-814018e27f09
[2023-04-03 18:27:28 +0200] [69152] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 18:27:28 +0200] [69152] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('202ebcd1-b5c3-414d-96f3-814018e27f09') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 16, 32, 28, 914114) refresh_expire_time=datetime.datetime(2023, 4, 5, 16, 27, 28, 914252) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1Mzk1NDgsInN1YiI6ImFkbWluQGFkbWluIn0.PuuJQleK3VbFCbYWYWXhzUipjj-Exb58GlumWfAe53g' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTIwNDgsInN1YiI6ImFkbWluQGFkbWluIn0.IqwKZuc4blAwzCc8Rtl_E9TSrDBbzu6xTx6kmRPdA34' blocked=False is_active=True
[2023-04-03 18:27:28 +0200] [69152] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('5afbe57f-f28a-49ca-b1ab-0a7667d50c55'), 'user_id': UUID('202ebcd1-b5c3-414d-96f3-814018e27f09'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1Mzk1NDgsInN1YiI6ImFkbWluQGFkbWluIn0.PuuJQleK3VbFCbYWYWXhzUipjj-Exb58GlumWfAe53g', 'access_expire_time': datetime.datetime(2023, 4, 3, 16, 32, 28, 914114), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTIwNDgsInN1YiI6ImFkbWluQGFkbWluIn0.IqwKZuc4blAwzCc8Rtl_E9TSrDBbzu6xTx6kmRPdA34', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 16, 27, 28, 914252), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 16, 27, 28, 917096), 'updated_at': datetime.datetime(2023, 4, 3, 16, 27, 28, 917101)}
[2023-04-03 18:27:51 +0200] [69353] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 18:27:51 +0200] [69353] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$Oti.hCxVos9SDIIk1HsOzOalO4FrP0X739AMHqTak196HGsCLbe.m' email='admin@admin' id=None
[2023-04-03 18:27:52 +0200] [69353] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('c97306d3-93b9-4cba-9791-3ab326ddd286'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$Oti.hCxVos9SDIIk1HsOzOalO4FrP0X739AMHqTak196HGsCLbe.m', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 16, 27, 51, 288066), 'updated_at': datetime.datetime(2023, 4, 3, 16, 27, 51, 288071)}
[2023-04-03 18:30:52 +0200] [69353] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 18:30:52 +0200] [69353] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 18:30:52 +0200] [69353] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 18:30:52 +0200] [69353] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 18:30:52 +0200] [69353] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f68bb71d160>
[2023-04-03 18:30:52 +0200] [69353] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 18:30:52 +0200] [69353] [TRACE] [services.auth_service] AuthService: Create session with user: c97306d3-93b9-4cba-9791-3ab326ddd286
[2023-04-03 18:30:52 +0200] [69353] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 18:30:52 +0200] [69353] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('c97306d3-93b9-4cba-9791-3ab326ddd286') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 16, 35, 52, 671909) refresh_expire_time=datetime.datetime(2023, 4, 5, 16, 30, 52, 672067) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1Mzk3NTIsInN1YiI6ImFkbWluQGFkbWluIn0.FzQgdz0gTJGs4QcTZOGKsL4-rgLlvfKAiIJ1Hiln0Fs' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTIyNTIsInN1YiI6ImFkbWluQGFkbWluIn0.dNNKR7jmfD98WmFrvApuO4pUDFtSMsAJjsaKBGhtqdM' blocked=False is_active=True
[2023-04-03 18:30:52 +0200] [69353] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('a4db9aa4-a231-4527-868a-8e661017697e'), 'user_id': UUID('c97306d3-93b9-4cba-9791-3ab326ddd286'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1Mzk3NTIsInN1YiI6ImFkbWluQGFkbWluIn0.FzQgdz0gTJGs4QcTZOGKsL4-rgLlvfKAiIJ1Hiln0Fs', 'access_expire_time': datetime.datetime(2023, 4, 3, 16, 35, 52, 671909), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTIyNTIsInN1YiI6ImFkbWluQGFkbWluIn0.dNNKR7jmfD98WmFrvApuO4pUDFtSMsAJjsaKBGhtqdM', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 16, 30, 52, 672067), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 16, 30, 52, 674864), 'updated_at': datetime.datetime(2023, 4, 3, 16, 30, 52, 674872)}
[2023-04-03 18:32:30 +0200] [69678] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 18:32:30 +0200] [69678] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$ve.j2zRNrg1RFHXUmIHDYeXhohy1TOVkx3iTvL1JpDonZtIlKghD2' email='admin@admin' id=None
[2023-04-03 18:32:31 +0200] [69678] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('8248ff0f-6ba2-4d36-9c27-8ad2d985b1ec'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$ve.j2zRNrg1RFHXUmIHDYeXhohy1TOVkx3iTvL1JpDonZtIlKghD2', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 16, 32, 30, 475444), 'updated_at': datetime.datetime(2023, 4, 3, 16, 32, 30, 475450)}
[2023-04-03 18:32:33 +0200] [69678] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 18:32:33 +0200] [69678] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 18:32:33 +0200] [69678] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 18:32:33 +0200] [69678] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 18:32:33 +0200] [69678] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fc2fac18460>
[2023-04-03 18:32:33 +0200] [69678] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 18:32:33 +0200] [69678] [TRACE] [services.auth_service] AuthService: Create session with user: 8248ff0f-6ba2-4d36-9c27-8ad2d985b1ec
[2023-04-03 18:32:33 +0200] [69678] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 18:32:33 +0200] [69678] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('8248ff0f-6ba2-4d36-9c27-8ad2d985b1ec') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 16, 37, 33, 971464) refresh_expire_time=datetime.datetime(2023, 4, 5, 16, 32, 33, 971652) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1Mzk4NTMsInN1YiI6ImFkbWluQGFkbWluIn0.VsjgSoFSh27QG6vn9foyZbeL6t3P4r2zIit0Lxvm-Go' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTIzNTMsInN1YiI6ImFkbWluQGFkbWluIn0.t436ilPbR5pd5OJTYgdcFCsG_ochWLtBtAfcaMvvzto' blocked=False is_active=True
[2023-04-03 18:32:33 +0200] [69678] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('20b43a44-8b6d-40ee-bd91-42477a3d16fe'), 'user_id': UUID('8248ff0f-6ba2-4d36-9c27-8ad2d985b1ec'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1Mzk4NTMsInN1YiI6ImFkbWluQGFkbWluIn0.VsjgSoFSh27QG6vn9foyZbeL6t3P4r2zIit0Lxvm-Go', 'access_expire_time': datetime.datetime(2023, 4, 3, 16, 37, 33, 971464), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTIzNTMsInN1YiI6ImFkbWluQGFkbWluIn0.t436ilPbR5pd5OJTYgdcFCsG_ochWLtBtAfcaMvvzto', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 16, 32, 33, 971652), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 16, 32, 33, 975112), 'updated_at': datetime.datetime(2023, 4, 3, 16, 32, 33, 975123)}
[2023-04-03 18:34:11 +0200] [69794] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 18:34:11 +0200] [69794] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$2PdRBwmn4qPqlkUJdFrZiOKvain/KBcGqLriX1JlfweU6gTl4//QO' email='admin@admin' id=None
[2023-04-03 18:34:12 +0200] [69794] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('9f0e31e7-ff0b-4bf1-ba70-75ee39796e85'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$2PdRBwmn4qPqlkUJdFrZiOKvain/KBcGqLriX1JlfweU6gTl4//QO', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 16, 34, 11, 697158), 'updated_at': datetime.datetime(2023, 4, 3, 16, 34, 11, 697164)}
[2023-04-03 18:34:13 +0200] [69794] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 18:34:13 +0200] [69794] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 18:34:13 +0200] [69794] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 18:34:13 +0200] [69794] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 18:34:13 +0200] [69794] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f25a117a460>
[2023-04-03 18:34:13 +0200] [69794] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 18:34:13 +0200] [69794] [TRACE] [services.auth_service] AuthService: Create session with user: 9f0e31e7-ff0b-4bf1-ba70-75ee39796e85
[2023-04-03 18:34:13 +0200] [69794] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 18:34:13 +0200] [69794] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('9f0e31e7-ff0b-4bf1-ba70-75ee39796e85') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 16, 39, 13, 596309) refresh_expire_time=datetime.datetime(2023, 4, 5, 16, 34, 13, 596460) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1Mzk5NTMsInN1YiI6ImFkbWluQGFkbWluIn0.XW9W2r7XwLoLbqs__2otvSdzIy53vkJkUub18X5cZ7U' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTI0NTMsInN1YiI6ImFkbWluQGFkbWluIn0.o6fR4DpF4BsQlf8Gpbm97XzpOI6rDeG-I1lLPcFOohU' blocked=False is_active=True
[2023-04-03 18:34:13 +0200] [69794] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('fd08b091-8640-4473-b7e4-f7b4c2c22a20'), 'user_id': UUID('9f0e31e7-ff0b-4bf1-ba70-75ee39796e85'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1Mzk5NTMsInN1YiI6ImFkbWluQGFkbWluIn0.XW9W2r7XwLoLbqs__2otvSdzIy53vkJkUub18X5cZ7U', 'access_expire_time': datetime.datetime(2023, 4, 3, 16, 39, 13, 596309), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTI0NTMsInN1YiI6ImFkbWluQGFkbWluIn0.o6fR4DpF4BsQlf8Gpbm97XzpOI6rDeG-I1lLPcFOohU', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 16, 34, 13, 596460), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 16, 34, 13, 599277), 'updated_at': datetime.datetime(2023, 4, 3, 16, 34, 13, 599280)}
[2023-04-03 18:53:56 +0200] [70749] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 18:53:56 +0200] [70749] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$t.64aCcp5UGu8FTxcD9Xw.XO8.rkJIxY1//okfJC2AV8FmWNgD.cC' email='admin@admin' id=None
[2023-04-03 18:53:56 +0200] [70749] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('72529ef6-04a5-41c8-8771-29fd1908c70f'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$t.64aCcp5UGu8FTxcD9Xw.XO8.rkJIxY1//okfJC2AV8FmWNgD.cC', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 16, 53, 56, 103349), 'updated_at': datetime.datetime(2023, 4, 3, 16, 53, 56, 103355)}
[2023-04-03 18:53:58 +0200] [70749] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 18:53:58 +0200] [70749] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 18:53:58 +0200] [70749] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 18:53:58 +0200] [70749] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 18:53:58 +0200] [70749] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f836cb0da30>
[2023-04-03 18:53:58 +0200] [70749] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 18:53:58 +0200] [70749] [TRACE] [services.auth_service] AuthService: Create session with user: 72529ef6-04a5-41c8-8771-29fd1908c70f
[2023-04-03 18:53:58 +0200] [70749] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 18:53:58 +0200] [70749] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('72529ef6-04a5-41c8-8771-29fd1908c70f') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 16, 58, 58, 517475) refresh_expire_time=datetime.datetime(2023, 4, 5, 16, 53, 58, 517633) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDExMzgsInN1YiI6ImFkbWluQGFkbWluIn0.wYqTJ_Xjqo85Ltuz7O2U7XcXcdwA48VdiqjxbQ48Iyg' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTM2MzgsInN1YiI6ImFkbWluQGFkbWluIn0.uCyWILUiF4AqGoJPllZRQFAPMzqni3aQ9Fc_b2oqsPc' blocked=False is_active=True
[2023-04-03 18:53:58 +0200] [70749] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('5ad91762-328a-402f-a0a5-336d84ca3cba'), 'user_id': UUID('72529ef6-04a5-41c8-8771-29fd1908c70f'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDExMzgsInN1YiI6ImFkbWluQGFkbWluIn0.wYqTJ_Xjqo85Ltuz7O2U7XcXcdwA48VdiqjxbQ48Iyg', 'access_expire_time': datetime.datetime(2023, 4, 3, 16, 58, 58, 517475), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTM2MzgsInN1YiI6ImFkbWluQGFkbWluIn0.uCyWILUiF4AqGoJPllZRQFAPMzqni3aQ9Fc_b2oqsPc', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 16, 53, 58, 517633), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 16, 53, 58, 520244), 'updated_at': datetime.datetime(2023, 4, 3, 16, 53, 58, 520249)}
[2023-04-03 18:57:37 +0200] [71015] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 18:57:37 +0200] [71015] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$GnVRDBS4ugor9yvXDz0UQemjNUfJZ7Fkp.AiTREmXfyLwAAKLyOlS' email='admin@admin' id=None
[2023-04-03 18:57:38 +0200] [71015] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('0449f783-a0fb-491f-b9c1-4667c982ab24'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$GnVRDBS4ugor9yvXDz0UQemjNUfJZ7Fkp.AiTREmXfyLwAAKLyOlS', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 16, 57, 37, 959131), 'updated_at': datetime.datetime(2023, 4, 3, 16, 57, 37, 959136)}
[2023-04-03 18:57:40 +0200] [71015] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 18:57:40 +0200] [71015] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 18:57:40 +0200] [71015] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 18:57:40 +0200] [71015] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 18:57:40 +0200] [71015] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f4acde49a60>
[2023-04-03 18:57:40 +0200] [71015] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 18:57:40 +0200] [71015] [TRACE] [services.auth_service] AuthService: Create session with user: 0449f783-a0fb-491f-b9c1-4667c982ab24
[2023-04-03 18:57:40 +0200] [71015] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 18:57:40 +0200] [71015] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('0449f783-a0fb-491f-b9c1-4667c982ab24') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 17, 2, 40, 567131) refresh_expire_time=datetime.datetime(2023, 4, 5, 16, 57, 40, 567282) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDEzNjAsInN1YiI6ImFkbWluQGFkbWluIn0.6ow41Z_Kmzmy8YZ7t45LTGoj7fL-RZoL28tMnpvxlIc' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTM4NjAsInN1YiI6ImFkbWluQGFkbWluIn0.-YOojVIakf4xkkZrI0qz9X0FUAt4HtWVtBpZ10FcquU' blocked=False is_active=True
[2023-04-03 18:57:40 +0200] [71015] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('b3f4ac7c-920d-4a5e-ac3c-b1e87f49a4f7'), 'user_id': UUID('0449f783-a0fb-491f-b9c1-4667c982ab24'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDEzNjAsInN1YiI6ImFkbWluQGFkbWluIn0.6ow41Z_Kmzmy8YZ7t45LTGoj7fL-RZoL28tMnpvxlIc', 'access_expire_time': datetime.datetime(2023, 4, 3, 17, 2, 40, 567131), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTM4NjAsInN1YiI6ImFkbWluQGFkbWluIn0.-YOojVIakf4xkkZrI0qz9X0FUAt4HtWVtBpZ10FcquU', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 16, 57, 40, 567282), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 16, 57, 40, 569840), 'updated_at': datetime.datetime(2023, 4, 3, 16, 57, 40, 569847)}
[2023-04-03 18:58:27 +0200] [71082] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 18:58:27 +0200] [71082] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$ubWI1ZJ10oGMSM8Hv2r.Mu8D5/EOa/5gRb8S9w0cD1izJMQTKagmi' email='admin@admin' id=None
[2023-04-03 18:58:27 +0200] [71082] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('479abd1c-38ad-4fa8-a844-a38d57c8b1d4'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$ubWI1ZJ10oGMSM8Hv2r.Mu8D5/EOa/5gRb8S9w0cD1izJMQTKagmi', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 16, 58, 27, 551061), 'updated_at': datetime.datetime(2023, 4, 3, 16, 58, 27, 551066)}
[2023-04-03 18:58:29 +0200] [71082] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 18:58:29 +0200] [71082] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 18:58:29 +0200] [71082] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 18:58:29 +0200] [71082] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 18:58:29 +0200] [71082] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f76cf259a30>
[2023-04-03 18:58:30 +0200] [71082] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 18:58:30 +0200] [71082] [TRACE] [services.auth_service] AuthService: Create session with user: 479abd1c-38ad-4fa8-a844-a38d57c8b1d4
[2023-04-03 18:58:30 +0200] [71082] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 18:58:30 +0200] [71082] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('479abd1c-38ad-4fa8-a844-a38d57c8b1d4') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 17, 3, 30, 250461) refresh_expire_time=datetime.datetime(2023, 4, 5, 16, 58, 30, 250618) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDE0MTAsInN1YiI6ImFkbWluQGFkbWluIn0.39AjHy_YDh4jTxPP9Klk_QCnJS9jEy4BhLrIOfoxGY8' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTM5MTAsInN1YiI6ImFkbWluQGFkbWluIn0.7QQrBdosUR_38OME6rFFlTvlIi3XlBNn8Zy4EDM9Ngs' blocked=False is_active=True
[2023-04-03 18:58:30 +0200] [71082] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('b2bac184-2977-4fe0-a3e8-9bcd5fa6e130'), 'user_id': UUID('479abd1c-38ad-4fa8-a844-a38d57c8b1d4'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDE0MTAsInN1YiI6ImFkbWluQGFkbWluIn0.39AjHy_YDh4jTxPP9Klk_QCnJS9jEy4BhLrIOfoxGY8', 'access_expire_time': datetime.datetime(2023, 4, 3, 17, 3, 30, 250461), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTM5MTAsInN1YiI6ImFkbWluQGFkbWluIn0.7QQrBdosUR_38OME6rFFlTvlIi3XlBNn8Zy4EDM9Ngs', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 16, 58, 30, 250618), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 16, 58, 30, 253183), 'updated_at': datetime.datetime(2023, 4, 3, 16, 58, 30, 253187)}
[2023-04-03 19:00:02 +0200] [71158] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 19:00:02 +0200] [71158] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$tEDq3wgIZt6q0fbcMa5pEubkee.8X3.bErVpwJIWH8DX00cAla5fe' email='admin@admin' id=None
[2023-04-03 19:00:03 +0200] [71158] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('36dab47a-e854-422c-a14c-b2f6153a4c14'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$tEDq3wgIZt6q0fbcMa5pEubkee.8X3.bErVpwJIWH8DX00cAla5fe', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 0, 2, 947320), 'updated_at': datetime.datetime(2023, 4, 3, 17, 0, 2, 947326)}
[2023-04-03 19:00:05 +0200] [71158] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 19:00:05 +0200] [71158] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 19:00:05 +0200] [71158] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:00:05 +0200] [71158] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:00:05 +0200] [71158] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fc7cdb70a60>
[2023-04-03 19:00:05 +0200] [71158] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 19:00:05 +0200] [71158] [TRACE] [services.auth_service] AuthService: Create session with user: 36dab47a-e854-422c-a14c-b2f6153a4c14
[2023-04-03 19:00:05 +0200] [71158] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 19:00:05 +0200] [71158] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('36dab47a-e854-422c-a14c-b2f6153a4c14') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 17, 5, 5, 474517) refresh_expire_time=datetime.datetime(2023, 4, 5, 17, 0, 5, 474766) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDE1MDUsInN1YiI6ImFkbWluQGFkbWluIn0.FtEYNTB-e_KCS80Rco_nRLqYm5ssdnv-BCZY42P6kFA' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTQwMDUsInN1YiI6ImFkbWluQGFkbWluIn0.KOi_aiRu3vT8rSe4ddu76Rqb9clo0QaspA-jVBzlSp8' blocked=False is_active=True
[2023-04-03 19:00:05 +0200] [71158] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('2b3d36ed-1d85-49c1-8d96-968fc2d2b6b1'), 'user_id': UUID('36dab47a-e854-422c-a14c-b2f6153a4c14'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDE1MDUsInN1YiI6ImFkbWluQGFkbWluIn0.FtEYNTB-e_KCS80Rco_nRLqYm5ssdnv-BCZY42P6kFA', 'access_expire_time': datetime.datetime(2023, 4, 3, 17, 5, 5, 474517), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTQwMDUsInN1YiI6ImFkbWluQGFkbWluIn0.KOi_aiRu3vT8rSe4ddu76Rqb9clo0QaspA-jVBzlSp8', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 17, 0, 5, 474766), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 0, 5, 478017), 'updated_at': datetime.datetime(2023, 4, 3, 17, 0, 5, 478023)}
[2023-04-03 19:01:37 +0200] [71931] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 19:01:37 +0200] [71931] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$aCL4ZLo1mTsS4p/Co/LCBOjoMHmm8cxUPipNuWbN6.toZdvhOV5r2' email='admin@admin' id=None
[2023-04-03 19:01:37 +0200] [71931] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('f8e79a63-e185-4e5f-9ef0-b69ca9a77e11'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$aCL4ZLo1mTsS4p/Co/LCBOjoMHmm8cxUPipNuWbN6.toZdvhOV5r2', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 1, 37, 784101), 'updated_at': datetime.datetime(2023, 4, 3, 17, 1, 37, 784108)}
[2023-04-03 19:01:40 +0200] [71931] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 19:01:40 +0200] [71931] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 19:01:40 +0200] [71931] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:01:40 +0200] [71931] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:01:40 +0200] [71931] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f62ba46fa00>
[2023-04-03 19:01:40 +0200] [71931] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 19:01:40 +0200] [71931] [TRACE] [services.auth_service] AuthService: Create session with user: f8e79a63-e185-4e5f-9ef0-b69ca9a77e11
[2023-04-03 19:01:40 +0200] [71931] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 19:01:40 +0200] [71931] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('f8e79a63-e185-4e5f-9ef0-b69ca9a77e11') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 17, 6, 40, 363007) refresh_expire_time=datetime.datetime(2023, 4, 5, 17, 1, 40, 363157) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDE2MDAsInN1YiI6ImFkbWluQGFkbWluIn0.tpeNo6Y4qW-u2CaZaFbN1ZUXKKOwb3i8SdA6h4qqM9Q' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTQxMDAsInN1YiI6ImFkbWluQGFkbWluIn0.TCgnk9Q_sRFMsFDMH8y5Yj4RjQnH6iAwXft-a_0oWFE' blocked=False is_active=True
[2023-04-03 19:01:40 +0200] [71931] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('fc42b850-01c3-4998-830d-23711735d875'), 'user_id': UUID('f8e79a63-e185-4e5f-9ef0-b69ca9a77e11'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDE2MDAsInN1YiI6ImFkbWluQGFkbWluIn0.tpeNo6Y4qW-u2CaZaFbN1ZUXKKOwb3i8SdA6h4qqM9Q', 'access_expire_time': datetime.datetime(2023, 4, 3, 17, 6, 40, 363007), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTQxMDAsInN1YiI6ImFkbWluQGFkbWluIn0.TCgnk9Q_sRFMsFDMH8y5Yj4RjQnH6iAwXft-a_0oWFE', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 17, 1, 40, 363157), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 1, 40, 365629), 'updated_at': datetime.datetime(2023, 4, 3, 17, 1, 40, 365633)}
[2023-04-03 19:02:10 +0200] [71980] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 19:02:10 +0200] [71980] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$MUbyV0mO6vWkRdoI/MyuXODnNagkJseha2Pr.3c5Vn.aiii6LlLuO' email='admin@admin' id=None
[2023-04-03 19:02:10 +0200] [71980] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('5a1796ce-13e1-470a-8360-0eda27ac1e04'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$MUbyV0mO6vWkRdoI/MyuXODnNagkJseha2Pr.3c5Vn.aiii6LlLuO', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 2, 10, 98555), 'updated_at': datetime.datetime(2023, 4, 3, 17, 2, 10, 98561)}
[2023-04-03 19:02:12 +0200] [71980] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 19:02:12 +0200] [71980] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 19:02:12 +0200] [71980] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:02:12 +0200] [71980] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:02:12 +0200] [71980] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f9a44456a30>
[2023-04-03 19:02:12 +0200] [71980] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 19:02:12 +0200] [71980] [TRACE] [services.auth_service] AuthService: Create session with user: 5a1796ce-13e1-470a-8360-0eda27ac1e04
[2023-04-03 19:02:12 +0200] [71980] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 19:02:12 +0200] [71980] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('5a1796ce-13e1-470a-8360-0eda27ac1e04') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 17, 7, 12, 402937) refresh_expire_time=datetime.datetime(2023, 4, 5, 17, 2, 12, 403131) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDE2MzIsInN1YiI6ImFkbWluQGFkbWluIn0.tuXDQMgrye387WRqLdhdcOaw7Qyd7TwE2pBOrgtrnj8' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTQxMzIsInN1YiI6ImFkbWluQGFkbWluIn0.95eA68m03-Cc37KoAH16JvLc8wvM8-LhuNnUGrDsOjE' blocked=False is_active=True
[2023-04-03 19:02:12 +0200] [71980] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('3ef21e31-e70f-4185-90cd-e68e78b3c528'), 'user_id': UUID('5a1796ce-13e1-470a-8360-0eda27ac1e04'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDE2MzIsInN1YiI6ImFkbWluQGFkbWluIn0.tuXDQMgrye387WRqLdhdcOaw7Qyd7TwE2pBOrgtrnj8', 'access_expire_time': datetime.datetime(2023, 4, 3, 17, 7, 12, 402937), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTQxMzIsInN1YiI6ImFkbWluQGFkbWluIn0.95eA68m03-Cc37KoAH16JvLc8wvM8-LhuNnUGrDsOjE', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 17, 2, 12, 403131), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 2, 12, 406480), 'updated_at': datetime.datetime(2023, 4, 3, 17, 2, 12, 406486)}
[2023-04-03 19:03:37 +0200] [72088] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 19:03:37 +0200] [72088] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$tPl6hLqDKtpBFs/h14XCIuBt4X1dl6Tjvdowe51y5itdUSjCNDnc6' email='admin@admin' id=None
[2023-04-03 19:03:37 +0200] [72088] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('305380d4-7276-44f2-9da3-a9da1d812c09'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$tPl6hLqDKtpBFs/h14XCIuBt4X1dl6Tjvdowe51y5itdUSjCNDnc6', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 3, 37, 306829), 'updated_at': datetime.datetime(2023, 4, 3, 17, 3, 37, 306836)}
[2023-04-03 19:03:39 +0200] [72088] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 19:03:39 +0200] [72088] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 19:03:39 +0200] [72088] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:03:39 +0200] [72088] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:03:39 +0200] [72088] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f98ab52c7c0>
[2023-04-03 19:03:39 +0200] [72088] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 19:03:39 +0200] [72088] [TRACE] [services.auth_service] AuthService: Create session with user: 305380d4-7276-44f2-9da3-a9da1d812c09
[2023-04-03 19:03:39 +0200] [72088] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 19:03:39 +0200] [72088] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('305380d4-7276-44f2-9da3-a9da1d812c09') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 17, 8, 39, 727315) refresh_expire_time=datetime.datetime(2023, 4, 5, 17, 3, 39, 727458) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDE3MTksInN1YiI6ImFkbWluQGFkbWluIn0.QIR54FZsxfkZ5S9T5j2IMq0dLEJ9XwAaJnbE75Z8Tco' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTQyMTksInN1YiI6ImFkbWluQGFkbWluIn0.JKMkvyn0tH0hb1ZFrfZDRqGMPN4dqY38sWHUKOol_Dc' blocked=False is_active=True
[2023-04-03 19:03:39 +0200] [72088] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('af100902-525b-458b-a188-76cd62e77bd0'), 'user_id': UUID('305380d4-7276-44f2-9da3-a9da1d812c09'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDE3MTksInN1YiI6ImFkbWluQGFkbWluIn0.QIR54FZsxfkZ5S9T5j2IMq0dLEJ9XwAaJnbE75Z8Tco', 'access_expire_time': datetime.datetime(2023, 4, 3, 17, 8, 39, 727315), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTQyMTksInN1YiI6ImFkbWluQGFkbWluIn0.JKMkvyn0tH0hb1ZFrfZDRqGMPN4dqY38sWHUKOol_Dc', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 17, 3, 39, 727458), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 3, 39, 730088), 'updated_at': datetime.datetime(2023, 4, 3, 17, 3, 39, 730092)}
[2023-04-03 19:07:29 +0200] [72377] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 19:07:29 +0200] [72377] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$eNLj7Fr.yOaNB7/2MhRv3.4ij2DNkifmBAA3udSPXOB0f3G3FrcIO' email='admin@admin' id=None
[2023-04-03 19:07:29 +0200] [72377] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('768f6251-1fe1-4ccb-a034-b5c883fe4cd8'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$eNLj7Fr.yOaNB7/2MhRv3.4ij2DNkifmBAA3udSPXOB0f3G3FrcIO', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 7, 29, 235872), 'updated_at': datetime.datetime(2023, 4, 3, 17, 7, 29, 235879)}
[2023-04-03 19:07:32 +0200] [72377] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 19:07:32 +0200] [72377] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 19:07:32 +0200] [72377] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:07:32 +0200] [72377] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:07:32 +0200] [72377] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f784e393a60>
[2023-04-03 19:07:32 +0200] [72377] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 19:07:32 +0200] [72377] [TRACE] [services.auth_service] AuthService: Create session with user: 768f6251-1fe1-4ccb-a034-b5c883fe4cd8
[2023-04-03 19:07:32 +0200] [72377] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 19:07:32 +0200] [72377] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('768f6251-1fe1-4ccb-a034-b5c883fe4cd8') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 17, 12, 32, 518203) refresh_expire_time=datetime.datetime(2023, 4, 5, 17, 7, 32, 518401) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDE5NTIsInN1YiI6ImFkbWluQGFkbWluIn0.mAnsSWaG4nfeVaGEDAKfAQug6bUZUKApnvvn92uBpYk' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTQ0NTIsInN1YiI6ImFkbWluQGFkbWluIn0.u4MdfIHzXB4DmarzSA5_oAM7-qabK0sGO-9R6RVGrec' blocked=False is_active=True
[2023-04-03 19:07:32 +0200] [72377] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('07b46660-e092-46c2-82fb-a1d8f6ee9aca'), 'user_id': UUID('768f6251-1fe1-4ccb-a034-b5c883fe4cd8'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDE5NTIsInN1YiI6ImFkbWluQGFkbWluIn0.mAnsSWaG4nfeVaGEDAKfAQug6bUZUKApnvvn92uBpYk', 'access_expire_time': datetime.datetime(2023, 4, 3, 17, 12, 32, 518203), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTQ0NTIsInN1YiI6ImFkbWluQGFkbWluIn0.u4MdfIHzXB4DmarzSA5_oAM7-qabK0sGO-9R6RVGrec', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 17, 7, 32, 518401), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 7, 32, 525856), 'updated_at': datetime.datetime(2023, 4, 3, 17, 7, 32, 525862)}
[2023-04-03 19:08:28 +0200] [72440] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 19:08:28 +0200] [72440] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$RfCluyLp/SGr0unXG.w4GeIHDVFWOshmgfnMRNGEjLNVgLDLjz3ce' email='admin@admin' id=None
[2023-04-03 19:08:28 +0200] [72440] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('92110a4e-453b-449c-a0bd-5c634458b20f'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$RfCluyLp/SGr0unXG.w4GeIHDVFWOshmgfnMRNGEjLNVgLDLjz3ce', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 8, 28, 673502), 'updated_at': datetime.datetime(2023, 4, 3, 17, 8, 28, 673507)}
[2023-04-03 19:08:30 +0200] [72440] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 19:08:30 +0200] [72440] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 19:08:30 +0200] [72440] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:08:30 +0200] [72440] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:08:30 +0200] [72440] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f037da33a30>
[2023-04-03 19:08:31 +0200] [72440] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 19:08:31 +0200] [72440] [TRACE] [services.auth_service] AuthService: Create session with user: 92110a4e-453b-449c-a0bd-5c634458b20f
[2023-04-03 19:08:31 +0200] [72440] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 19:08:31 +0200] [72440] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('92110a4e-453b-449c-a0bd-5c634458b20f') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 17, 13, 31, 51655) refresh_expire_time=datetime.datetime(2023, 4, 5, 17, 8, 31, 51816) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDIwMTEsInN1YiI6ImFkbWluQGFkbWluIn0.4Y5qjgYoOg_qRhTL055DYPy5X4bQwLy1jaZYkyfZBMQ' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTQ1MTEsInN1YiI6ImFkbWluQGFkbWluIn0.pnzUD5nVPrCZNWEHYsf6w7OBxcsULmq7J9OATF-A8ls' blocked=False is_active=True
[2023-04-03 19:08:31 +0200] [72440] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('3ba4d3e7-3cec-4d3c-9248-1eead36d3d28'), 'user_id': UUID('92110a4e-453b-449c-a0bd-5c634458b20f'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDIwMTEsInN1YiI6ImFkbWluQGFkbWluIn0.4Y5qjgYoOg_qRhTL055DYPy5X4bQwLy1jaZYkyfZBMQ', 'access_expire_time': datetime.datetime(2023, 4, 3, 17, 13, 31, 51655), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTQ1MTEsInN1YiI6ImFkbWluQGFkbWluIn0.pnzUD5nVPrCZNWEHYsf6w7OBxcsULmq7J9OATF-A8ls', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 17, 8, 31, 51816), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 8, 31, 54595), 'updated_at': datetime.datetime(2023, 4, 3, 17, 8, 31, 54601)}
[2023-04-03 19:09:06 +0200] [72496] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 19:09:06 +0200] [72496] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$PS8inrAQxufVuQCtXL4P9uJwN.ZiVstBIv7CBG7BILmcj/eeg9rHy' email='admin@admin' id=None
[2023-04-03 19:09:06 +0200] [72496] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('fb92b64a-782e-46dd-b2ab-12cdab3dc8bf'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$PS8inrAQxufVuQCtXL4P9uJwN.ZiVstBIv7CBG7BILmcj/eeg9rHy', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 9, 6, 99130), 'updated_at': datetime.datetime(2023, 4, 3, 17, 9, 6, 99136)}
[2023-04-03 19:09:08 +0200] [72496] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 19:09:08 +0200] [72496] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 19:09:08 +0200] [72496] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:09:08 +0200] [72496] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:09:08 +0200] [72496] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fd4fe61fa30>
[2023-04-03 19:09:08 +0200] [72496] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 19:09:08 +0200] [72496] [TRACE] [services.auth_service] AuthService: Create session with user: fb92b64a-782e-46dd-b2ab-12cdab3dc8bf
[2023-04-03 19:09:08 +0200] [72496] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 19:09:08 +0200] [72496] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('fb92b64a-782e-46dd-b2ab-12cdab3dc8bf') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 17, 14, 8, 695977) refresh_expire_time=datetime.datetime(2023, 4, 5, 17, 9, 8, 696134) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDIwNDgsInN1YiI6ImFkbWluQGFkbWluIn0.Pl_XvlHJaJplrGnaASW2hUpcXwMwWIq_cIZWGAPBKVM' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTQ1NDgsInN1YiI6ImFkbWluQGFkbWluIn0.xY0MH05W-12pwEb6-o5pdaWD_CQ88BLMEiHXX18hbds' blocked=False is_active=True
[2023-04-03 19:09:08 +0200] [72496] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('dff66c7e-85c0-4dd7-8980-0111cd89ab23'), 'user_id': UUID('fb92b64a-782e-46dd-b2ab-12cdab3dc8bf'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDIwNDgsInN1YiI6ImFkbWluQGFkbWluIn0.Pl_XvlHJaJplrGnaASW2hUpcXwMwWIq_cIZWGAPBKVM', 'access_expire_time': datetime.datetime(2023, 4, 3, 17, 14, 8, 695977), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTQ1NDgsInN1YiI6ImFkbWluQGFkbWluIn0.xY0MH05W-12pwEb6-o5pdaWD_CQ88BLMEiHXX18hbds', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 17, 9, 8, 696134), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 9, 8, 698623), 'updated_at': datetime.datetime(2023, 4, 3, 17, 9, 8, 698627)}
[2023-04-03 19:09:11 +0200] [72496] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:09:11 +0200] [72496] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin@admin'}
[2023-04-03 19:09:11 +0200] [72496] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database None
[2023-04-03 19:09:48 +0200] [72538] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 19:09:48 +0200] [72538] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$Ra3DtALEgBN8uGM.lJO3M.4jWbf18rWoDnX2iKi49V6AhgB8o75BS' email='admin@admin' id=None
[2023-04-03 19:09:48 +0200] [72538] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('87ee26e3-a777-44a0-84f7-08c0a58a5a79'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$Ra3DtALEgBN8uGM.lJO3M.4jWbf18rWoDnX2iKi49V6AhgB8o75BS', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 9, 48, 846631), 'updated_at': datetime.datetime(2023, 4, 3, 17, 9, 48, 846637)}
[2023-04-03 19:09:51 +0200] [72538] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 19:09:51 +0200] [72538] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 19:09:51 +0200] [72538] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:09:51 +0200] [72538] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:09:51 +0200] [72538] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7ff930674a30>
[2023-04-03 19:09:51 +0200] [72538] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 19:09:51 +0200] [72538] [TRACE] [services.auth_service] AuthService: Create session with user: 87ee26e3-a777-44a0-84f7-08c0a58a5a79
[2023-04-03 19:09:51 +0200] [72538] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 19:09:51 +0200] [72538] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('87ee26e3-a777-44a0-84f7-08c0a58a5a79') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 17, 14, 51, 474526) refresh_expire_time=datetime.datetime(2023, 4, 5, 17, 9, 51, 474775) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDIwOTEsInN1YiI6ImFkbWluQGFkbWluIn0.o328txz8ywFi1RYgcxt3UiHl2xMQEDgcr2auRmbZOHs' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTQ1OTEsInN1YiI6ImFkbWluQGFkbWluIn0.GoCO4xqbmEzJzowOUZR3LwSo_xymjPPk1X6l-LDzmdo' blocked=False is_active=True
[2023-04-03 19:09:51 +0200] [72538] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('b1703c3a-21bb-4f11-85ba-eda627b9d666'), 'user_id': UUID('87ee26e3-a777-44a0-84f7-08c0a58a5a79'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDIwOTEsInN1YiI6ImFkbWluQGFkbWluIn0.o328txz8ywFi1RYgcxt3UiHl2xMQEDgcr2auRmbZOHs', 'access_expire_time': datetime.datetime(2023, 4, 3, 17, 14, 51, 474526), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTQ1OTEsInN1YiI6ImFkbWluQGFkbWluIn0.GoCO4xqbmEzJzowOUZR3LwSo_xymjPPk1X6l-LDzmdo', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 17, 9, 51, 474775), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 9, 51, 477924), 'updated_at': datetime.datetime(2023, 4, 3, 17, 9, 51, 477929)}
[2023-04-03 19:09:54 +0200] [72538] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:09:54 +0200] [72538] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin@admin'}
[2023-04-03 19:09:54 +0200] [72538] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database None
[2023-04-03 19:12:21 +0200] [72663] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 19:12:21 +0200] [72663] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$NPVP32dd07b.xtRdQ/rAUuiXicHidldgyBkcFxK57Fccao9x0iXky' email='admin@admin' id=None
[2023-04-03 19:12:22 +0200] [72663] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('95620419-7659-4071-ab9e-1315b109b2ed'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$NPVP32dd07b.xtRdQ/rAUuiXicHidldgyBkcFxK57Fccao9x0iXky', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 12, 21, 192361), 'updated_at': datetime.datetime(2023, 4, 3, 17, 12, 21, 192399)}
[2023-04-03 19:12:23 +0200] [72663] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 19:12:23 +0200] [72663] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 19:12:23 +0200] [72663] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:12:23 +0200] [72663] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:12:23 +0200] [72663] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fce431d8a30>
[2023-04-03 19:12:23 +0200] [72663] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 19:12:23 +0200] [72663] [TRACE] [services.auth_service] AuthService: Create session with user: 95620419-7659-4071-ab9e-1315b109b2ed
[2023-04-03 19:12:23 +0200] [72663] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 19:12:23 +0200] [72663] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('95620419-7659-4071-ab9e-1315b109b2ed') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 17, 17, 23, 904518) refresh_expire_time=datetime.datetime(2023, 4, 5, 17, 12, 23, 904699) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDIyNDMsInN1YiI6ImFkbWluIn0.Hg5g_oiG24j02R5BiVL6uJ9xKPbQqYK4rBubZt78zlQ' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTQ3NDMsInN1YiI6ImFkbWluIn0.De_xp19IMWbYuSKtBgM-XXHGnK9TQdUWaDkEChOJj0M' blocked=False is_active=True
[2023-04-03 19:12:23 +0200] [72663] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('031a66d9-e505-4e66-b3c1-1906a22b91cb'), 'user_id': UUID('95620419-7659-4071-ab9e-1315b109b2ed'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDIyNDMsInN1YiI6ImFkbWluIn0.Hg5g_oiG24j02R5BiVL6uJ9xKPbQqYK4rBubZt78zlQ', 'access_expire_time': datetime.datetime(2023, 4, 3, 17, 17, 23, 904518), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTQ3NDMsInN1YiI6ImFkbWluIn0.De_xp19IMWbYuSKtBgM-XXHGnK9TQdUWaDkEChOJj0M', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 17, 12, 23, 904699), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 12, 23, 907832), 'updated_at': datetime.datetime(2023, 4, 3, 17, 12, 23, 907839)}
[2023-04-03 19:12:25 +0200] [72663] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:12:25 +0200] [72663] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:12:25 +0200] [72663] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fce431e6730>
[2023-04-03 19:21:45 +0200] [73464] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 19:21:45 +0200] [73464] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$hfjUc8ij07It4ZmZYZNTt.s1TY61PkK6WjcnA//TLzKQ9rQuHvv5C' email='admin@admin' id=None
[2023-04-03 19:21:46 +0200] [73464] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('b4050837-302e-448b-a50a-e69ec9c8a8bf'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$hfjUc8ij07It4ZmZYZNTt.s1TY61PkK6WjcnA//TLzKQ9rQuHvv5C', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 21, 45, 193462), 'updated_at': datetime.datetime(2023, 4, 3, 17, 21, 45, 193467)}
[2023-04-03 19:21:49 +0200] [73464] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 19:21:49 +0200] [73464] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 19:21:49 +0200] [73464] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:21:49 +0200] [73464] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:21:49 +0200] [73464] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fd451a65a60>
[2023-04-03 19:21:50 +0200] [73464] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 19:21:50 +0200] [73464] [TRACE] [services.auth_service] AuthService: Create session with user: b4050837-302e-448b-a50a-e69ec9c8a8bf
[2023-04-03 19:21:50 +0200] [73464] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 19:21:50 +0200] [73464] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('b4050837-302e-448b-a50a-e69ec9c8a8bf') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 17, 26, 50, 240324) refresh_expire_time=datetime.datetime(2023, 4, 5, 17, 21, 50, 240494) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDI4MTAsInN1YiI6ImFkbWluIn0.P8SVH8PGHesMibAlsUuI8KsRHv_ZTRAdpUI_CtuaCmM' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTUzMTAsInN1YiI6ImFkbWluIn0.ac20iFv3gX1jLHEWftGiIRRQHWDbX3iI2eR16aDrrII' blocked=False is_active=True
[2023-04-03 19:21:50 +0200] [73464] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('62466d30-eced-4c52-8bb1-6e8733eab1bc'), 'user_id': UUID('b4050837-302e-448b-a50a-e69ec9c8a8bf'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDI4MTAsInN1YiI6ImFkbWluIn0.P8SVH8PGHesMibAlsUuI8KsRHv_ZTRAdpUI_CtuaCmM', 'access_expire_time': datetime.datetime(2023, 4, 3, 17, 26, 50, 240324), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTUzMTAsInN1YiI6ImFkbWluIn0.ac20iFv3gX1jLHEWftGiIRRQHWDbX3iI2eR16aDrrII', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 17, 21, 50, 240494), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 21, 50, 243190), 'updated_at': datetime.datetime(2023, 4, 3, 17, 21, 50, 243194)}
[2023-04-03 19:21:53 +0200] [73464] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:21:53 +0200] [73464] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:21:53 +0200] [73464] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fd451a7a760>
[2023-04-03 19:22:20 +0200] [73507] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 19:22:20 +0200] [73507] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$2jCP/IjCvvmD5AjPdjksUufnqrcg8BnWrJWMdcxi4modN7HM18jZO' email='admin@admin' id=None
[2023-04-03 19:22:21 +0200] [73507] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('dab9a004-59a8-49df-80ef-32100b407f9f'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$2jCP/IjCvvmD5AjPdjksUufnqrcg8BnWrJWMdcxi4modN7HM18jZO', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 22, 20, 47925), 'updated_at': datetime.datetime(2023, 4, 3, 17, 22, 20, 47930)}
[2023-04-03 19:22:23 +0200] [73507] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 19:22:23 +0200] [73507] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 19:22:23 +0200] [73507] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:22:23 +0200] [73507] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:22:23 +0200] [73507] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7feb503669d0>
[2023-04-03 19:22:23 +0200] [73507] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 19:22:23 +0200] [73507] [TRACE] [services.auth_service] AuthService: Create session with user: dab9a004-59a8-49df-80ef-32100b407f9f
[2023-04-03 19:22:23 +0200] [73507] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 19:22:23 +0200] [73507] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('dab9a004-59a8-49df-80ef-32100b407f9f') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 17, 27, 23, 598446) refresh_expire_time=datetime.datetime(2023, 4, 5, 17, 22, 23, 598608) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDI4NDMsInN1YiI6ImFkbWluIn0.Cn2Q9oWWll4o3ErcOCjIKikkhVxF0poFvbdao3hoLcI' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTUzNDMsInN1YiI6ImFkbWluIn0.2MpWhNbIdlxHBfyGdYk-4CWUgApqCyXwaU3h-eT2mS0' blocked=False is_active=True
[2023-04-03 19:22:23 +0200] [73507] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('56a4ff97-d707-496d-83d4-74733095f138'), 'user_id': UUID('dab9a004-59a8-49df-80ef-32100b407f9f'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDI4NDMsInN1YiI6ImFkbWluIn0.Cn2Q9oWWll4o3ErcOCjIKikkhVxF0poFvbdao3hoLcI', 'access_expire_time': datetime.datetime(2023, 4, 3, 17, 27, 23, 598446), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTUzNDMsInN1YiI6ImFkbWluIn0.2MpWhNbIdlxHBfyGdYk-4CWUgApqCyXwaU3h-eT2mS0', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 17, 22, 23, 598608), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 22, 23, 602081), 'updated_at': datetime.datetime(2023, 4, 3, 17, 22, 23, 602088)}
[2023-04-03 19:22:26 +0200] [73507] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:22:26 +0200] [73507] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:22:26 +0200] [73507] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7feb5037e6d0>
[2023-04-03 19:22:54 +0200] [73541] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 19:22:54 +0200] [73541] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$AeKgNqamMSUzwG15UaWtBOAFmLOWKtszFRJChDdV4CsfnxBozl2Wy' email='admin@admin' id=None
[2023-04-03 19:22:55 +0200] [73541] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('a320c260-7235-4d64-9ca5-f997d14450cd'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$AeKgNqamMSUzwG15UaWtBOAFmLOWKtszFRJChDdV4CsfnxBozl2Wy', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 22, 54, 266566), 'updated_at': datetime.datetime(2023, 4, 3, 17, 22, 54, 266572)}
[2023-04-03 19:22:55 +0200] [73541] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 19:22:55 +0200] [73541] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 19:22:55 +0200] [73541] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:22:55 +0200] [73541] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:22:55 +0200] [73541] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f319d36aa60>
[2023-04-03 19:22:56 +0200] [73541] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 19:22:56 +0200] [73541] [TRACE] [services.auth_service] AuthService: Create session with user: a320c260-7235-4d64-9ca5-f997d14450cd
[2023-04-03 19:22:56 +0200] [73541] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 19:22:56 +0200] [73541] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('a320c260-7235-4d64-9ca5-f997d14450cd') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 17, 27, 56, 242022) refresh_expire_time=datetime.datetime(2023, 4, 5, 17, 22, 56, 242168) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDI4NzYsInN1YiI6ImFkbWluIn0.ha148x7ORPMYAe67mSog5YyEmSubKYFzve40sG9NfHA' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTUzNzYsInN1YiI6ImFkbWluIn0.gFfBlpCeJYLbsCuIEPu7rUyGSsWif277tsj24mjsjMk' blocked=False is_active=True
[2023-04-03 19:22:56 +0200] [73541] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('d1553bfb-dab4-465b-97a0-7e97933491d7'), 'user_id': UUID('a320c260-7235-4d64-9ca5-f997d14450cd'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDI4NzYsInN1YiI6ImFkbWluIn0.ha148x7ORPMYAe67mSog5YyEmSubKYFzve40sG9NfHA', 'access_expire_time': datetime.datetime(2023, 4, 3, 17, 27, 56, 242022), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTUzNzYsInN1YiI6ImFkbWluIn0.gFfBlpCeJYLbsCuIEPu7rUyGSsWif277tsj24mjsjMk', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 17, 22, 56, 242168), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 22, 56, 244735), 'updated_at': datetime.datetime(2023, 4, 3, 17, 22, 56, 244743)}
[2023-04-03 19:22:58 +0200] [73541] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:22:58 +0200] [73541] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:22:58 +0200] [73541] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f319d380760>
[2023-04-03 19:22:58 +0200] [73541] [INFO] [services.student_service] StudentService: Create students
[2023-04-03 19:22:58 +0200] [73541] [TRACE] [services.student_service] StudentService: Register students with passed data __root__=[SingleStudent(first_name='student_2', second_name=None, last_name='student_2', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-03 19:22:58 +0200] [73541] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: ('__root__', [SingleStudent(first_name='student_2', second_name=None, last_name='student_2', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)])
[2023-04-03 19:24:06 +0200] [73604] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 19:24:06 +0200] [73604] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$3ouHG0.dQ2XLzXoFcJ/zv.GnESXggyZAR4YTYpefiOKeUXCMNie16' email='admin@admin' id=None
[2023-04-03 19:24:07 +0200] [73604] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('36242c9e-8129-4c0e-b048-9fc02d366b74'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$3ouHG0.dQ2XLzXoFcJ/zv.GnESXggyZAR4YTYpefiOKeUXCMNie16', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 24, 6, 534360), 'updated_at': datetime.datetime(2023, 4, 3, 17, 24, 6, 534365)}
[2023-04-03 19:24:10 +0200] [73604] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 19:24:10 +0200] [73604] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 19:24:10 +0200] [73604] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:24:10 +0200] [73604] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:24:10 +0200] [73604] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f8c7045fa00>
[2023-04-03 19:24:10 +0200] [73604] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 19:24:10 +0200] [73604] [TRACE] [services.auth_service] AuthService: Create session with user: 36242c9e-8129-4c0e-b048-9fc02d366b74
[2023-04-03 19:24:10 +0200] [73604] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 19:24:10 +0200] [73604] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('36242c9e-8129-4c0e-b048-9fc02d366b74') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 17, 29, 10, 752718) refresh_expire_time=datetime.datetime(2023, 4, 5, 17, 24, 10, 752871) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDI5NTAsInN1YiI6ImFkbWluIn0.FDQtNFwnoOwMbZSX7c3YrGy7J96eezkfvE_AsNjqy2U' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTU0NTAsInN1YiI6ImFkbWluIn0.p7itGQXihDPrBA7sSF_2BvSYXAdNIyv71SuXLJx4b4A' blocked=False is_active=True
[2023-04-03 19:24:10 +0200] [73604] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('50f8e7f2-08a7-42fe-9300-3fa556b5cf28'), 'user_id': UUID('36242c9e-8129-4c0e-b048-9fc02d366b74'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDI5NTAsInN1YiI6ImFkbWluIn0.FDQtNFwnoOwMbZSX7c3YrGy7J96eezkfvE_AsNjqy2U', 'access_expire_time': datetime.datetime(2023, 4, 3, 17, 29, 10, 752718), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTU0NTAsInN1YiI6ImFkbWluIn0.p7itGQXihDPrBA7sSF_2BvSYXAdNIyv71SuXLJx4b4A', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 17, 24, 10, 752871), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 24, 10, 755494), 'updated_at': datetime.datetime(2023, 4, 3, 17, 24, 10, 755498)}
[2023-04-03 19:24:12 +0200] [73604] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:24:12 +0200] [73604] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:24:12 +0200] [73604] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f8c7046e700>
[2023-04-03 19:24:12 +0200] [73604] [INFO] [services.student_service] StudentService: Create students
[2023-04-03 19:24:12 +0200] [73604] [TRACE] [services.student_service] StudentService: Register students with passed data __root__=[SingleStudent(first_name='student_2', second_name=None, last_name='student_2', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-03 19:24:12 +0200] [73604] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: ('__root__', [SingleStudent(first_name='student_2', second_name=None, last_name='student_2', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)])
[2023-04-03 19:27:17 +0200] [73786] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 19:27:17 +0200] [73786] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$MhhrABSPTmPNDRq.9ZzFn.b2LRk8P2xj3R5h6uNvQGSYBSnB3rIxC' email='admin@admin' id=None
[2023-04-03 19:27:18 +0200] [73786] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('a7f10d50-199f-4b63-a07d-d9dbf4e4ef94'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$MhhrABSPTmPNDRq.9ZzFn.b2LRk8P2xj3R5h6uNvQGSYBSnB3rIxC', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 27, 17, 361498), 'updated_at': datetime.datetime(2023, 4, 3, 17, 27, 17, 361504)}
[2023-04-03 19:27:20 +0200] [73786] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 19:27:20 +0200] [73786] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 19:27:20 +0200] [73786] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:27:20 +0200] [73786] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:27:20 +0200] [73786] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fc7f6911af0>
[2023-04-03 19:27:21 +0200] [73786] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 19:27:21 +0200] [73786] [TRACE] [services.auth_service] AuthService: Create session with user: a7f10d50-199f-4b63-a07d-d9dbf4e4ef94
[2023-04-03 19:27:21 +0200] [73786] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 19:27:21 +0200] [73786] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('a7f10d50-199f-4b63-a07d-d9dbf4e4ef94') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 17, 32, 21, 216344) refresh_expire_time=datetime.datetime(2023, 4, 5, 17, 27, 21, 216492) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDMxNDEsInN1YiI6ImFkbWluIn0.pkisURJ2v0DdSTelm6r7mwBbKmutxGjatMuHeP98p8k' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTU2NDEsInN1YiI6ImFkbWluIn0.XrwP2TEFB5ZhmGkDUMt2Js99zj0vF2RG0xdftoB6MS0' blocked=False is_active=True
[2023-04-03 19:27:21 +0200] [73786] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('7a78a8f7-4091-4a09-a2df-39427724f4ee'), 'user_id': UUID('a7f10d50-199f-4b63-a07d-d9dbf4e4ef94'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDMxNDEsInN1YiI6ImFkbWluIn0.pkisURJ2v0DdSTelm6r7mwBbKmutxGjatMuHeP98p8k', 'access_expire_time': datetime.datetime(2023, 4, 3, 17, 32, 21, 216344), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTU2NDEsInN1YiI6ImFkbWluIn0.XrwP2TEFB5ZhmGkDUMt2Js99zj0vF2RG0xdftoB6MS0', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 17, 27, 21, 216492), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 27, 21, 219261), 'updated_at': datetime.datetime(2023, 4, 3, 17, 27, 21, 219268)}
[2023-04-03 19:27:23 +0200] [73786] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:27:23 +0200] [73786] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:27:23 +0200] [73786] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fc7f692c7f0>
[2023-04-03 19:27:23 +0200] [73786] [INFO] [services.student_service] StudentService: Create students
[2023-04-03 19:27:23 +0200] [73786] [TRACE] [services.student_service] StudentService: Register students with passed data [{'first_name': 'student_2', 'last_name': 'student_2', 'birth_date': '28-02-2002', 'academic_year': '2', 'academic_group': '202'}]
[2023-04-03 19:27:23 +0200] [73786] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: {'first_name': 'student_2', 'last_name': 'student_2', 'birth_date': '28-02-2002', 'academic_year': '2', 'academic_group': '202'}
[2023-04-03 19:29:26 +0200] [73898] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 19:29:26 +0200] [73898] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$teXze1XtydMVYwrVLifCQulVma63Mho4nyxcuwozJWMvMDtlrgpkm' email='admin@admin' id=None
[2023-04-03 19:29:27 +0200] [73898] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('8c67ef21-0d0c-4d2d-a10c-00a1187af30f'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$teXze1XtydMVYwrVLifCQulVma63Mho4nyxcuwozJWMvMDtlrgpkm', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 29, 26, 647991), 'updated_at': datetime.datetime(2023, 4, 3, 17, 29, 26, 647996)}
[2023-04-03 19:29:29 +0200] [73898] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 19:29:29 +0200] [73898] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 19:29:29 +0200] [73898] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:29:29 +0200] [73898] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:29:29 +0200] [73898] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f24c83f1b20>
[2023-04-03 19:29:30 +0200] [73898] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 19:29:30 +0200] [73898] [TRACE] [services.auth_service] AuthService: Create session with user: 8c67ef21-0d0c-4d2d-a10c-00a1187af30f
[2023-04-03 19:29:30 +0200] [73898] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 19:29:30 +0200] [73898] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('8c67ef21-0d0c-4d2d-a10c-00a1187af30f') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 17, 34, 30, 244754) refresh_expire_time=datetime.datetime(2023, 4, 5, 17, 29, 30, 244915) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDMyNzAsInN1YiI6ImFkbWluIn0.ct9lxn-1_S6oXvJ7veUnDAUs159RYLGVGLkACyqLgBw' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTU3NzAsInN1YiI6ImFkbWluIn0.fS2FZ4KOcaGdNdIA_CVHyXK03ze0cWaZT43SCLxM8zg' blocked=False is_active=True
[2023-04-03 19:29:30 +0200] [73898] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('a4e957a2-4e3f-40c0-aac0-6dcaca15c6dd'), 'user_id': UUID('8c67ef21-0d0c-4d2d-a10c-00a1187af30f'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDMyNzAsInN1YiI6ImFkbWluIn0.ct9lxn-1_S6oXvJ7veUnDAUs159RYLGVGLkACyqLgBw', 'access_expire_time': datetime.datetime(2023, 4, 3, 17, 34, 30, 244754), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTU3NzAsInN1YiI6ImFkbWluIn0.fS2FZ4KOcaGdNdIA_CVHyXK03ze0cWaZT43SCLxM8zg', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 17, 29, 30, 244915), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 29, 30, 247765), 'updated_at': datetime.datetime(2023, 4, 3, 17, 29, 30, 247769)}
[2023-04-03 19:29:33 +0200] [73898] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:29:33 +0200] [73898] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:29:33 +0200] [73898] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f24c8404820>
[2023-04-03 19:29:33 +0200] [73898] [INFO] [services.student_service] StudentService: Create students
[2023-04-03 19:29:33 +0200] [73898] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_2', second_name=None, last_name='student_2', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-03 19:29:33 +0200] [73898] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_2' second_name=None last_name='student_2' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-03 19:29:33 +0200] [73898] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-03 19:29:33 +0200] [73898] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_2', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-03 19:29:34 +0200] [73898] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-03 19:29:34 +0200] [73898] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_2', second_name=None, last_name='student_2', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='WADqgoyy43ArZA')]
[2023-04-03 19:29:34 +0200] [73898] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-03 19:29:34 +0200] [73898] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_2', second_name=None, last_name='student_2', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='WADqgoyy43ArZA')]
[2023-04-03 19:29:34 +0200] [73898] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('81a16ae0-509d-41e0-b2ae-506d01de3d11'), 'registration_token': 'WADqgoyy43ArZA', 'registered_user': False, 'first_name': 'student_2', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 3, 17, 29, 34, 938483), 'updated_at': datetime.datetime(2023, 4, 3, 17, 29, 34, 938495), 'deleted_at': None}]
[2023-04-03 19:31:46 +0200] [74064] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 19:31:46 +0200] [74064] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$TFaTJC7nQNN5VtNDBCMh2e6SqbjwT43FvdLaEFkOoZVSM772BboBm' email='admin@admin' id=None
[2023-04-03 19:31:48 +0200] [74064] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('75db3381-162b-4015-be26-202cda22154c'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$TFaTJC7nQNN5VtNDBCMh2e6SqbjwT43FvdLaEFkOoZVSM772BboBm', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 31, 46, 919885), 'updated_at': datetime.datetime(2023, 4, 3, 17, 31, 46, 919891)}
[2023-04-03 19:31:50 +0200] [74064] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 19:31:50 +0200] [74064] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 19:31:50 +0200] [74064] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:31:50 +0200] [74064] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:31:50 +0200] [74064] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f7242b12550>
[2023-04-03 19:31:50 +0200] [74064] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 19:31:50 +0200] [74064] [TRACE] [services.auth_service] AuthService: Create session with user: 75db3381-162b-4015-be26-202cda22154c
[2023-04-03 19:31:50 +0200] [74064] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 19:31:50 +0200] [74064] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('75db3381-162b-4015-be26-202cda22154c') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 17, 36, 50, 943196) refresh_expire_time=datetime.datetime(2023, 4, 5, 17, 31, 50, 943348) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDM0MTAsInN1YiI6ImFkbWluIn0.7-eNHSIU5lUNWdV6znlvdXTaNewfF460aFcriiON5rc' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTU5MTAsInN1YiI6ImFkbWluIn0.THCv8omqhEKCF4cVpP_qeWNs7so-u9SQi8LBgcTgluk' blocked=False is_active=True
[2023-04-03 19:31:50 +0200] [74064] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('223fbaca-66e1-4db6-b393-ef69ef3ae749'), 'user_id': UUID('75db3381-162b-4015-be26-202cda22154c'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDM0MTAsInN1YiI6ImFkbWluIn0.7-eNHSIU5lUNWdV6znlvdXTaNewfF460aFcriiON5rc', 'access_expire_time': datetime.datetime(2023, 4, 3, 17, 36, 50, 943196), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTU5MTAsInN1YiI6ImFkbWluIn0.THCv8omqhEKCF4cVpP_qeWNs7so-u9SQi8LBgcTgluk', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 17, 31, 50, 943348), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 31, 50, 946475), 'updated_at': datetime.datetime(2023, 4, 3, 17, 31, 50, 946481)}
[2023-04-03 19:31:53 +0200] [74064] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:31:53 +0200] [74064] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:31:53 +0200] [74064] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f7242b21880>
[2023-04-03 19:31:53 +0200] [74064] [INFO] [services.student_service] StudentService: Create students
[2023-04-03 19:31:53 +0200] [74064] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_2', second_name=None, last_name='student_2', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-03 19:31:53 +0200] [74064] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_2' second_name=None last_name='student_2' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-03 19:31:53 +0200] [74064] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-03 19:31:53 +0200] [74064] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_2', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-03 19:31:54 +0200] [74064] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-03 19:31:54 +0200] [74064] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_2', second_name=None, last_name='student_2', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='Hy2VlAufIqhZOg')]
[2023-04-03 19:31:54 +0200] [74064] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-03 19:31:54 +0200] [74064] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_2', second_name=None, last_name='student_2', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='Hy2VlAufIqhZOg')]
[2023-04-03 19:31:54 +0200] [74064] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('570d5d0c-d850-43cb-8baf-796050fffe27'), 'registration_token': 'Hy2VlAufIqhZOg', 'registered_user': False, 'first_name': 'student_2', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 3, 17, 31, 54, 692599), 'updated_at': datetime.datetime(2023, 4, 3, 17, 31, 54, 692603), 'deleted_at': None}]
[2023-04-03 19:35:32 +0200] [74064] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:35:32 +0200] [74064] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:35:32 +0200] [74064] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f7242a4e6d0>
[2023-04-03 19:35:32 +0200] [74064] [INFO] [services.student_service] StudentService: Create students
[2023-04-03 19:35:32 +0200] [74064] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_2', second_name=None, last_name='student_2', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-03 19:35:32 +0200] [74064] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_2' second_name=None last_name='student_2' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-03 19:35:32 +0200] [74064] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-03 19:35:32 +0200] [74064] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_2', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-03 19:35:32 +0200] [74064] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database [{'id': UUID('570d5d0c-d850-43cb-8baf-796050fffe27'), 'registration_token': 'Hy2VlAufIqhZOg', 'registered_user': False, 'first_name': 'student_2', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 3, 17, 31, 54, 692599), 'updated_at': datetime.datetime(2023, 4, 3, 17, 31, 54, 692603), 'deleted_at': None}]
[2023-04-03 19:35:32 +0200] [74064] [INFO] [services.student_service] StudentService: Got existing student from db: [{'id': UUID('570d5d0c-d850-43cb-8baf-796050fffe27'), 'registration_token': 'Hy2VlAufIqhZOg', 'registered_user': False, 'first_name': 'student_2', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 3, 17, 31, 54, 692599), 'updated_at': datetime.datetime(2023, 4, 3, 17, 31, 54, 692603), 'deleted_at': None}]
[2023-04-03 19:35:32 +0200] [74064] [DEBUG] [services.student_service] StudentService: Students to be registered after check: []
[2023-04-03 19:35:32 +0200] [74064] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-03 19:35:32 +0200] [74064] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: []
[2023-04-03 19:35:32 +0200] [74064] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: []
[2023-04-03 19:35:43 +0200] [74064] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:35:43 +0200] [74064] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:35:43 +0200] [74064] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f7242a4ef40>
[2023-04-03 19:35:43 +0200] [74064] [INFO] [services.student_service] StudentService: Create students
[2023-04-03 19:35:43 +0200] [74064] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_3', second_name=None, last_name='student_3', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-03 19:35:43 +0200] [74064] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_3' second_name=None last_name='student_3' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-03 19:35:43 +0200] [74064] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-03 19:35:43 +0200] [74064] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_3', 'second_name': None, 'last_name': 'student_3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-03 19:35:43 +0200] [74064] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-03 19:35:43 +0200] [74064] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_3', second_name=None, last_name='student_3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='1UIW9BGVIDJ11w')]
[2023-04-03 19:35:43 +0200] [74064] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-03 19:35:43 +0200] [74064] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_3', second_name=None, last_name='student_3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='1UIW9BGVIDJ11w')]
[2023-04-03 19:35:43 +0200] [74064] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('59b08ac0-b4d1-4943-a67b-7a7dd03e5647'), 'registration_token': '1UIW9BGVIDJ11w', 'registered_user': False, 'first_name': 'student_3', 'second_name': None, 'last_name': 'student_3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 3, 17, 35, 43, 115680), 'updated_at': datetime.datetime(2023, 4, 3, 17, 35, 43, 115684), 'deleted_at': None}]
[2023-04-03 19:37:55 +0200] [74326] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 19:37:55 +0200] [74326] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$jikwlBIguifAKYgaGHVURO8GF6lFpHfCUc/hZ9lO/9dxOddBYNnmy' email='admin@admin' id=None
[2023-04-03 19:37:57 +0200] [74326] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('5b1658ba-649f-4900-bb4b-55a9bdd814ad'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$jikwlBIguifAKYgaGHVURO8GF6lFpHfCUc/hZ9lO/9dxOddBYNnmy', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 37, 55, 978852), 'updated_at': datetime.datetime(2023, 4, 3, 17, 37, 55, 978859)}
[2023-04-03 19:37:59 +0200] [74326] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 19:37:59 +0200] [74326] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 19:37:59 +0200] [74326] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:37:59 +0200] [74326] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:37:59 +0200] [74326] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7ff1246c6580>
[2023-04-03 19:38:00 +0200] [74326] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 19:38:00 +0200] [74326] [TRACE] [services.auth_service] AuthService: Create session with user: 5b1658ba-649f-4900-bb4b-55a9bdd814ad
[2023-04-03 19:38:00 +0200] [74326] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 19:38:00 +0200] [74326] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('5b1658ba-649f-4900-bb4b-55a9bdd814ad') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 17, 43, 0, 192001) refresh_expire_time=datetime.datetime(2023, 4, 5, 17, 38, 0, 192158) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDM3ODAsInN1YiI6ImFkbWluIn0.wHXXOx-YUGgliBuNBd3PfVcLG4ibeKTyuziQEg_0TVk' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTYyODAsInN1YiI6ImFkbWluIn0.wEovIOivTfKCYk5LABO3guugdsoC97fJFvv_T_UPbT4' blocked=False is_active=True
[2023-04-03 19:38:00 +0200] [74326] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('0e0c5972-4b98-48bb-aa32-85f3954159e8'), 'user_id': UUID('5b1658ba-649f-4900-bb4b-55a9bdd814ad'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDM3ODAsInN1YiI6ImFkbWluIn0.wHXXOx-YUGgliBuNBd3PfVcLG4ibeKTyuziQEg_0TVk', 'access_expire_time': datetime.datetime(2023, 4, 3, 17, 43, 0, 192001), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTYyODAsInN1YiI6ImFkbWluIn0.wEovIOivTfKCYk5LABO3guugdsoC97fJFvv_T_UPbT4', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 17, 38, 0, 192158), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 38, 0, 194905), 'updated_at': datetime.datetime(2023, 4, 3, 17, 38, 0, 194908)}
[2023-04-03 19:38:02 +0200] [74326] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:38:02 +0200] [74326] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:38:02 +0200] [74326] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7ff1246d48b0>
[2023-04-03 19:38:02 +0200] [74326] [INFO] [services.student_service] StudentService: Create students
[2023-04-03 19:38:02 +0200] [74326] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_3', second_name=None, last_name='student_3', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-03 19:38:02 +0200] [74326] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_3' second_name=None last_name='student_3' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-03 19:38:02 +0200] [74326] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-03 19:38:02 +0200] [74326] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_3', 'second_name': None, 'last_name': 'student_3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-03 19:38:04 +0200] [74326] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-03 19:38:04 +0200] [74326] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_3', second_name=None, last_name='student_3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='MtPznXW3EGRiTQ')]
[2023-04-03 19:38:04 +0200] [74326] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-03 19:38:04 +0200] [74326] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_3', second_name=None, last_name='student_3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='MtPznXW3EGRiTQ')]
[2023-04-03 19:38:04 +0200] [74326] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('a6553bf6-5ac1-42a5-a503-74862c8850c8'), 'registration_token': 'MtPznXW3EGRiTQ', 'registered_user': False, 'first_name': 'student_3', 'second_name': None, 'last_name': 'student_3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 3, 17, 38, 4, 385969), 'updated_at': datetime.datetime(2023, 4, 3, 17, 38, 4, 385973), 'deleted_at': None}]
[2023-04-03 19:38:04 +0200] [74326] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7ff124679520>]
[2023-04-03 19:39:29 +0200] [74414] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 19:39:29 +0200] [74414] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$O5bwGF4TOU98iQyXr46yN.nzfXReqdecok2leYrOoa6DdsfaQyCEe' email='admin@admin' id=None
[2023-04-03 19:39:31 +0200] [74414] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('34cec4b0-1ffe-423b-95a6-3d4db8ece72c'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$O5bwGF4TOU98iQyXr46yN.nzfXReqdecok2leYrOoa6DdsfaQyCEe', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 39, 29, 833189), 'updated_at': datetime.datetime(2023, 4, 3, 17, 39, 29, 833195)}
[2023-04-03 19:39:34 +0200] [74414] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 19:39:34 +0200] [74414] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 19:39:34 +0200] [74414] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:39:34 +0200] [74414] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:39:34 +0200] [74414] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f129e2925b0>
[2023-04-03 19:39:34 +0200] [74414] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 19:39:34 +0200] [74414] [TRACE] [services.auth_service] AuthService: Create session with user: 34cec4b0-1ffe-423b-95a6-3d4db8ece72c
[2023-04-03 19:39:34 +0200] [74414] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 19:39:34 +0200] [74414] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('34cec4b0-1ffe-423b-95a6-3d4db8ece72c') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 17, 44, 34, 588893) refresh_expire_time=datetime.datetime(2023, 4, 5, 17, 39, 34, 589047) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDM4NzQsInN1YiI6ImFkbWluIn0.lZhSFEQ5001raDm2n_fB-iElACuosyN0YI0sR7O5Agw' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTYzNzQsInN1YiI6ImFkbWluIn0.r30QVYxhd692DTMRKbT9reuGj4UrE2gyXokWIThVKvA' blocked=False is_active=True
[2023-04-03 19:39:34 +0200] [74414] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('0ac270cd-86e4-4756-861c-e8d081a72815'), 'user_id': UUID('34cec4b0-1ffe-423b-95a6-3d4db8ece72c'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDM4NzQsInN1YiI6ImFkbWluIn0.lZhSFEQ5001raDm2n_fB-iElACuosyN0YI0sR7O5Agw', 'access_expire_time': datetime.datetime(2023, 4, 3, 17, 44, 34, 588893), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTYzNzQsInN1YiI6ImFkbWluIn0.r30QVYxhd692DTMRKbT9reuGj4UrE2gyXokWIThVKvA', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 17, 39, 34, 589047), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 39, 34, 591784), 'updated_at': datetime.datetime(2023, 4, 3, 17, 39, 34, 591788)}
[2023-04-03 19:39:37 +0200] [74414] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:39:37 +0200] [74414] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:39:37 +0200] [74414] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f129e2a08e0>
[2023-04-03 19:39:37 +0200] [74414] [INFO] [services.student_service] StudentService: Create students
[2023-04-03 19:39:37 +0200] [74414] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_3', second_name=None, last_name='student_3', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-03 19:39:37 +0200] [74414] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_3' second_name=None last_name='student_3' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-03 19:39:37 +0200] [74414] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-03 19:39:37 +0200] [74414] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_3', 'second_name': None, 'last_name': 'student_3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-03 19:39:38 +0200] [74414] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-03 19:39:38 +0200] [74414] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_3', second_name=None, last_name='student_3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='6aH5T8jeBBmgWw')]
[2023-04-03 19:39:38 +0200] [74414] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-03 19:39:38 +0200] [74414] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_3', second_name=None, last_name='student_3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='6aH5T8jeBBmgWw')]
[2023-04-03 19:39:38 +0200] [74414] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('6040414c-523e-4b26-8e1e-b04e429115e0'), 'registration_token': '6aH5T8jeBBmgWw', 'registered_user': False, 'first_name': 'student_3', 'second_name': None, 'last_name': 'student_3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 3, 17, 39, 38, 348849), 'updated_at': datetime.datetime(2023, 4, 3, 17, 39, 38, 348853), 'deleted_at': None}]
[2023-04-03 19:39:38 +0200] [74414] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7f12a0dd7d90>]
[2023-04-03 19:39:45 +0200] [74414] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:39:45 +0200] [74414] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:39:45 +0200] [74414] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f129e1cc700>
[2023-04-03 19:39:45 +0200] [74414] [INFO] [services.student_service] StudentService: Create students
[2023-04-03 19:39:45 +0200] [74414] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_4', second_name=None, last_name='student_4', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-03 19:39:45 +0200] [74414] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_4' second_name=None last_name='student_4' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-03 19:39:45 +0200] [74414] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-03 19:39:45 +0200] [74414] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_4', 'second_name': None, 'last_name': 'student_4', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-03 19:39:45 +0200] [74414] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-03 19:39:45 +0200] [74414] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_4', second_name=None, last_name='student_4', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='IrSoVp9MGd7LMg')]
[2023-04-03 19:39:45 +0200] [74414] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-03 19:39:45 +0200] [74414] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_4', second_name=None, last_name='student_4', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='IrSoVp9MGd7LMg')]
[2023-04-03 19:39:45 +0200] [74414] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('f2c9bdfe-b356-4361-b16f-7d85186dd9f5'), 'registration_token': 'IrSoVp9MGd7LMg', 'registered_user': False, 'first_name': 'student_4', 'second_name': None, 'last_name': 'student_4', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 3, 17, 39, 45, 37443), 'updated_at': datetime.datetime(2023, 4, 3, 17, 39, 45, 37449), 'deleted_at': None}]
[2023-04-03 19:39:45 +0200] [74414] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7f129e2a0cd0>]
[2023-04-03 19:42:33 +0200] [74560] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 19:42:33 +0200] [74560] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$opd1U3.2XHUnZPJbmNog7unPjcgF/Q3Q6.aFeH62z8AFe2N3ycooy' email='admin@admin' id=None
[2023-04-03 19:42:34 +0200] [74560] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('4a204acc-1696-409d-b873-62042e265d60'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$opd1U3.2XHUnZPJbmNog7unPjcgF/Q3Q6.aFeH62z8AFe2N3ycooy', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 42, 33, 327469), 'updated_at': datetime.datetime(2023, 4, 3, 17, 42, 33, 327478)}
[2023-04-03 19:42:37 +0200] [74560] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 19:42:37 +0200] [74560] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 19:42:37 +0200] [74560] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:42:37 +0200] [74560] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:42:37 +0200] [74560] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fdd40183a30>
[2023-04-03 19:42:37 +0200] [74560] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 19:42:37 +0200] [74560] [TRACE] [services.auth_service] AuthService: Create session with user: 4a204acc-1696-409d-b873-62042e265d60
[2023-04-03 19:42:37 +0200] [74560] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 19:42:37 +0200] [74560] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('4a204acc-1696-409d-b873-62042e265d60') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 17, 47, 37, 768735) refresh_expire_time=datetime.datetime(2023, 4, 5, 17, 42, 37, 768889) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDQwNTcsInN1YiI6ImFkbWluIn0.Soe6dc-YFaj84W7C2Vbbp3fc8UFMDNvpVURQmPSSTzs' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTY1NTcsInN1YiI6ImFkbWluIn0.0x3uFt3Y26-HdVuYTikWBigtvB8Je1QLagNYrl3bD_A' blocked=False is_active=True
[2023-04-03 19:42:37 +0200] [74560] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('bc75286f-3c2c-4bbb-ae49-338ef7c27431'), 'user_id': UUID('4a204acc-1696-409d-b873-62042e265d60'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDQwNTcsInN1YiI6ImFkbWluIn0.Soe6dc-YFaj84W7C2Vbbp3fc8UFMDNvpVURQmPSSTzs', 'access_expire_time': datetime.datetime(2023, 4, 3, 17, 47, 37, 768735), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTY1NTcsInN1YiI6ImFkbWluIn0.0x3uFt3Y26-HdVuYTikWBigtvB8Je1QLagNYrl3bD_A', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 17, 42, 37, 768889), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 42, 37, 771736), 'updated_at': datetime.datetime(2023, 4, 3, 17, 42, 37, 771742)}
[2023-04-03 19:42:40 +0200] [74560] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:42:40 +0200] [74560] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:42:40 +0200] [74560] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fdd401a05b0>
[2023-04-03 19:42:40 +0200] [74560] [INFO] [services.student_service] StudentService: Create students
[2023-04-03 19:42:40 +0200] [74560] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_4', second_name=None, last_name='student_4', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-03 19:42:40 +0200] [74560] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_4' second_name=None last_name='student_4' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-03 19:42:40 +0200] [74560] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-03 19:42:40 +0200] [74560] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_4', 'second_name': None, 'last_name': 'student_4', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-03 19:42:41 +0200] [74560] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-03 19:42:41 +0200] [74560] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_4', second_name=None, last_name='student_4', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='fxmP9PElKVTJPg')]
[2023-04-03 19:42:41 +0200] [74560] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-03 19:42:41 +0200] [74560] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_4', second_name=None, last_name='student_4', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='fxmP9PElKVTJPg')]
[2023-04-03 19:42:41 +0200] [74560] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('83cd56dd-b567-4c74-ae0f-9532b9d4aac1'), 'registration_token': 'fxmP9PElKVTJPg', 'registered_user': False, 'first_name': 'student_4', 'second_name': None, 'last_name': 'student_4', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 3, 17, 42, 41, 952960), 'updated_at': datetime.datetime(2023, 4, 3, 17, 42, 41, 952965), 'deleted_at': None}]
[2023-04-03 19:42:41 +0200] [74560] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7fdd401d54f0>]
[2023-04-03 19:44:51 +0200] [74642] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 19:44:51 +0200] [74642] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$X0Qd7G/fQpQFkACb5L0h4.NQB.zv3Y1CcTusJF7Vz/U6ehzH.9uQS' email='admin@admin' id=None
[2023-04-03 19:44:52 +0200] [74642] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('bc4e8bf2-f850-4d5f-a17b-c1a97eeff669'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$X0Qd7G/fQpQFkACb5L0h4.NQB.zv3Y1CcTusJF7Vz/U6ehzH.9uQS', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 44, 51, 248484), 'updated_at': datetime.datetime(2023, 4, 3, 17, 44, 51, 248490)}
[2023-04-03 19:44:54 +0200] [74642] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 19:44:54 +0200] [74642] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 19:44:54 +0200] [74642] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:44:54 +0200] [74642] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:44:54 +0200] [74642] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f9c0f53da30>
[2023-04-03 19:44:54 +0200] [74642] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 19:44:54 +0200] [74642] [TRACE] [services.auth_service] AuthService: Create session with user: bc4e8bf2-f850-4d5f-a17b-c1a97eeff669
[2023-04-03 19:44:54 +0200] [74642] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 19:44:54 +0200] [74642] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('bc4e8bf2-f850-4d5f-a17b-c1a97eeff669') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 17, 49, 54, 796263) refresh_expire_time=datetime.datetime(2023, 4, 5, 17, 44, 54, 796416) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDQxOTQsInN1YiI6ImFkbWluIn0.K_D-dbNGqd5hsYd0NkDlfnIbi9wY8_sj1Fiom4vTTtM' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTY2OTQsInN1YiI6ImFkbWluIn0.Q0mawzOuY-TcWNrJ9CPJCQSYW7GIMEshWJXHg0h2KPk' blocked=False is_active=True
[2023-04-03 19:44:54 +0200] [74642] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('9517acd1-4091-44f9-89cc-27d9b5e1d34b'), 'user_id': UUID('bc4e8bf2-f850-4d5f-a17b-c1a97eeff669'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDQxOTQsInN1YiI6ImFkbWluIn0.K_D-dbNGqd5hsYd0NkDlfnIbi9wY8_sj1Fiom4vTTtM', 'access_expire_time': datetime.datetime(2023, 4, 3, 17, 49, 54, 796263), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTY2OTQsInN1YiI6ImFkbWluIn0.Q0mawzOuY-TcWNrJ9CPJCQSYW7GIMEshWJXHg0h2KPk', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 17, 44, 54, 796416), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 44, 54, 799053), 'updated_at': datetime.datetime(2023, 4, 3, 17, 44, 54, 799059)}
[2023-04-03 19:45:02 +0200] [74642] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:45:02 +0200] [74642] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:45:02 +0200] [74642] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f9c0f5595b0>
[2023-04-03 19:45:02 +0200] [74642] [INFO] [services.student_service] StudentService: Create students
[2023-04-03 19:45:02 +0200] [74642] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_4', second_name=None, last_name='student_4', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-03 19:45:02 +0200] [74642] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_4' second_name=None last_name='student_4' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-03 19:45:02 +0200] [74642] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-03 19:45:02 +0200] [74642] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_4', 'second_name': None, 'last_name': 'student_4', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-03 19:45:03 +0200] [74642] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-03 19:45:03 +0200] [74642] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_4', second_name=None, last_name='student_4', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='9iKACEWiClLhog')]
[2023-04-03 19:45:03 +0200] [74642] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-03 19:45:03 +0200] [74642] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_4', second_name=None, last_name='student_4', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='9iKACEWiClLhog')]
[2023-04-03 19:45:03 +0200] [74642] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('b5a326ec-44f6-4449-8ecd-bc4379e13904'), 'registration_token': '9iKACEWiClLhog', 'registered_user': False, 'first_name': 'student_4', 'second_name': None, 'last_name': 'student_4', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 3, 17, 45, 3, 985889), 'updated_at': datetime.datetime(2023, 4, 3, 17, 45, 3, 985893), 'deleted_at': None}]
[2023-04-03 19:45:03 +0200] [74642] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7f9c0f58e4f0>]
[2023-04-03 19:47:24 +0200] [74769] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 19:47:24 +0200] [74769] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$lrpCJk4YkcunPsMu8yLlm.PHUMvsep24oCUxROYS0OLg5jgYRw5KG' email='admin@admin' id=None
[2023-04-03 19:47:25 +0200] [74769] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('c9f4ca05-fa81-49e7-8f31-84b510c33806'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$lrpCJk4YkcunPsMu8yLlm.PHUMvsep24oCUxROYS0OLg5jgYRw5KG', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 47, 24, 149074), 'updated_at': datetime.datetime(2023, 4, 3, 17, 47, 24, 149080)}
[2023-04-03 19:47:32 +0200] [74769] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 19:47:32 +0200] [74769] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 19:47:32 +0200] [74769] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:47:32 +0200] [74769] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:47:32 +0200] [74769] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fd77e0ffa00>
[2023-04-03 19:47:32 +0200] [74769] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 19:47:32 +0200] [74769] [TRACE] [services.auth_service] AuthService: Create session with user: c9f4ca05-fa81-49e7-8f31-84b510c33806
[2023-04-03 19:47:32 +0200] [74769] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 19:47:32 +0200] [74769] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('c9f4ca05-fa81-49e7-8f31-84b510c33806') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 17, 52, 32, 462066) refresh_expire_time=datetime.datetime(2023, 4, 5, 17, 47, 32, 462306) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDQzNTIsInN1YiI6ImFkbWluIn0.Nw50ZEfQ7unODyMV5PfNjlEj6bhr_WsrkAndUeCNzBE' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTY4NTIsInN1YiI6ImFkbWluIn0.18lQ0ASVXXUL3dIUK3VN9riEqbPiGWjLPJKreSQ0uQA' blocked=False is_active=True
[2023-04-03 19:47:32 +0200] [74769] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('3a5271f6-e460-48e1-a698-9248cc52f96b'), 'user_id': UUID('c9f4ca05-fa81-49e7-8f31-84b510c33806'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDQzNTIsInN1YiI6ImFkbWluIn0.Nw50ZEfQ7unODyMV5PfNjlEj6bhr_WsrkAndUeCNzBE', 'access_expire_time': datetime.datetime(2023, 4, 3, 17, 52, 32, 462066), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTY4NTIsInN1YiI6ImFkbWluIn0.18lQ0ASVXXUL3dIUK3VN9riEqbPiGWjLPJKreSQ0uQA', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 17, 47, 32, 462306), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 17, 47, 32, 465233), 'updated_at': datetime.datetime(2023, 4, 3, 17, 47, 32, 465238)}
[2023-04-03 19:47:35 +0200] [74769] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:47:35 +0200] [74769] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:47:35 +0200] [74769] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fd77e119580>
[2023-04-03 19:47:35 +0200] [74769] [INFO] [services.student_service] StudentService: Create students
[2023-04-03 19:47:35 +0200] [74769] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_4', second_name=None, last_name='student_4', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-03 19:47:35 +0200] [74769] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_4' second_name=None last_name='student_4' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-03 19:47:35 +0200] [74769] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-03 19:47:35 +0200] [74769] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_4', 'second_name': None, 'last_name': 'student_4', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-03 19:47:36 +0200] [74769] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-03 19:47:36 +0200] [74769] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_4', second_name=None, last_name='student_4', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='Xmn48C9G5n4w1Q')]
[2023-04-03 19:47:36 +0200] [74769] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-03 19:47:36 +0200] [74769] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_4', second_name=None, last_name='student_4', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='Xmn48C9G5n4w1Q')]
[2023-04-03 19:47:36 +0200] [74769] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('2af686fb-b6d5-4739-b287-9d5fc565ce4b'), 'registration_token': 'Xmn48C9G5n4w1Q', 'registered_user': False, 'first_name': 'student_4', 'second_name': None, 'last_name': 'student_4', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 3, 17, 47, 36, 367215), 'updated_at': datetime.datetime(2023, 4, 3, 17, 47, 36, 367220), 'deleted_at': None}]
[2023-04-03 19:47:36 +0200] [74769] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7fd780adf520>]
[2023-04-03 19:48:17 +0200] [74769] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:48:17 +0200] [74769] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:48:17 +0200] [74769] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fd77e0dcbb0>
[2023-04-03 19:48:17 +0200] [74769] [INFO] [services.student_service] StudentService: Create students
[2023-04-03 19:48:17 +0200] [74769] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_6', second_name=None, last_name='student_6', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-03 19:48:17 +0200] [74769] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_6' second_name=None last_name='student_6' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-03 19:48:17 +0200] [74769] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-03 19:48:17 +0200] [74769] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_6', 'second_name': None, 'last_name': 'student_6', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-03 19:48:17 +0200] [74769] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-03 19:48:17 +0200] [74769] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_6', second_name=None, last_name='student_6', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='GWxQLCrJ4s_laA')]
[2023-04-03 19:48:17 +0200] [74769] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-03 19:48:17 +0200] [74769] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_6', second_name=None, last_name='student_6', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='GWxQLCrJ4s_laA')]
[2023-04-03 19:48:17 +0200] [74769] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('62d545f4-d1cd-4271-b7dd-643a10176e2d'), 'registration_token': 'GWxQLCrJ4s_laA', 'registered_user': False, 'first_name': 'student_6', 'second_name': None, 'last_name': 'student_6', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 3, 17, 48, 17, 914960), 'updated_at': datetime.datetime(2023, 4, 3, 17, 48, 17, 914964), 'deleted_at': None}]
[2023-04-03 19:48:17 +0200] [74769] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7fd77e0c2b80>]
[2023-04-03 19:48:20 +0200] [74769] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 19:48:20 +0200] [74769] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 19:48:20 +0200] [74769] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fd77e0dcd30>
[2023-04-03 19:48:20 +0200] [74769] [INFO] [services.student_service] StudentService: Create students
[2023-04-03 19:48:20 +0200] [74769] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_6', second_name=None, last_name='student_6', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-03 19:48:20 +0200] [74769] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_6' second_name=None last_name='student_6' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-03 19:48:20 +0200] [74769] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-03 19:48:20 +0200] [74769] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_6', 'second_name': None, 'last_name': 'student_6', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-03 19:48:20 +0200] [74769] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database [{'id': UUID('62d545f4-d1cd-4271-b7dd-643a10176e2d'), 'registration_token': 'GWxQLCrJ4s_laA', 'registered_user': False, 'first_name': 'student_6', 'second_name': None, 'last_name': 'student_6', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 3, 17, 48, 17, 914960), 'updated_at': datetime.datetime(2023, 4, 3, 17, 48, 17, 914964), 'deleted_at': None}]
[2023-04-03 19:48:20 +0200] [74769] [INFO] [services.student_service] StudentService: Got existing student from db: [{'id': UUID('62d545f4-d1cd-4271-b7dd-643a10176e2d'), 'registration_token': 'GWxQLCrJ4s_laA', 'registered_user': False, 'first_name': 'student_6', 'second_name': None, 'last_name': 'student_6', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 3, 17, 48, 17, 914960), 'updated_at': datetime.datetime(2023, 4, 3, 17, 48, 17, 914964), 'deleted_at': None}]
[2023-04-03 19:48:20 +0200] [74769] [DEBUG] [services.student_service] StudentService: Students to be registered after check: []
[2023-04-03 19:48:20 +0200] [74769] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-03 19:48:20 +0200] [74769] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: []
[2023-04-03 19:48:20 +0200] [74769] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: []
[2023-04-03 19:48:20 +0200] [74769] [DEBUG] [services.student_service] StudentService: Received the answer from database: []
[2023-04-03 20:21:03 +0200] [76404] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 20:21:03 +0200] [76404] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$DnXT9gsuJ/rJ/zgV5cBjiOBJgQRzb7FyMSb.r6devgWoLKR4zvps6' email='admin@admin' id=None
[2023-04-03 20:21:03 +0200] [76404] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('b6c80811-54b9-45ed-9868-744334d01f0b'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$DnXT9gsuJ/rJ/zgV5cBjiOBJgQRzb7FyMSb.r6devgWoLKR4zvps6', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 18, 21, 3, 187441), 'updated_at': datetime.datetime(2023, 4, 3, 18, 21, 3, 187447)}
[2023-04-03 20:21:06 +0200] [76404] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 20:21:06 +0200] [76404] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 20:21:06 +0200] [76404] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 20:21:06 +0200] [76404] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 20:21:06 +0200] [76404] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7efd281a3a90>
[2023-04-03 20:21:06 +0200] [76404] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 20:21:06 +0200] [76404] [TRACE] [services.auth_service] AuthService: Create session with user: b6c80811-54b9-45ed-9868-744334d01f0b
[2023-04-03 20:21:06 +0200] [76404] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 20:21:06 +0200] [76404] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('b6c80811-54b9-45ed-9868-744334d01f0b') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 18, 26, 6, 679446) refresh_expire_time=datetime.datetime(2023, 4, 5, 18, 21, 6, 679611) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDYzNjYsInN1YiI6ImFkbWluIn0.6kSylXCJIv-czx1tNAqv9q_IJczUQHl-sPw2hsGgEoY' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTg4NjYsInN1YiI6ImFkbWluIn0.bUsqnKzRTNRuRV_5KHNUH235y6cjrz8MJrRRxzZNLZI' blocked=False is_active=True
[2023-04-03 20:21:06 +0200] [76404] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('e25e6253-f561-4fa4-a035-55d1ffca54b1'), 'user_id': UUID('b6c80811-54b9-45ed-9868-744334d01f0b'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDYzNjYsInN1YiI6ImFkbWluIn0.6kSylXCJIv-czx1tNAqv9q_IJczUQHl-sPw2hsGgEoY', 'access_expire_time': datetime.datetime(2023, 4, 3, 18, 26, 6, 679446), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTg4NjYsInN1YiI6ImFkbWluIn0.bUsqnKzRTNRuRV_5KHNUH235y6cjrz8MJrRRxzZNLZI', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 18, 21, 6, 679611), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 18, 21, 6, 682118), 'updated_at': datetime.datetime(2023, 4, 3, 18, 21, 6, 682121)}
[2023-04-03 20:22:24 +0200] [76469] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 20:22:24 +0200] [76469] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$a7.Qh2r/ULVV9QvtkquSIuDLJGBXdoSTM1oo4imcHzgoS0.X60/nG' email='admin@admin' id=None
[2023-04-03 20:22:24 +0200] [76469] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('92246ed2-396d-435a-b587-debceac50875'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$a7.Qh2r/ULVV9QvtkquSIuDLJGBXdoSTM1oo4imcHzgoS0.X60/nG', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 18, 22, 24, 551642), 'updated_at': datetime.datetime(2023, 4, 3, 18, 22, 24, 551646)}
[2023-04-03 20:22:27 +0200] [76469] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 20:22:27 +0200] [76469] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 20:22:27 +0200] [76469] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 20:22:27 +0200] [76469] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 20:22:27 +0200] [76469] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f1d8ed55a60>
[2023-04-03 20:22:27 +0200] [76469] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 20:22:27 +0200] [76469] [TRACE] [services.auth_service] AuthService: Create session with user: 92246ed2-396d-435a-b587-debceac50875
[2023-04-03 20:22:27 +0200] [76469] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 20:22:27 +0200] [76469] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('92246ed2-396d-435a-b587-debceac50875') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 18, 27, 27, 412853) refresh_expire_time=datetime.datetime(2023, 4, 5, 18, 22, 27, 413014) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDY0NDcsInN1YiI6ImFkbWluIn0.qnViJqAb8zcV2l6WGf75c1yhHknRWuWC99NdXAP7xns' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTg5NDcsInN1YiI6ImFkbWluIn0.vuMjc1S-BmxuDb9yJ6xKeOrgrY-2nxPOHQPgbooxsP4' blocked=False is_active=True
[2023-04-03 20:22:27 +0200] [76469] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('2b94c20e-a89a-4c03-a2c5-401d47d5932d'), 'user_id': UUID('92246ed2-396d-435a-b587-debceac50875'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDY0NDcsInN1YiI6ImFkbWluIn0.qnViJqAb8zcV2l6WGf75c1yhHknRWuWC99NdXAP7xns', 'access_expire_time': datetime.datetime(2023, 4, 3, 18, 27, 27, 412853), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTg5NDcsInN1YiI6ImFkbWluIn0.vuMjc1S-BmxuDb9yJ6xKeOrgrY-2nxPOHQPgbooxsP4', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 18, 22, 27, 413014), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 18, 22, 27, 415618), 'updated_at': datetime.datetime(2023, 4, 3, 18, 22, 27, 415623)}
[2023-04-03 20:26:30 +0200] [76627] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 20:26:30 +0200] [76627] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$KXQzG/Ki0wJPzEGwGjCAheniRsfg/mRnXqiLeCQR7yuFpJ2zkIRJa' email='admin@admin' id=None
[2023-04-03 20:26:30 +0200] [76627] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('0f4116b1-c81a-4795-9763-c18b8b91d7d0'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$KXQzG/Ki0wJPzEGwGjCAheniRsfg/mRnXqiLeCQR7yuFpJ2zkIRJa', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 18, 26, 30, 467329), 'updated_at': datetime.datetime(2023, 4, 3, 18, 26, 30, 467334)}
[2023-04-03 20:26:33 +0200] [76627] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 20:26:33 +0200] [76627] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 20:26:33 +0200] [76627] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 20:26:33 +0200] [76627] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 20:26:33 +0200] [76627] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f9d67f53b80>
[2023-04-03 20:26:33 +0200] [76627] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 20:26:33 +0200] [76627] [TRACE] [services.auth_service] AuthService: Create session with user: 0f4116b1-c81a-4795-9763-c18b8b91d7d0
[2023-04-03 20:26:33 +0200] [76627] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 20:26:33 +0200] [76627] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('0f4116b1-c81a-4795-9763-c18b8b91d7d0') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 18, 31, 33, 634594) refresh_expire_time=datetime.datetime(2023, 4, 5, 18, 26, 33, 634758) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDY2OTMsInN1YiI6ImFkbWluIn0.dtkkTgdTs3wCRbLS9B3-5Q0x8VfCS-ArtAssjY0eoQ0' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTkxOTMsInN1YiI6ImFkbWluIn0.ydgNOFbD0qTWiBBe5LtYbq6GJKx-Y1Dvzyq6diHGnzE' blocked=False is_active=True
[2023-04-03 20:26:33 +0200] [76627] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('b5bae089-eb28-4508-ac41-fc49a939e443'), 'user_id': UUID('0f4116b1-c81a-4795-9763-c18b8b91d7d0'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDY2OTMsInN1YiI6ImFkbWluIn0.dtkkTgdTs3wCRbLS9B3-5Q0x8VfCS-ArtAssjY0eoQ0', 'access_expire_time': datetime.datetime(2023, 4, 3, 18, 31, 33, 634594), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTkxOTMsInN1YiI6ImFkbWluIn0.ydgNOFbD0qTWiBBe5LtYbq6GJKx-Y1Dvzyq6diHGnzE', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 18, 26, 33, 634758), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 18, 26, 33, 637359), 'updated_at': datetime.datetime(2023, 4, 3, 18, 26, 33, 637363)}
[2023-04-03 20:30:21 +0200] [76765] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 20:30:21 +0200] [76765] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$lyKklP7eerdD2Ar79s17pOdEkrOjMpErbg4Ae0a0zk4ivkuKneueC' email='admin@admin' id=None
[2023-04-03 20:30:21 +0200] [76765] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('80397d19-c505-4c71-b776-ca36275a6743'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$lyKklP7eerdD2Ar79s17pOdEkrOjMpErbg4Ae0a0zk4ivkuKneueC', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 18, 30, 21, 353078), 'updated_at': datetime.datetime(2023, 4, 3, 18, 30, 21, 353084)}
[2023-04-03 20:30:27 +0200] [76765] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 20:30:27 +0200] [76765] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 20:30:27 +0200] [76765] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 20:30:27 +0200] [76765] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 20:30:27 +0200] [76765] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f4fac0789a0>
[2023-04-03 20:30:27 +0200] [76765] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 20:30:27 +0200] [76765] [TRACE] [services.auth_service] AuthService: Create session with user: 80397d19-c505-4c71-b776-ca36275a6743
[2023-04-03 20:30:27 +0200] [76765] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 20:30:27 +0200] [76765] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('80397d19-c505-4c71-b776-ca36275a6743') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 18, 35, 27, 480698) refresh_expire_time=datetime.datetime(2023, 4, 5, 18, 30, 27, 480854) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDY5MjcsInN1YiI6ImFkbWluIn0.znYDvN4Qdq9rqU_t1F_vD60NUkwsu12v587IQ4ySWbE' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTk0MjcsInN1YiI6ImFkbWluIn0.UC1uKyJD_tn9baFJxwJ_8SttoQoVNze8s-6bSTlUTV8' blocked=False is_active=True
[2023-04-03 20:30:27 +0200] [76765] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('30a3de94-c5cf-4547-b2c7-7c11458e6811'), 'user_id': UUID('80397d19-c505-4c71-b776-ca36275a6743'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDY5MjcsInN1YiI6ImFkbWluIn0.znYDvN4Qdq9rqU_t1F_vD60NUkwsu12v587IQ4ySWbE', 'access_expire_time': datetime.datetime(2023, 4, 3, 18, 35, 27, 480698), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTk0MjcsInN1YiI6ImFkbWluIn0.UC1uKyJD_tn9baFJxwJ_8SttoQoVNze8s-6bSTlUTV8', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 18, 30, 27, 480854), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 18, 30, 27, 483390), 'updated_at': datetime.datetime(2023, 4, 3, 18, 30, 27, 483394)}
[2023-04-03 20:30:30 +0200] [76765] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 20:30:30 +0200] [76765] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 20:30:30 +0200] [76765] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f4fac088d00>
[2023-04-03 20:32:27 +0200] [76922] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 20:32:27 +0200] [76922] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$h.EfnMd29t7RMn/jpmVkD.Pfw2WunXEDlEo3F8.lpzE0QJGAyUPBO' email='admin@admin' id=None
[2023-04-03 20:32:27 +0200] [76922] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('0b5144e8-f794-4525-b577-01fcff471438'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$h.EfnMd29t7RMn/jpmVkD.Pfw2WunXEDlEo3F8.lpzE0QJGAyUPBO', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 18, 32, 27, 682986), 'updated_at': datetime.datetime(2023, 4, 3, 18, 32, 27, 682992)}
[2023-04-03 20:32:30 +0200] [76922] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 20:32:30 +0200] [76922] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 20:32:30 +0200] [76922] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 20:32:30 +0200] [76922] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 20:32:30 +0200] [76922] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f7069042820>
[2023-04-03 20:32:30 +0200] [76922] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 20:32:30 +0200] [76922] [TRACE] [services.auth_service] AuthService: Create session with user: 0b5144e8-f794-4525-b577-01fcff471438
[2023-04-03 20:32:30 +0200] [76922] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 20:32:30 +0200] [76922] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('0b5144e8-f794-4525-b577-01fcff471438') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 18, 37, 30, 481503) refresh_expire_time=datetime.datetime(2023, 4, 5, 18, 32, 30, 481658) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDcwNTAsInN1YiI6ImFkbWluIn0.gK3bXZ4KBdTy6D1UrVH95R3Grd1D3S8upmNZ3P1lr34' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTk1NTAsInN1YiI6ImFkbWluIn0.vdqnMciOxQRcP87-ODZfOxhf3NqXdPNxoBQEYBVG5mk' blocked=False is_active=True
[2023-04-03 20:32:30 +0200] [76922] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('779ba343-a8ba-4f7d-9309-3e5d7580f245'), 'user_id': UUID('0b5144e8-f794-4525-b577-01fcff471438'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDcwNTAsInN1YiI6ImFkbWluIn0.gK3bXZ4KBdTy6D1UrVH95R3Grd1D3S8upmNZ3P1lr34', 'access_expire_time': datetime.datetime(2023, 4, 3, 18, 37, 30, 481503), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTk1NTAsInN1YiI6ImFkbWluIn0.vdqnMciOxQRcP87-ODZfOxhf3NqXdPNxoBQEYBVG5mk', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 18, 32, 30, 481658), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 18, 32, 30, 485012), 'updated_at': datetime.datetime(2023, 4, 3, 18, 32, 30, 485016)}
[2023-04-03 20:32:32 +0200] [76922] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 20:32:32 +0200] [76922] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 20:32:32 +0200] [76922] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f7069050bb0>
[2023-04-03 20:33:21 +0200] [76999] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 20:33:21 +0200] [76999] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role=<UserRolesEnum.ADMIN: 'admin'> login='admin' password='$2b$12$5alNVlbUlX0LxqagOVRYmOFdjgA2qe9iocODBotKP39en.83blDW.' email='admin@admin' id=None
[2023-04-03 20:33:21 +0200] [76999] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('0a737cdf-e5cb-4d27-87d2-8b29446084c8'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$5alNVlbUlX0LxqagOVRYmOFdjgA2qe9iocODBotKP39en.83blDW.', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 18, 33, 21, 729412), 'updated_at': datetime.datetime(2023, 4, 3, 18, 33, 21, 729417)}
[2023-04-03 20:33:23 +0200] [76999] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 20:33:23 +0200] [76999] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 20:33:23 +0200] [76999] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 20:33:23 +0200] [76999] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 20:33:23 +0200] [76999] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f9ab0a54ac0>
[2023-04-03 20:33:24 +0200] [76999] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 20:33:24 +0200] [76999] [TRACE] [services.auth_service] AuthService: Create session with user: 0a737cdf-e5cb-4d27-87d2-8b29446084c8
[2023-04-03 20:33:24 +0200] [76999] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 20:33:24 +0200] [76999] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('0a737cdf-e5cb-4d27-87d2-8b29446084c8') login='admin' role=<UserRolesEnum.ADMIN: 'admin'> access_expire_time=datetime.datetime(2023, 4, 3, 18, 38, 24, 223709) refresh_expire_time=datetime.datetime(2023, 4, 5, 18, 33, 24, 223882) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDcxMDQsInN1YiI6ImFkbWluIn0.K0yxFErZa0Xi2tL9T_-MdOGwS7sIbpa1idlwk1ZMERQ' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTk2MDQsInN1YiI6ImFkbWluIn0.2BlP03cvRKX3XWOusXxpvjIlvBNjbUcHZq2-fydSeW8' blocked=False is_active=True
[2023-04-03 20:33:24 +0200] [76999] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('deee0bbd-214a-4902-af76-a3aa004826eb'), 'user_id': UUID('0a737cdf-e5cb-4d27-87d2-8b29446084c8'), 'login': 'admin', 'role': <UserRolesEnum.ADMIN: 'admin'>, 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDcxMDQsInN1YiI6ImFkbWluIn0.K0yxFErZa0Xi2tL9T_-MdOGwS7sIbpa1idlwk1ZMERQ', 'access_expire_time': datetime.datetime(2023, 4, 3, 18, 38, 24, 223709), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MTk2MDQsInN1YiI6ImFkbWluIn0.2BlP03cvRKX3XWOusXxpvjIlvBNjbUcHZq2-fydSeW8', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 18, 33, 24, 223882), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 18, 33, 24, 226327), 'updated_at': datetime.datetime(2023, 4, 3, 18, 33, 24, 226331)}
[2023-04-03 20:33:26 +0200] [76999] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 20:33:26 +0200] [76999] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 20:33:26 +0200] [76999] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f9ab0a62e20>
[2023-04-03 20:44:21 +0200] [77487] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 20:44:21 +0200] [77487] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$3cCKUEIOYtEbTcF2kk4dbuzjZQS7Joeq5IDO0mrOCO9L1DNx8J1Da' email='admin@admin' id=None
[2023-04-03 20:44:21 +0200] [77487] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('c30623ec-be9e-4edc-8181-d03311d2e2cd'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$3cCKUEIOYtEbTcF2kk4dbuzjZQS7Joeq5IDO0mrOCO9L1DNx8J1Da', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 18, 44, 21, 211932), 'updated_at': datetime.datetime(2023, 4, 3, 18, 44, 21, 211938)}
[2023-04-03 20:44:24 +0200] [77487] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 20:44:24 +0200] [77487] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 20:44:24 +0200] [77487] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 20:44:24 +0200] [77487] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 20:44:24 +0200] [77487] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f215e581b50>
[2023-04-03 20:44:24 +0200] [77487] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 20:44:24 +0200] [77487] [TRACE] [services.auth_service] AuthService: Create session with user: c30623ec-be9e-4edc-8181-d03311d2e2cd
[2023-04-03 20:45:09 +0200] [77557] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 20:45:09 +0200] [77557] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$CnLoPiV8f2KyjL4D/7g57.qEb6hACGpBOH2cGlLa2Mdp3yGhTJlWC' email='admin@admin' id=None
[2023-04-03 20:45:09 +0200] [77557] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('5c65d365-00b1-4b25-ac6c-1cc9d110ff67'), 'login': 'admin', 'email': 'admin@admin', 'password': '$2b$12$CnLoPiV8f2KyjL4D/7g57.qEb6hACGpBOH2cGlLa2Mdp3yGhTJlWC', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 18, 45, 9, 693779), 'updated_at': datetime.datetime(2023, 4, 3, 18, 45, 9, 693785)}
[2023-04-03 20:45:12 +0200] [77557] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 20:45:12 +0200] [77557] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 20:45:12 +0200] [77557] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 20:45:12 +0200] [77557] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 20:45:12 +0200] [77557] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fdf940a2a90>
[2023-04-03 20:45:13 +0200] [77557] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 20:45:13 +0200] [77557] [TRACE] [services.auth_service] AuthService: Create session with user: 5c65d365-00b1-4b25-ac6c-1cc9d110ff67
[2023-04-03 20:45:13 +0200] [77557] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 20:45:13 +0200] [77557] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('5c65d365-00b1-4b25-ac6c-1cc9d110ff67') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 3, 18, 50, 13, 120416) refresh_expire_time=datetime.datetime(2023, 4, 5, 18, 45, 13, 120587) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDc4MTMsInN1YiI6ImFkbWluIn0.BoBXvjJTaWvMdmudCmfDosg5rcNhmIodsS0HDwOw1fI' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MjAzMTMsInN1YiI6ImFkbWluIn0.gz-aZ-MqT4vJvUX3MqaIztOnVbyp_CHI-pB4sfottEQ' blocked=False is_active=True
[2023-04-03 20:45:13 +0200] [77557] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('70cae112-afa7-4375-ae5d-a29f8d506a68'), 'user_id': UUID('5c65d365-00b1-4b25-ac6c-1cc9d110ff67'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDc4MTMsInN1YiI6ImFkbWluIn0.BoBXvjJTaWvMdmudCmfDosg5rcNhmIodsS0HDwOw1fI', 'access_expire_time': datetime.datetime(2023, 4, 3, 18, 50, 13, 120416), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MjAzMTMsInN1YiI6ImFkbWluIn0.gz-aZ-MqT4vJvUX3MqaIztOnVbyp_CHI-pB4sfottEQ', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 18, 45, 13, 120587), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 18, 45, 13, 123538), 'updated_at': datetime.datetime(2023, 4, 3, 18, 45, 13, 123558)}
[2023-04-03 20:45:16 +0200] [77557] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 20:45:16 +0200] [77557] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 20:45:16 +0200] [77557] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fdf940b2d00>
[2023-04-03 20:45:16 +0200] [77557] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 20:45:16 +0200] [77557] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 20:45:16 +0200] [77557] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fdf940b2c70>
[2023-04-03 20:45:16 +0200] [77557] [INFO] [services.student_service] StudentService: Create students
[2023-04-03 20:45:16 +0200] [77557] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_6', second_name=None, last_name='student_6', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-03 20:45:16 +0200] [77557] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_6' second_name=None last_name='student_6' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-03 20:45:16 +0200] [77557] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-03 20:45:16 +0200] [77557] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_6', 'second_name': None, 'last_name': 'student_6', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-03 20:45:17 +0200] [77557] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-03 20:45:17 +0200] [77557] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_6', second_name=None, last_name='student_6', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='YImFaCzrlCueUQ')]
[2023-04-03 20:45:17 +0200] [77557] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-03 20:45:17 +0200] [77557] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_6', second_name=None, last_name='student_6', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='YImFaCzrlCueUQ')]
[2023-04-03 20:45:17 +0200] [77557] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('002cc71d-c6bd-4f26-a0c6-3eb55b34ae34'), 'registration_token': 'YImFaCzrlCueUQ', 'registered_user': False, 'first_name': 'student_6', 'second_name': None, 'last_name': 'student_6', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 3, 18, 45, 17, 933569), 'updated_at': datetime.datetime(2023, 4, 3, 18, 45, 17, 933574), 'deleted_at': None}]
[2023-04-03 20:45:17 +0200] [77557] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7fdf940a2460>]
[2023-04-03 20:47:34 +0200] [77692] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 20:47:34 +0200] [77692] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='student' login='user' password='$2b$12$2XdrtqyLnoHkuFZ7Zk1N9.fxITvl2a5HensHBXAeRi86Gmynj/2Ga' email='user@user' id=None
[2023-04-03 20:47:34 +0200] [77692] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('b783945b-399e-401e-ba4b-6ff7e2fd13ef'), 'login': 'user', 'email': 'user@user', 'password': '$2b$12$2XdrtqyLnoHkuFZ7Zk1N9.fxITvl2a5HensHBXAeRi86Gmynj/2Ga', 'role': 'student', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 18, 47, 34, 523002), 'updated_at': datetime.datetime(2023, 4, 3, 18, 47, 34, 523008)}
[2023-04-03 20:47:42 +0200] [77692] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 20:47:42 +0200] [77692] [TRACE] [services.auth_service] AuthService: Login user: user
[2023-04-03 20:47:42 +0200] [77692] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 20:47:42 +0200] [77692] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user'}
[2023-04-03 20:47:42 +0200] [77692] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f9401ac6b50>
[2023-04-03 20:47:43 +0200] [77692] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 20:47:43 +0200] [77692] [TRACE] [services.auth_service] AuthService: Create session with user: b783945b-399e-401e-ba4b-6ff7e2fd13ef
[2023-04-03 20:47:43 +0200] [77692] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 20:47:43 +0200] [77692] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('b783945b-399e-401e-ba4b-6ff7e2fd13ef') login='user' role='student' access_expire_time=datetime.datetime(2023, 4, 3, 18, 52, 43, 3092) refresh_expire_time=datetime.datetime(2023, 4, 5, 18, 47, 43, 3246) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDc5NjMsInN1YiI6InVzZXIifQ.AVY6zov89ktE7JEhB80M8HA2Q2kEUk6IgJATWStMxQM' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MjA0NjMsInN1YiI6InVzZXIifQ.kGHtCpILvK4DTfoSXvJq8O5B943bxNo0polNYXAgprw' blocked=False is_active=True
[2023-04-03 20:47:43 +0200] [77692] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('6ee8cd69-3ea9-42f9-a37f-108d8d3a7c0b'), 'user_id': UUID('b783945b-399e-401e-ba4b-6ff7e2fd13ef'), 'login': 'user', 'role': 'student', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDc5NjMsInN1YiI6InVzZXIifQ.AVY6zov89ktE7JEhB80M8HA2Q2kEUk6IgJATWStMxQM', 'access_expire_time': datetime.datetime(2023, 4, 3, 18, 52, 43, 3092), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MjA0NjMsInN1YiI6InVzZXIifQ.kGHtCpILvK4DTfoSXvJq8O5B943bxNo0polNYXAgprw', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 18, 47, 43, 3246), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 18, 47, 43, 6181), 'updated_at': datetime.datetime(2023, 4, 3, 18, 47, 43, 6185)}
[2023-04-03 20:47:50 +0200] [77692] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 20:47:50 +0200] [77692] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user'}
[2023-04-03 20:47:50 +0200] [77692] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f9401ad5d60>
[2023-04-03 20:47:50 +0200] [77692] [ERROR] [mixins.auth_mixin] 
NoneType: None
[2023-04-03 20:48:14 +0200] [77692] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 20:48:14 +0200] [77692] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='aaaaadmin' password='$2b$12$8zyD1qwnfRIUcwwfXg4xheMcYX.p8715KzZvGsnSvH.SSLFcsr6YS' email='user@user' id=None
[2023-04-03 20:48:32 +0200] [77692] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 20:48:32 +0200] [77692] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='aaaaadmin' password='$2b$12$5EW7nxllomzBHmND.paVJ..QDL5rALaQM2a5BCjpEiF9pLaWZ58ZG' email='admiiiin@user' id=None
[2023-04-03 20:48:32 +0200] [77692] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('a3b437e2-4da7-4b0e-86c4-983e8a262b02'), 'login': 'aaaaadmin', 'email': 'admiiiin@user', 'password': '$2b$12$5EW7nxllomzBHmND.paVJ..QDL5rALaQM2a5BCjpEiF9pLaWZ58ZG', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 18, 48, 32, 349873), 'updated_at': datetime.datetime(2023, 4, 3, 18, 48, 32, 349879)}
[2023-04-03 20:48:42 +0200] [77692] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 20:48:42 +0200] [77692] [TRACE] [services.auth_service] AuthService: Login user: aaaaadmin
[2023-04-03 20:48:42 +0200] [77692] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 20:48:42 +0200] [77692] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'aaaaadmin'}
[2023-04-03 20:48:42 +0200] [77692] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f940182d0a0>
[2023-04-03 20:48:42 +0200] [77692] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 20:48:42 +0200] [77692] [TRACE] [services.auth_service] AuthService: Create session with user: a3b437e2-4da7-4b0e-86c4-983e8a262b02
[2023-04-03 20:48:42 +0200] [77692] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 20:48:42 +0200] [77692] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('a3b437e2-4da7-4b0e-86c4-983e8a262b02') login='aaaaadmin' role='admin' access_expire_time=datetime.datetime(2023, 4, 3, 18, 53, 42, 787360) refresh_expire_time=datetime.datetime(2023, 4, 5, 18, 48, 42, 787498) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDgwMjIsInN1YiI6ImFhYWFhZG1pbiJ9.xPS0KxV1-Tx6sTE1_9FXuuMyOsfMABVJsWbM0eX-pXQ' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MjA1MjIsInN1YiI6ImFhYWFhZG1pbiJ9.-hGf_JR8UqUrWhpMLsX_Aq3-daB2KsJMy39SiKf5MJ0' blocked=False is_active=True
[2023-04-03 20:48:42 +0200] [77692] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('f42a4de9-a5e5-4166-bf11-88666d736418'), 'user_id': UUID('a3b437e2-4da7-4b0e-86c4-983e8a262b02'), 'login': 'aaaaadmin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NDgwMjIsInN1YiI6ImFhYWFhZG1pbiJ9.xPS0KxV1-Tx6sTE1_9FXuuMyOsfMABVJsWbM0eX-pXQ', 'access_expire_time': datetime.datetime(2023, 4, 3, 18, 53, 42, 787360), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MjA1MjIsInN1YiI6ImFhYWFhZG1pbiJ9.-hGf_JR8UqUrWhpMLsX_Aq3-daB2KsJMy39SiKf5MJ0', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 18, 48, 42, 787498), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 18, 48, 42, 789345), 'updated_at': datetime.datetime(2023, 4, 3, 18, 48, 42, 789349)}
[2023-04-03 20:48:46 +0200] [77692] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 20:48:46 +0200] [77692] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'aaaaadmin'}
[2023-04-03 20:48:46 +0200] [77692] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f940182d190>
[2023-04-03 20:48:46 +0200] [77692] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 20:48:46 +0200] [77692] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'aaaaadmin'}
[2023-04-03 20:48:46 +0200] [77692] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f940182d130>
[2023-04-03 20:48:46 +0200] [77692] [INFO] [services.student_service] StudentService: Create students
[2023-04-03 20:48:46 +0200] [77692] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-03 20:48:46 +0200] [77692] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_1' second_name=None last_name='student_1' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-03 20:48:46 +0200] [77692] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-03 20:48:46 +0200] [77692] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-03 20:48:47 +0200] [77692] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-03 20:48:47 +0200] [77692] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='AixjLcPX3HnZ_Q')]
[2023-04-03 20:48:47 +0200] [77692] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-03 20:48:47 +0200] [77692] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='AixjLcPX3HnZ_Q')]
[2023-04-03 20:48:47 +0200] [77692] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('82c3547e-49e5-430e-8dfe-665fd16f6eb7'), 'registration_token': 'AixjLcPX3HnZ_Q', 'registered_user': False, 'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 3, 18, 48, 47, 455947), 'updated_at': datetime.datetime(2023, 4, 3, 18, 48, 47, 455951), 'deleted_at': None}]
[2023-04-03 20:48:47 +0200] [77692] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7f9401ad50a0>]
[2023-04-03 21:29:12 +0200] [79386] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 21:29:12 +0200] [79386] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$JcjEnWV4tYj2MJZEQD4emO2WJebLTj3WPaF5ivIAmkiUh57IS4Ww6' email='admin@user' id=None
[2023-04-03 21:29:12 +0200] [79386] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('6f0d26ec-1459-4ec4-b859-56257e45f683'), 'login': 'admin', 'email': 'admin@user', 'password': '$2b$12$JcjEnWV4tYj2MJZEQD4emO2WJebLTj3WPaF5ivIAmkiUh57IS4Ww6', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 19, 29, 12, 557924), 'updated_at': datetime.datetime(2023, 4, 3, 19, 29, 12, 557929)}
[2023-04-03 21:29:16 +0200] [79386] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 21:29:16 +0200] [79386] [TRACE] [services.auth_service] AuthService: Login user: aaaaadmin
[2023-04-03 21:29:16 +0200] [79386] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 21:29:16 +0200] [79386] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'aaaaadmin'}
[2023-04-03 21:29:16 +0200] [79386] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database None
[2023-04-03 21:29:25 +0200] [79386] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 21:29:25 +0200] [79386] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 21:29:25 +0200] [79386] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 21:29:25 +0200] [79386] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 21:29:25 +0200] [79386] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f4ebc0a58b0>
[2023-04-03 21:29:25 +0200] [79386] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 21:29:25 +0200] [79386] [TRACE] [services.auth_service] AuthService: Create session with user: 6f0d26ec-1459-4ec4-b859-56257e45f683
[2023-04-03 21:29:25 +0200] [79386] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 21:29:25 +0200] [79386] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('6f0d26ec-1459-4ec4-b859-56257e45f683') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 3, 19, 34, 25, 444910) refresh_expire_time=datetime.datetime(2023, 4, 5, 19, 29, 25, 445066) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NTA0NjUsInN1YiI6ImFkbWluIn0.Uwi5fSUui4FvrtDPjzZ9RP87yrC_ornDTpzg3bSBB8U' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MjI5NjUsInN1YiI6ImFkbWluIn0.cES2dYAJa01vIqRFLkLTSN1Qfbdfb_YN_hq94Uey19I' blocked=False is_active=True
[2023-04-03 21:29:25 +0200] [79386] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('086d7c83-421f-43ec-8630-2a56182848e5'), 'user_id': UUID('6f0d26ec-1459-4ec4-b859-56257e45f683'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NTA0NjUsInN1YiI6ImFkbWluIn0.Uwi5fSUui4FvrtDPjzZ9RP87yrC_ornDTpzg3bSBB8U', 'access_expire_time': datetime.datetime(2023, 4, 3, 19, 34, 25, 444910), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MjI5NjUsInN1YiI6ImFkbWluIn0.cES2dYAJa01vIqRFLkLTSN1Qfbdfb_YN_hq94Uey19I', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 19, 29, 25, 445066), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 19, 29, 25, 447832), 'updated_at': datetime.datetime(2023, 4, 3, 19, 29, 25, 447838)}
[2023-04-03 21:29:29 +0200] [79386] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-03 21:29:29 +0200] [79386] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f4ebc0db070>
[2023-04-03 21:30:07 +0200] [79459] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 21:30:07 +0200] [79459] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$fL/SskM6fnOZQuwkQ1bqsuI3mLESz56iWd8Is5baITbD7UDIRIEdm' email='admin@user' id=None
[2023-04-03 21:30:07 +0200] [79459] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('cb8e9fa1-1ed0-4cbf-a6a8-5ba0c9ab7d48'), 'login': 'admin', 'email': 'admin@user', 'password': '$2b$12$fL/SskM6fnOZQuwkQ1bqsuI3mLESz56iWd8Is5baITbD7UDIRIEdm', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 19, 30, 7, 512537), 'updated_at': datetime.datetime(2023, 4, 3, 19, 30, 7, 512544)}
[2023-04-03 21:30:10 +0200] [79459] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 21:30:10 +0200] [79459] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 21:30:10 +0200] [79459] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 21:30:10 +0200] [79459] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 21:30:10 +0200] [79459] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fc0b448efa0>
[2023-04-03 21:30:10 +0200] [79459] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 21:30:10 +0200] [79459] [TRACE] [services.auth_service] AuthService: Create session with user: cb8e9fa1-1ed0-4cbf-a6a8-5ba0c9ab7d48
[2023-04-03 21:30:10 +0200] [79459] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 21:30:10 +0200] [79459] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('cb8e9fa1-1ed0-4cbf-a6a8-5ba0c9ab7d48') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 3, 19, 35, 10, 551597) refresh_expire_time=datetime.datetime(2023, 4, 5, 19, 30, 10, 551765) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NTA1MTAsInN1YiI6ImFkbWluIn0.IT9yqwR4ynyLzXIoNtAA5jchVNIt6WHXmHd3415Etm4' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MjMwMTAsInN1YiI6ImFkbWluIn0.jGKmDfy2VI935cETJNA-VR_oSQYNGtPzKs5nKzEtLto' blocked=False is_active=True
[2023-04-03 21:30:10 +0200] [79459] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('53daff04-250d-401a-a839-cb0a527f351e'), 'user_id': UUID('cb8e9fa1-1ed0-4cbf-a6a8-5ba0c9ab7d48'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NTA1MTAsInN1YiI6ImFkbWluIn0.IT9yqwR4ynyLzXIoNtAA5jchVNIt6WHXmHd3415Etm4', 'access_expire_time': datetime.datetime(2023, 4, 3, 19, 35, 10, 551597), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MjMwMTAsInN1YiI6ImFkbWluIn0.jGKmDfy2VI935cETJNA-VR_oSQYNGtPzKs5nKzEtLto', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 19, 30, 10, 551765), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 19, 30, 10, 554281), 'updated_at': datetime.datetime(2023, 4, 3, 19, 30, 10, 554285)}
[2023-04-03 21:30:12 +0200] [79459] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-03 21:30:12 +0200] [79459] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fc0b6fafac0>
[2023-04-03 21:30:47 +0200] [79518] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 21:30:47 +0200] [79518] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$vLQpO81NgsJsb6A9HKcEBu/Yay4MgpayiwhVPHg7/SlCAX8Wz6eIS' email='admin@user' id=None
[2023-04-03 21:30:47 +0200] [79518] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('46677215-c887-4c24-be56-10f12e9c27ba'), 'login': 'admin', 'email': 'admin@user', 'password': '$2b$12$vLQpO81NgsJsb6A9HKcEBu/Yay4MgpayiwhVPHg7/SlCAX8Wz6eIS', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 19, 30, 47, 341584), 'updated_at': datetime.datetime(2023, 4, 3, 19, 30, 47, 341589)}
[2023-04-03 21:30:49 +0200] [79518] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 21:30:49 +0200] [79518] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 21:30:49 +0200] [79518] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 21:30:49 +0200] [79518] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 21:30:49 +0200] [79518] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fe039d84fd0>
[2023-04-03 21:30:49 +0200] [79518] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 21:30:49 +0200] [79518] [TRACE] [services.auth_service] AuthService: Create session with user: 46677215-c887-4c24-be56-10f12e9c27ba
[2023-04-03 21:30:49 +0200] [79518] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 21:30:49 +0200] [79518] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('46677215-c887-4c24-be56-10f12e9c27ba') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 3, 19, 35, 49, 647585) refresh_expire_time=datetime.datetime(2023, 4, 5, 19, 30, 49, 647738) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NTA1NDksInN1YiI6ImFkbWluIn0.noYco2Sbf9U6luDRuO9uDqdRH4Jl4KL3Gp9zoE-CgFY' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MjMwNDksInN1YiI6ImFkbWluIn0.TxT_BrAYaRk1iXCRwi50XQlIUeFpr2hv2LTrJHqxHYU' blocked=False is_active=True
[2023-04-03 21:30:49 +0200] [79518] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('29547199-9399-4e68-be7c-fc41e4b6ed53'), 'user_id': UUID('46677215-c887-4c24-be56-10f12e9c27ba'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NTA1NDksInN1YiI6ImFkbWluIn0.noYco2Sbf9U6luDRuO9uDqdRH4Jl4KL3Gp9zoE-CgFY', 'access_expire_time': datetime.datetime(2023, 4, 3, 19, 35, 49, 647585), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MjMwNDksInN1YiI6ImFkbWluIn0.TxT_BrAYaRk1iXCRwi50XQlIUeFpr2hv2LTrJHqxHYU', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 19, 30, 49, 647738), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 19, 30, 49, 650488), 'updated_at': datetime.datetime(2023, 4, 3, 19, 30, 49, 650492)}
[2023-04-03 21:30:51 +0200] [79518] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-03 21:30:51 +0200] [79518] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fe03c8a78b0>
[2023-04-03 21:30:51 +0200] [79518] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 21:30:51 +0200] [79518] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 21:30:51 +0200] [79518] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fe039d45370>
[2023-04-03 21:30:51 +0200] [79518] [INFO] [services.student_service] StudentService: Create students
[2023-04-03 21:30:51 +0200] [79518] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-03 21:30:51 +0200] [79518] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_1' second_name=None last_name='student_1' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-03 21:30:51 +0200] [79518] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-03 21:30:51 +0200] [79518] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-03 21:30:53 +0200] [79518] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-03 21:30:53 +0200] [79518] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='PCPECFOxeIyzVg')]
[2023-04-03 21:30:53 +0200] [79518] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-03 21:30:53 +0200] [79518] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='PCPECFOxeIyzVg')]
[2023-04-03 21:30:53 +0200] [79518] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('073e1fb0-2ba7-4600-adf9-e0c059448e15'), 'registration_token': 'PCPECFOxeIyzVg', 'registered_user': False, 'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 3, 19, 30, 53, 189196), 'updated_at': datetime.datetime(2023, 4, 3, 19, 30, 53, 189200), 'deleted_at': None}]
[2023-04-03 21:30:53 +0200] [79518] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7fe03c8a7880>]
[2023-04-03 21:31:18 +0200] [79518] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 21:31:18 +0200] [79518] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='student' login='user' password='$2b$12$9C1uELE3zk5hhrow2Nx9/O/JwlY9xeRUctsNjowTWk9SXxT/oraHW' email='user@user' id=None
[2023-04-03 21:31:18 +0200] [79518] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('3e8b381d-af2e-41b9-a6d0-f20e48d880cf'), 'login': 'user', 'email': 'user@user', 'password': '$2b$12$9C1uELE3zk5hhrow2Nx9/O/JwlY9xeRUctsNjowTWk9SXxT/oraHW', 'role': 'student', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 19, 31, 18, 57926), 'updated_at': datetime.datetime(2023, 4, 3, 19, 31, 18, 57930)}
[2023-04-03 21:31:24 +0200] [79518] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 21:31:24 +0200] [79518] [TRACE] [services.auth_service] AuthService: Login user: user
[2023-04-03 21:31:24 +0200] [79518] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 21:31:24 +0200] [79518] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user'}
[2023-04-03 21:31:24 +0200] [79518] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fe039cf6c70>
[2023-04-03 21:31:24 +0200] [79518] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 21:31:24 +0200] [79518] [TRACE] [services.auth_service] AuthService: Create session with user: 3e8b381d-af2e-41b9-a6d0-f20e48d880cf
[2023-04-03 21:31:24 +0200] [79518] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 21:31:24 +0200] [79518] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('3e8b381d-af2e-41b9-a6d0-f20e48d880cf') login='user' role='student' access_expire_time=datetime.datetime(2023, 4, 3, 19, 36, 24, 268365) refresh_expire_time=datetime.datetime(2023, 4, 5, 19, 31, 24, 268527) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NTA1ODQsInN1YiI6InVzZXIifQ.3J7bDBAzJGBe3ulEIIL0SC_caLNurX3New-rvjmDrFo' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MjMwODQsInN1YiI6InVzZXIifQ.tarALYRvz1d3892gdLz1CadYN9k6DbWdX_uFIP7Xh_E' blocked=False is_active=True
[2023-04-03 21:31:24 +0200] [79518] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('4ad2ef84-2024-4fff-a9d8-7355d7d36a9c'), 'user_id': UUID('3e8b381d-af2e-41b9-a6d0-f20e48d880cf'), 'login': 'user', 'role': 'student', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NTA1ODQsInN1YiI6InVzZXIifQ.3J7bDBAzJGBe3ulEIIL0SC_caLNurX3New-rvjmDrFo', 'access_expire_time': datetime.datetime(2023, 4, 3, 19, 36, 24, 268365), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MjMwODQsInN1YiI6InVzZXIifQ.tarALYRvz1d3892gdLz1CadYN9k6DbWdX_uFIP7Xh_E', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 19, 31, 24, 268527), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 19, 31, 24, 270305), 'updated_at': datetime.datetime(2023, 4, 3, 19, 31, 24, 270308)}
[2023-04-03 21:31:35 +0200] [79518] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-03 21:31:35 +0200] [79518] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fe039db1fd0>
[2023-04-03 21:31:35 +0200] [79518] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 21:31:35 +0200] [79518] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user'}
[2023-04-03 21:31:35 +0200] [79518] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fe039cf6d60>
[2023-04-03 21:31:35 +0200] [79518] [ERROR] [utils.rights_restriction] 
NoneType: None
[2023-04-03 21:31:48 +0200] [79518] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 21:31:48 +0200] [79518] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 21:31:48 +0200] [79518] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 21:31:48 +0200] [79518] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 21:31:48 +0200] [79518] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fe039ce4a60>
[2023-04-03 21:31:49 +0200] [79518] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 21:31:49 +0200] [79518] [TRACE] [services.auth_service] AuthService: Create session with user: 46677215-c887-4c24-be56-10f12e9c27ba
[2023-04-03 21:31:49 +0200] [79518] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 21:31:49 +0200] [79518] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('46677215-c887-4c24-be56-10f12e9c27ba') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 3, 19, 36, 49, 133703) refresh_expire_time=datetime.datetime(2023, 4, 5, 19, 31, 49, 133846) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NTA2MDksInN1YiI6ImFkbWluIn0.5TRKTlsR7LphOOl5x-LORefmbkceHM7zDexxzGi_tMg' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MjMxMDksInN1YiI6ImFkbWluIn0.WXkaCv0-gRYfR_UESBKEcq_zlhrBG3MJTpO0lsGMFCI' blocked=False is_active=True
[2023-04-03 21:31:49 +0200] [79518] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('e4ecfd0a-1de5-447c-8b1d-f21d6786d503'), 'user_id': UUID('46677215-c887-4c24-be56-10f12e9c27ba'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NTA2MDksInN1YiI6ImFkbWluIn0.5TRKTlsR7LphOOl5x-LORefmbkceHM7zDexxzGi_tMg', 'access_expire_time': datetime.datetime(2023, 4, 3, 19, 36, 49, 133703), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MjMxMDksInN1YiI6ImFkbWluIn0.WXkaCv0-gRYfR_UESBKEcq_zlhrBG3MJTpO0lsGMFCI', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 19, 31, 49, 133846), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 19, 31, 49, 135621), 'updated_at': datetime.datetime(2023, 4, 3, 19, 31, 49, 135624)}
[2023-04-03 21:31:51 +0200] [79518] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-03 21:31:51 +0200] [79518] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fe03c8a7af0>
[2023-04-03 21:31:51 +0200] [79518] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 21:31:51 +0200] [79518] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 21:31:51 +0200] [79518] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fe039cf6730>
[2023-04-03 21:31:51 +0200] [79518] [INFO] [services.student_service] StudentService: Create students
[2023-04-03 21:31:51 +0200] [79518] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_2', second_name=None, last_name='student_2', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-03 21:31:51 +0200] [79518] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_2' second_name=None last_name='student_2' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-03 21:31:51 +0200] [79518] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-03 21:31:51 +0200] [79518] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_2', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-03 21:31:51 +0200] [79518] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-03 21:31:51 +0200] [79518] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_2', second_name=None, last_name='student_2', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='aHHmt_HZ4E-4Pw')]
[2023-04-03 21:31:51 +0200] [79518] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-03 21:31:51 +0200] [79518] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_2', second_name=None, last_name='student_2', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='aHHmt_HZ4E-4Pw')]
[2023-04-03 21:31:51 +0200] [79518] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('65ec0b37-85e7-4e77-85cb-e142b0f7e86e'), 'registration_token': 'aHHmt_HZ4E-4Pw', 'registered_user': False, 'first_name': 'student_2', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 3, 19, 31, 51, 898458), 'updated_at': datetime.datetime(2023, 4, 3, 19, 31, 51, 898464), 'deleted_at': None}]
[2023-04-03 21:31:51 +0200] [79518] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7fe039ce4100>]
[2023-04-03 21:37:34 +0200] [79518] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-03 21:37:34 +0200] [79518] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fe03c8a7a90>
[2023-04-03 21:38:31 +0200] [79518] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-03 21:38:31 +0200] [79518] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fe039cf6f70>
[2023-04-03 21:46:44 +0200] [81028] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-03 21:46:44 +0200] [81028] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7ff82138f850>
[2023-04-03 21:48:33 +0200] [81360] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-03 21:48:33 +0200] [81360] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fc58d7de940>
[2023-04-03 21:53:59 +0200] [82214] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-03 21:53:59 +0200] [82214] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fa57b3fd850>
[2023-04-03 21:54:28 +0200] [82267] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-03 21:54:28 +0200] [82267] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fc0cc712d60>
[2023-04-03 21:56:00 +0200] [82350] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 21:56:00 +0200] [82350] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 21:56:00 +0200] [82350] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 21:56:00 +0200] [82350] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 21:56:00 +0200] [82350] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database None
[2023-04-03 21:56:30 +0200] [82350] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 21:56:30 +0200] [82350] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$o1jHvwNTCYzJecCc211j4eZh17ZPjbOQLzh4DIM19VKhvRNci4shy' email='admin@user' id=None
[2023-04-03 21:56:30 +0200] [82350] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('dc0f8fcd-3378-4167-bc18-b08439e63781'), 'login': 'admin', 'email': 'admin@user', 'password': '$2b$12$o1jHvwNTCYzJecCc211j4eZh17ZPjbOQLzh4DIM19VKhvRNci4shy', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 19, 56, 30, 406910), 'updated_at': datetime.datetime(2023, 4, 3, 19, 56, 30, 406915)}
[2023-04-03 21:56:34 +0200] [82350] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 21:56:34 +0200] [82350] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 21:56:34 +0200] [82350] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 21:56:34 +0200] [82350] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 21:56:34 +0200] [82350] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7ff18ede3490>
[2023-04-03 21:56:34 +0200] [82350] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 21:56:34 +0200] [82350] [TRACE] [services.auth_service] AuthService: Create session with user: dc0f8fcd-3378-4167-bc18-b08439e63781
[2023-04-03 21:56:34 +0200] [82350] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 21:56:34 +0200] [82350] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('dc0f8fcd-3378-4167-bc18-b08439e63781') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 3, 20, 1, 34, 538250) refresh_expire_time=datetime.datetime(2023, 4, 5, 19, 56, 34, 538401) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NTIwOTQsInN1YiI6ImFkbWluIn0.ByrpNRC7NJF5OD40tR_dfAfOVN9pF9rEkZND5XysfHA' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MjQ1OTQsInN1YiI6ImFkbWluIn0.pXYXPC48tPXr_-brr-2NSJYGMWxw5TMxFNpOHw3IYas' blocked=False is_active=True
[2023-04-03 21:56:34 +0200] [82350] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('de9ae7b1-246e-4444-8c1b-1d730da59bdb'), 'user_id': UUID('dc0f8fcd-3378-4167-bc18-b08439e63781'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NTIwOTQsInN1YiI6ImFkbWluIn0.ByrpNRC7NJF5OD40tR_dfAfOVN9pF9rEkZND5XysfHA', 'access_expire_time': datetime.datetime(2023, 4, 3, 20, 1, 34, 538250), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MjQ1OTQsInN1YiI6ImFkbWluIn0.pXYXPC48tPXr_-brr-2NSJYGMWxw5TMxFNpOHw3IYas', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 19, 56, 34, 538401), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 19, 56, 34, 540942), 'updated_at': datetime.datetime(2023, 4, 3, 19, 56, 34, 540946)}
[2023-04-03 21:56:38 +0200] [82350] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-03 21:56:38 +0200] [82350] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7ff18ee90bb0>
[2023-04-03 21:56:38 +0200] [82350] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 21:56:38 +0200] [82350] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 21:56:38 +0200] [82350] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7ff18edf9be0>
[2023-04-03 21:56:38 +0200] [82350] [INFO] [services.student_service] StudentService: Create students
[2023-04-03 21:56:38 +0200] [82350] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_3', second_name=None, last_name='student_3', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-03 21:56:38 +0200] [82350] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_3' second_name=None last_name='student_3' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-03 21:56:38 +0200] [82350] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-03 21:56:38 +0200] [82350] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_3', 'second_name': None, 'last_name': 'student_3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-03 21:56:39 +0200] [82350] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-03 21:56:39 +0200] [82350] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_3', second_name=None, last_name='student_3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='VvGeUDTe5eddPQ')]
[2023-04-03 21:56:39 +0200] [82350] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-03 21:56:39 +0200] [82350] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_3', second_name=None, last_name='student_3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='VvGeUDTe5eddPQ')]
[2023-04-03 21:56:39 +0200] [82350] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('056fe0c8-f9af-490d-a3dc-8f6c25903d61'), 'registration_token': 'VvGeUDTe5eddPQ', 'registered_user': False, 'first_name': 'student_3', 'second_name': None, 'last_name': 'student_3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 3, 19, 56, 39, 694092), 'updated_at': datetime.datetime(2023, 4, 3, 19, 56, 39, 694096), 'deleted_at': None}]
[2023-04-03 21:56:39 +0200] [82350] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7ff18ee90e50>]
[2023-04-03 21:56:56 +0200] [82350] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 21:56:56 +0200] [82350] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='student' login='user' password='$2b$12$cEScUHefkzRK399ZJ4YwouKbLMUU/dnHGnh/g/N5P7iXWsllJgsOe' email='user@user' id=None
[2023-04-03 21:56:56 +0200] [82350] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('c40f88ce-72bd-4d46-bc74-c1c17afab5e3'), 'login': 'user', 'email': 'user@user', 'password': '$2b$12$cEScUHefkzRK399ZJ4YwouKbLMUU/dnHGnh/g/N5P7iXWsllJgsOe', 'role': 'student', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 19, 56, 56, 521242), 'updated_at': datetime.datetime(2023, 4, 3, 19, 56, 56, 521246)}
[2023-04-03 21:56:58 +0200] [82350] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 21:56:58 +0200] [82350] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 21:56:58 +0200] [82350] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 21:56:58 +0200] [82350] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 21:56:58 +0200] [82350] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7ff18edc4580>
[2023-04-03 21:56:59 +0200] [82350] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 21:56:59 +0200] [82350] [TRACE] [services.auth_service] AuthService: Create session with user: dc0f8fcd-3378-4167-bc18-b08439e63781
[2023-04-03 21:56:59 +0200] [82350] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 21:56:59 +0200] [82350] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('dc0f8fcd-3378-4167-bc18-b08439e63781') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 3, 20, 1, 59, 221033) refresh_expire_time=datetime.datetime(2023, 4, 5, 19, 56, 59, 221191) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NTIxMTksInN1YiI6ImFkbWluIn0.hlH6TWJKji-tjBAaR7hBRZNHj4V7ihpzhFgtRBosCwg' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MjQ2MTksInN1YiI6ImFkbWluIn0.bYUDiR2ZCqwiYCxenppZwwu50Q5m6X0LY99sUy-5ueI' blocked=False is_active=True
[2023-04-03 21:56:59 +0200] [82350] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('7b10dd8e-8b9e-44c8-891b-7888ddf42a34'), 'user_id': UUID('dc0f8fcd-3378-4167-bc18-b08439e63781'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NTIxMTksInN1YiI6ImFkbWluIn0.hlH6TWJKji-tjBAaR7hBRZNHj4V7ihpzhFgtRBosCwg', 'access_expire_time': datetime.datetime(2023, 4, 3, 20, 1, 59, 221033), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MjQ2MTksInN1YiI6ImFkbWluIn0.bYUDiR2ZCqwiYCxenppZwwu50Q5m6X0LY99sUy-5ueI', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 19, 56, 59, 221191), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 19, 56, 59, 223121), 'updated_at': datetime.datetime(2023, 4, 3, 19, 56, 59, 223125)}
[2023-04-03 21:57:06 +0200] [82350] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-03 21:57:06 +0200] [82350] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7ff191aa2eb0>
[2023-04-03 21:57:06 +0200] [82350] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 21:57:06 +0200] [82350] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 21:57:06 +0200] [82350] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7ff18edc46d0>
[2023-04-03 21:57:06 +0200] [82350] [INFO] [services.student_service] StudentService: Create students
[2023-04-03 21:57:06 +0200] [82350] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-03 21:57:06 +0200] [82350] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_1' second_name=None last_name='student_1' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-03 21:57:06 +0200] [82350] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-03 21:57:06 +0200] [82350] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-03 21:57:06 +0200] [82350] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-03 21:57:06 +0200] [82350] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='C7Nc21Krn6C5tw')]
[2023-04-03 21:57:06 +0200] [82350] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-03 21:57:06 +0200] [82350] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='C7Nc21Krn6C5tw')]
[2023-04-03 21:57:06 +0200] [82350] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('39d06e66-c406-46e2-8029-dc2633f47019'), 'registration_token': 'C7Nc21Krn6C5tw', 'registered_user': False, 'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 3, 19, 57, 6, 749042), 'updated_at': datetime.datetime(2023, 4, 3, 19, 57, 6, 749050), 'deleted_at': None}]
[2023-04-03 21:57:06 +0200] [82350] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7ff191aa2b80>]
[2023-04-03 21:57:20 +0200] [82350] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 21:57:20 +0200] [82350] [TRACE] [services.auth_service] AuthService: Login user: user
[2023-04-03 21:57:20 +0200] [82350] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 21:57:20 +0200] [82350] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user'}
[2023-04-03 21:57:20 +0200] [82350] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7ff18edc47f0>
[2023-04-03 21:57:20 +0200] [82350] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 21:57:20 +0200] [82350] [TRACE] [services.auth_service] AuthService: Create session with user: c40f88ce-72bd-4d46-bc74-c1c17afab5e3
[2023-04-03 21:57:20 +0200] [82350] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 21:57:20 +0200] [82350] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('c40f88ce-72bd-4d46-bc74-c1c17afab5e3') login='user' role='student' access_expire_time=datetime.datetime(2023, 4, 3, 20, 2, 20, 978904) refresh_expire_time=datetime.datetime(2023, 4, 5, 19, 57, 20, 979042) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NTIxNDAsInN1YiI6InVzZXIifQ.Jjo-oYDzalrzXV18yK3OI1OnAroOZEDia-NDJ5MY4gg' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MjQ2NDAsInN1YiI6InVzZXIifQ.U4Yevf5Ucy2X5Hos-fZ0BDjP5RgDdBCqze2E4y2uURc' blocked=False is_active=True
[2023-04-03 21:57:20 +0200] [82350] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('4c81723f-dc6b-40cd-93b8-03609111adcb'), 'user_id': UUID('c40f88ce-72bd-4d46-bc74-c1c17afab5e3'), 'login': 'user', 'role': 'student', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NTIxNDAsInN1YiI6InVzZXIifQ.Jjo-oYDzalrzXV18yK3OI1OnAroOZEDia-NDJ5MY4gg', 'access_expire_time': datetime.datetime(2023, 4, 3, 20, 2, 20, 978904), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MjQ2NDAsInN1YiI6InVzZXIifQ.U4Yevf5Ucy2X5Hos-fZ0BDjP5RgDdBCqze2E4y2uURc', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 19, 57, 20, 979042), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 19, 57, 20, 981130), 'updated_at': datetime.datetime(2023, 4, 3, 19, 57, 20, 981135)}
[2023-04-03 21:57:28 +0200] [82350] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-03 21:57:28 +0200] [82350] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7ff191aa2190>
[2023-04-03 21:57:28 +0200] [82350] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 21:57:28 +0200] [82350] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user'}
[2023-04-03 21:57:28 +0200] [82350] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7ff18edc4700>
[2023-04-03 21:57:28 +0200] [82350] [ERROR] [utils.rights_restriction] 
NoneType: None
[2023-04-03 21:57:36 +0200] [82350] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 21:57:36 +0200] [82350] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-03 21:57:36 +0200] [82350] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 21:57:36 +0200] [82350] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 21:57:36 +0200] [82350] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7ff18edc8100>
[2023-04-03 21:57:36 +0200] [82350] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 21:57:36 +0200] [82350] [TRACE] [services.auth_service] AuthService: Create session with user: dc0f8fcd-3378-4167-bc18-b08439e63781
[2023-04-03 21:57:36 +0200] [82350] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 21:57:36 +0200] [82350] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('dc0f8fcd-3378-4167-bc18-b08439e63781') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 3, 20, 2, 36, 828647) refresh_expire_time=datetime.datetime(2023, 4, 5, 19, 57, 36, 828793) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NTIxNTYsInN1YiI6ImFkbWluIn0.cAQcdG4D9g3RxPmdto8j-xnDiqWFtoq4jmt6YDISC0Y' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MjQ2NTYsInN1YiI6ImFkbWluIn0.hrAX98gMuZon2AV8rKS8-Kh-nnonMvPvD-PFO84j7uU' blocked=False is_active=True
[2023-04-03 21:57:36 +0200] [82350] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('d001efd1-b84e-4a87-aa32-39b7035d206a'), 'user_id': UUID('dc0f8fcd-3378-4167-bc18-b08439e63781'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NTIxNTYsInN1YiI6ImFkbWluIn0.cAQcdG4D9g3RxPmdto8j-xnDiqWFtoq4jmt6YDISC0Y', 'access_expire_time': datetime.datetime(2023, 4, 3, 20, 2, 36, 828647), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MjQ2NTYsInN1YiI6ImFkbWluIn0.hrAX98gMuZon2AV8rKS8-Kh-nnonMvPvD-PFO84j7uU', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 19, 57, 36, 828793), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 19, 57, 36, 830863), 'updated_at': datetime.datetime(2023, 4, 3, 19, 57, 36, 830867)}
[2023-04-03 21:57:39 +0200] [82350] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-03 21:57:39 +0200] [82350] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7ff18edb3f10>
[2023-04-03 21:57:39 +0200] [82350] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 21:57:39 +0200] [82350] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-03 21:57:39 +0200] [82350] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7ff18edca1f0>
[2023-04-03 21:57:39 +0200] [82350] [INFO] [services.student_service] StudentService: Create students
[2023-04-03 21:57:39 +0200] [82350] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_2', second_name=None, last_name='student_2', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-03 21:57:39 +0200] [82350] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_2' second_name=None last_name='student_2' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-03 21:57:39 +0200] [82350] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-03 21:57:39 +0200] [82350] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_2', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-03 21:57:39 +0200] [82350] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-03 21:57:39 +0200] [82350] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_2', second_name=None, last_name='student_2', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='J7GfweXBs5-icw')]
[2023-04-03 21:57:39 +0200] [82350] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-03 21:57:39 +0200] [82350] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_2', second_name=None, last_name='student_2', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='J7GfweXBs5-icw')]
[2023-04-03 21:57:39 +0200] [82350] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('f95ae89a-5de4-494f-b2a9-d7bcf2c64523'), 'registration_token': 'J7GfweXBs5-icw', 'registered_user': False, 'first_name': 'student_2', 'second_name': None, 'last_name': 'student_2', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 3, 19, 57, 39, 521419), 'updated_at': datetime.datetime(2023, 4, 3, 19, 57, 39, 521428), 'deleted_at': None}]
[2023-04-03 21:57:39 +0200] [82350] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7ff18edb3f40>]
[2023-04-03 22:03:19 +0200] [82350] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-03 22:03:19 +0200] [82350] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7ff18edb3ee0>
[2023-04-03 22:03:41 +0200] [82350] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-03 22:03:41 +0200] [82350] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7ff18edc4fa0>
[2023-04-03 22:03:54 +0200] [82350] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 22:03:54 +0200] [82350] [TRACE] [services.auth_service] AuthService: Login user: user
[2023-04-03 22:03:54 +0200] [82350] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 22:03:54 +0200] [82350] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user'}
[2023-04-03 22:03:54 +0200] [82350] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7ff18edcf3d0>
[2023-04-03 22:03:55 +0200] [82350] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 22:03:55 +0200] [82350] [TRACE] [services.auth_service] AuthService: Create session with user: c40f88ce-72bd-4d46-bc74-c1c17afab5e3
[2023-04-03 22:03:55 +0200] [82350] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 22:03:55 +0200] [82350] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('c40f88ce-72bd-4d46-bc74-c1c17afab5e3') login='user' role='student' access_expire_time=datetime.datetime(2023, 4, 3, 20, 8, 55, 38515) refresh_expire_time=datetime.datetime(2023, 4, 5, 20, 3, 55, 38658) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NTI1MzUsInN1YiI6InVzZXIifQ.140JF6JPLG2tF4lMKB9ayKZ3Ta7gO3_e4bjtUhNMEhU' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MjUwMzUsInN1YiI6InVzZXIifQ.Z-Rt3qyxg0cup-zRZBajBjz-1xzc4mSga7mgbUnTwxQ' blocked=False is_active=True
[2023-04-03 22:03:55 +0200] [82350] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('948c6e6d-fbd9-4ef8-acf1-e37863045c81'), 'user_id': UUID('c40f88ce-72bd-4d46-bc74-c1c17afab5e3'), 'login': 'user', 'role': 'student', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NTI1MzUsInN1YiI6InVzZXIifQ.140JF6JPLG2tF4lMKB9ayKZ3Ta7gO3_e4bjtUhNMEhU', 'access_expire_time': datetime.datetime(2023, 4, 3, 20, 8, 55, 38515), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MjUwMzUsInN1YiI6InVzZXIifQ.Z-Rt3qyxg0cup-zRZBajBjz-1xzc4mSga7mgbUnTwxQ', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 20, 3, 55, 38658), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 20, 3, 55, 40503), 'updated_at': datetime.datetime(2023, 4, 3, 20, 3, 55, 40507)}
[2023-04-03 22:04:02 +0200] [82350] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-03 22:04:02 +0200] [82350] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7ff18edcadf0>
[2023-04-03 22:04:02 +0200] [82350] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 22:04:02 +0200] [82350] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user'}
[2023-04-03 22:04:02 +0200] [82350] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7ff18edcf520>
[2023-04-03 22:04:02 +0200] [82350] [ERROR] [utils.rights_restriction] 
NoneType: None
[2023-04-03 22:21:27 +0200] [82350] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-03 22:21:27 +0200] [82350] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7ff18edca9a0>
[2023-04-03 22:22:18 +0200] [83862] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-03 22:22:18 +0200] [83862] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fd543992880>
[2023-04-03 22:28:18 +0200] [84142] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 22:28:18 +0200] [84142] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='student' login='user' password='$2b$12$0K2y5hihU633YIprNN6rO.tbIhAdOC7tqveyWoNMLE5dNf5YhMDsS' email='user@user' id=None
[2023-04-03 22:28:18 +0200] [84142] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('020be52b-a998-4070-b9b4-766fcb6628d6'), 'login': 'user', 'email': 'user@user', 'password': '$2b$12$0K2y5hihU633YIprNN6rO.tbIhAdOC7tqveyWoNMLE5dNf5YhMDsS', 'role': 'student', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 20, 28, 18, 532616), 'updated_at': datetime.datetime(2023, 4, 3, 20, 28, 18, 532621)}
[2023-04-03 22:28:21 +0200] [84142] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 22:28:21 +0200] [84142] [TRACE] [services.auth_service] AuthService: Login user: user
[2023-04-03 22:28:21 +0200] [84142] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 22:28:21 +0200] [84142] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user'}
[2023-04-03 22:28:21 +0200] [84142] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7ffa7cb2f100>
[2023-04-03 22:28:21 +0200] [84142] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 22:28:21 +0200] [84142] [TRACE] [services.auth_service] AuthService: Create session with user: 020be52b-a998-4070-b9b4-766fcb6628d6
[2023-04-03 22:28:21 +0200] [84142] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 22:28:21 +0200] [84142] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('020be52b-a998-4070-b9b4-766fcb6628d6') login='user' role='student' access_expire_time=datetime.datetime(2023, 4, 3, 20, 33, 21, 825662) refresh_expire_time=datetime.datetime(2023, 4, 5, 20, 28, 21, 825875) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NTQwMDEsInN1YiI6InVzZXIifQ.felqdPVmJFC461j0Hnjn044wrN-Luna3mZ5iDyOPJPA' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MjY1MDEsInN1YiI6InVzZXIifQ.HTTDmJTV-apKHd-UHxeZs6ZcX_agCsK3jYSr9u5-81Q' blocked=False is_active=True
[2023-04-03 22:28:21 +0200] [84142] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('b3d2cbf3-40aa-4c25-bb72-05c74eff7c89'), 'user_id': UUID('020be52b-a998-4070-b9b4-766fcb6628d6'), 'login': 'user', 'role': 'student', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NTQwMDEsInN1YiI6InVzZXIifQ.felqdPVmJFC461j0Hnjn044wrN-Luna3mZ5iDyOPJPA', 'access_expire_time': datetime.datetime(2023, 4, 3, 20, 33, 21, 825662), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MjY1MDEsInN1YiI6InVzZXIifQ.HTTDmJTV-apKHd-UHxeZs6ZcX_agCsK3jYSr9u5-81Q', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 20, 28, 21, 825875), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 20, 28, 21, 829427), 'updated_at': datetime.datetime(2023, 4, 3, 20, 28, 21, 829433)}
[2023-04-03 22:28:25 +0200] [84142] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-03 22:28:25 +0200] [84142] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7ffa7f6ae880>
[2023-04-03 22:28:55 +0200] [84190] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-03 22:28:55 +0200] [84190] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fe79fc2f8e0>
[2023-04-03 22:29:24 +0200] [84216] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 22:29:24 +0200] [84216] [TRACE] [services.auth_service] AuthService: Login user: user
[2023-04-03 22:29:24 +0200] [84216] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 22:29:24 +0200] [84216] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user'}
[2023-04-03 22:29:24 +0200] [84216] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database None
[2023-04-03 22:29:31 +0200] [84216] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 22:29:31 +0200] [84216] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='student' login='user' password='$2b$12$7ZuT1RQogsLcgVvVo.fbsuLgUPjFbhejFZrRbnRtvSkDLwD.vnbby' email='user@user' id=None
[2023-04-03 22:29:31 +0200] [84216] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('b5503ba6-49c5-4ea0-83f5-f693a395cf35'), 'login': 'user', 'email': 'user@user', 'password': '$2b$12$7ZuT1RQogsLcgVvVo.fbsuLgUPjFbhejFZrRbnRtvSkDLwD.vnbby', 'role': 'student', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 20, 29, 31, 677775), 'updated_at': datetime.datetime(2023, 4, 3, 20, 29, 31, 677781)}
[2023-04-03 22:29:33 +0200] [84216] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 22:29:33 +0200] [84216] [TRACE] [services.auth_service] AuthService: Login user: user
[2023-04-03 22:29:33 +0200] [84216] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 22:29:33 +0200] [84216] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user'}
[2023-04-03 22:29:33 +0200] [84216] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f9540149c70>
[2023-04-03 22:29:34 +0200] [84216] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 22:29:34 +0200] [84216] [TRACE] [services.auth_service] AuthService: Create session with user: b5503ba6-49c5-4ea0-83f5-f693a395cf35
[2023-04-03 22:29:34 +0200] [84216] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 22:29:34 +0200] [84216] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('b5503ba6-49c5-4ea0-83f5-f693a395cf35') login='user' role='student' access_expire_time=datetime.datetime(2023, 4, 3, 20, 34, 34, 48348) refresh_expire_time=datetime.datetime(2023, 4, 5, 20, 29, 34, 48506) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NTQwNzQsInN1YiI6InVzZXIifQ.2s5uLujHlvk4GPhuAH_fWtLF9AtXARs2rnN9V-XL9Gw' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MjY1NzQsInN1YiI6InVzZXIifQ.yvJ2XFIm6AlIBeMqyLoPKk77OjIf98DLkEebJwV5E3s' blocked=False is_active=True
[2023-04-03 22:29:34 +0200] [84216] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('2c729eac-7601-4860-b02c-eb179042de14'), 'user_id': UUID('b5503ba6-49c5-4ea0-83f5-f693a395cf35'), 'login': 'user', 'role': 'student', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NTQwNzQsInN1YiI6InVzZXIifQ.2s5uLujHlvk4GPhuAH_fWtLF9AtXARs2rnN9V-XL9Gw', 'access_expire_time': datetime.datetime(2023, 4, 3, 20, 34, 34, 48348), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MjY1NzQsInN1YiI6InVzZXIifQ.yvJ2XFIm6AlIBeMqyLoPKk77OjIf98DLkEebJwV5E3s', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 20, 29, 34, 48506), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 20, 29, 34, 51019), 'updated_at': datetime.datetime(2023, 4, 3, 20, 29, 34, 51023)}
[2023-04-03 22:29:36 +0200] [84216] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-03 22:29:36 +0200] [84216] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f95401f5fa0>
[2023-04-03 22:29:36 +0200] [84216] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 22:29:36 +0200] [84216] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user'}
[2023-04-03 22:29:36 +0200] [84216] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f954015fca0>
[2023-04-03 22:29:36 +0200] [84216] [INFO] [services.student_service] StudentService: Get student by id: 0d22bfff-c1b8-49a3-98e7-59f637d9f4eb
[2023-04-03 22:29:36 +0200] [84216] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by id: 0d22bfff-c1b8-49a3-98e7-59f637d9f4eb
[2023-04-03 22:30:03 +0200] [84216] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-03 22:30:03 +0200] [84216] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f95401070a0>
[2023-04-03 22:30:03 +0200] [84216] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 22:30:03 +0200] [84216] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user'}
[2023-04-03 22:30:03 +0200] [84216] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f9540107fa0>
[2023-04-03 22:30:03 +0200] [84216] [INFO] [services.student_service] StudentService: Get student by id: b5503ba6-49c5-4ea0-83f5-f693a395cf35
[2023-04-03 22:30:03 +0200] [84216] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by id: b5503ba6-49c5-4ea0-83f5-f693a395cf35
[2023-04-03 22:32:06 +0200] [84346] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-03 22:32:06 +0200] [84346] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f1ba579e8b0>
[2023-04-03 22:32:11 +0200] [84346] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-03 22:32:11 +0200] [84346] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='student' login='user' password='$2b$12$pCjZ2Uj9ardWFBSmecgK5evo5PYnxcWOpw1D8JSDIk6/tJUlJpf1e' email='user@user' id=None
[2023-04-03 22:32:11 +0200] [84346] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('6a9be75e-2726-4637-8b25-993d1fc8f6ac'), 'login': 'user', 'email': 'user@user', 'password': '$2b$12$pCjZ2Uj9ardWFBSmecgK5evo5PYnxcWOpw1D8JSDIk6/tJUlJpf1e', 'role': 'student', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 20, 32, 11, 555093), 'updated_at': datetime.datetime(2023, 4, 3, 20, 32, 11, 555097)}
[2023-04-03 22:32:13 +0200] [84346] [INFO] [services.auth_service] AuthService: Login user
[2023-04-03 22:32:13 +0200] [84346] [TRACE] [services.auth_service] AuthService: Login user: user
[2023-04-03 22:32:13 +0200] [84346] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 22:32:13 +0200] [84346] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user'}
[2023-04-03 22:32:13 +0200] [84346] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f1ba2c1c0d0>
[2023-04-03 22:32:14 +0200] [84346] [INFO] [services.auth_service] AuthService: Create session
[2023-04-03 22:32:14 +0200] [84346] [TRACE] [services.auth_service] AuthService: Create session with user: 6a9be75e-2726-4637-8b25-993d1fc8f6ac
[2023-04-03 22:32:14 +0200] [84346] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-03 22:32:14 +0200] [84346] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('6a9be75e-2726-4637-8b25-993d1fc8f6ac') login='user' role='student' access_expire_time=datetime.datetime(2023, 4, 3, 20, 37, 14, 44486) refresh_expire_time=datetime.datetime(2023, 4, 5, 20, 32, 14, 44651) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NTQyMzQsInN1YiI6InVzZXIifQ.L09YpfQZA65divk1aSqDR7QvunzdVlLG5PLiifpE87s' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MjY3MzQsInN1YiI6InVzZXIifQ.4cuFyJHb2dEyp8svcXDPb0w6-3zo2lrqkeV101lT118' blocked=False is_active=True
[2023-04-03 22:32:14 +0200] [84346] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('1c696ef7-7c7c-44b6-ac52-d8922deab590'), 'user_id': UUID('6a9be75e-2726-4637-8b25-993d1fc8f6ac'), 'login': 'user', 'role': 'student', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA1NTQyMzQsInN1YiI6InVzZXIifQ.L09YpfQZA65divk1aSqDR7QvunzdVlLG5PLiifpE87s', 'access_expire_time': datetime.datetime(2023, 4, 3, 20, 37, 14, 44486), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MjY3MzQsInN1YiI6InVzZXIifQ.4cuFyJHb2dEyp8svcXDPb0w6-3zo2lrqkeV101lT118', 'refresh_expire_time': datetime.datetime(2023, 4, 5, 20, 32, 14, 44651), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 3, 20, 32, 14, 47485), 'updated_at': datetime.datetime(2023, 4, 3, 20, 32, 14, 47490)}
[2023-04-03 22:32:16 +0200] [84346] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-03 22:32:16 +0200] [84346] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f1ba588de20>
[2023-04-03 22:32:24 +0200] [84346] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-03 22:32:24 +0200] [84346] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f1ba2c1c520>
[2023-04-03 22:33:40 +0200] [84346] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-03 22:33:40 +0200] [84346] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f1ba2c3c370>
[2023-04-03 22:33:40 +0200] [84346] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 22:33:40 +0200] [84346] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user'}
[2023-04-03 22:33:40 +0200] [84346] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f1ba2c41280>
[2023-04-03 22:33:40 +0200] [84346] [INFO] [services.student_service] StudentService: Get all students with given parameters
[2023-04-03 22:33:40 +0200] [84346] [TRACE] [services.student_service] StudentService: Get all student with parameters: {'academic_group': <AcademicGroupsEnum.FIRST_3: '301'>}
[2023-04-03 22:33:40 +0200] [84346] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-03 22:33:40 +0200] [84346] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'academic_group': <AcademicGroupsEnum.FIRST_3: '301'>}
[2023-04-03 22:33:41 +0200] [84346] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-03 22:33:44 +0200] [84346] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-03 22:33:44 +0200] [84346] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f1ba2c3c1c0>
[2023-04-03 22:33:44 +0200] [84346] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 22:33:44 +0200] [84346] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user'}
[2023-04-03 22:33:44 +0200] [84346] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f1ba2c41850>
[2023-04-03 22:33:44 +0200] [84346] [INFO] [services.student_service] StudentService: Get all students with given parameters
[2023-04-03 22:33:44 +0200] [84346] [TRACE] [services.student_service] StudentService: Get all student with parameters: {'academic_year': <AcademicYearsEnum.THIRD: '3'>}
[2023-04-03 22:33:44 +0200] [84346] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-03 22:33:44 +0200] [84346] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'academic_year': <AcademicYearsEnum.THIRD: '3'>}
[2023-04-03 22:33:44 +0200] [84346] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-03 22:33:50 +0200] [84346] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-03 22:33:50 +0200] [84346] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f1ba2c3c550>
[2023-04-03 22:33:50 +0200] [84346] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-03 22:33:50 +0200] [84346] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user'}
[2023-04-03 22:33:50 +0200] [84346] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f1ba2bdb2b0>
[2023-04-03 22:33:50 +0200] [84346] [ERROR] [utils.rights_restriction] 
NoneType: None
[2023-04-04 13:07:37 +0200] [4618] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 13:07:37 +0200] [4618] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$ezVm.L6Hyrd0w7U7oKT.POUdabS1rCKlZ2jlXTaY0sTrc9PQHRGaq' email='user@user' id=None
[2023-04-04 13:07:37 +0200] [4618] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('31c30703-e596-4700-9c37-94a07f3699e0'), 'login': 'admin', 'email': 'user@user', 'password': '$2b$12$ezVm.L6Hyrd0w7U7oKT.POUdabS1rCKlZ2jlXTaY0sTrc9PQHRGaq', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 11, 7, 37, 530032), 'updated_at': datetime.datetime(2023, 4, 4, 11, 7, 37, 530037)}
[2023-04-04 13:07:43 +0200] [4618] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 13:07:43 +0200] [4618] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 13:07:43 +0200] [4618] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 13:07:43 +0200] [4618] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 13:07:43 +0200] [4618] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f0064ffa130>
[2023-04-04 13:07:44 +0200] [4618] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 13:07:44 +0200] [4618] [TRACE] [services.auth_service] AuthService: Create session with user: 31c30703-e596-4700-9c37-94a07f3699e0
[2023-04-04 13:07:44 +0200] [4618] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 13:07:44 +0200] [4618] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('31c30703-e596-4700-9c37-94a07f3699e0') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 11, 12, 44, 87414) refresh_expire_time=datetime.datetime(2023, 4, 6, 11, 7, 44, 87562) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MDY3NjQsInN1YiI6ImFkbWluIn0.yImSMla8-0EmT6vkmmJOswddLo1g3X9pAqbugSJbOHI' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3NzkyNjQsInN1YiI6ImFkbWluIn0.QDWDPpRugKyPj27KKVXJ88hN8HKuzSrYrPAaZlgIijo' blocked=False is_active=True
[2023-04-04 13:07:44 +0200] [4618] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('7e2d5645-517b-4f06-8f0d-622ca1481673'), 'user_id': UUID('31c30703-e596-4700-9c37-94a07f3699e0'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MDY3NjQsInN1YiI6ImFkbWluIn0.yImSMla8-0EmT6vkmmJOswddLo1g3X9pAqbugSJbOHI', 'access_expire_time': datetime.datetime(2023, 4, 4, 11, 12, 44, 87414), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3NzkyNjQsInN1YiI6ImFkbWluIn0.QDWDPpRugKyPj27KKVXJ88hN8HKuzSrYrPAaZlgIijo', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 11, 7, 44, 87562), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 11, 7, 44, 89958), 'updated_at': datetime.datetime(2023, 4, 4, 11, 7, 44, 89961)}
[2023-04-04 13:07:51 +0200] [4618] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 13:07:51 +0200] [4618] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f006ade91c0>
[2023-04-04 13:07:51 +0200] [4618] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 13:07:51 +0200] [4618] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 13:07:51 +0200] [4618] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f0065018550>
[2023-04-04 13:07:51 +0200] [4618] [INFO] [services.student_service] StudentService: Create students
[2023-04-04 13:07:51 +0200] [4618] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_5', second_name=None, last_name='student_5', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-04 13:07:51 +0200] [4618] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_5' second_name=None last_name='student_5' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-04 13:07:51 +0200] [4618] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-04 13:07:51 +0200] [4618] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_5', 'second_name': None, 'last_name': 'student_5', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-04 13:07:52 +0200] [4618] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-04 13:07:52 +0200] [4618] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_5', second_name=None, last_name='student_5', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='X5iXhFX_5aK0Pg')]
[2023-04-04 13:07:52 +0200] [4618] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-04 13:07:52 +0200] [4618] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_5', second_name=None, last_name='student_5', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='X5iXhFX_5aK0Pg')]
[2023-04-04 13:07:52 +0200] [4618] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('10899c7b-223b-4dc2-942d-3febde4043a3'), 'registration_token': 'X5iXhFX_5aK0Pg', 'registered_user': False, 'first_name': 'student_5', 'second_name': None, 'last_name': 'student_5', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 4, 11, 7, 52, 552855), 'updated_at': datetime.datetime(2023, 4, 4, 11, 7, 52, 552859), 'deleted_at': None}]
[2023-04-04 13:07:52 +0200] [4618] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7f0067b7a580>]
[2023-04-04 13:08:36 +0200] [4618] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 13:08:36 +0200] [4618] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f00650a4c70>
[2023-04-04 13:08:36 +0200] [4618] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 13:08:36 +0200] [4618] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 13:08:36 +0200] [4618] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f0064fc8d30>
[2023-04-04 13:08:36 +0200] [4618] [INFO] [services.student_service] StudentService: Get student by id: 10899c7b-223b-4dc2-942d-3febde4043a3
[2023-04-04 13:08:36 +0200] [4618] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by id: 10899c7b-223b-4dc2-942d-3febde4043a3
[2023-04-04 13:08:36 +0200] [4618] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database {'id': UUID('10899c7b-223b-4dc2-942d-3febde4043a3'), 'registration_token': 'X5iXhFX_5aK0Pg', 'registered_user': False, 'first_name': 'student_5', 'second_name': None, 'last_name': 'student_5', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 4, 11, 7, 52, 552855), 'updated_at': datetime.datetime(2023, 4, 4, 11, 7, 52, 552859), 'deleted_at': None}
[2023-04-04 13:08:47 +0200] [4618] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 13:08:47 +0200] [4618] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f0067c27f40>
[2023-04-04 13:08:47 +0200] [4618] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 13:08:47 +0200] [4618] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 13:08:47 +0200] [4618] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f0064fd49a0>
[2023-04-04 13:08:47 +0200] [4618] [INFO] [services.student_service] StudentService: Get all students with given parameters
[2023-04-04 13:08:47 +0200] [4618] [TRACE] [services.student_service] StudentService: Get all student with parameters: {'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-04 13:08:47 +0200] [4618] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-04 13:08:47 +0200] [4618] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-04 13:08:47 +0200] [4618] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database [{'id': UUID('10899c7b-223b-4dc2-942d-3febde4043a3'), 'registration_token': 'X5iXhFX_5aK0Pg', 'registered_user': False, 'first_name': 'student_5', 'second_name': None, 'last_name': 'student_5', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 4, 11, 7, 52, 552855), 'updated_at': datetime.datetime(2023, 4, 4, 11, 7, 52, 552859), 'deleted_at': None}]
[2023-04-04 13:14:58 +0200] [7377] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 13:14:58 +0200] [7377] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$2aLdCXrCGrAGNu4s8rd1t.1VslniocShZKIIOqVQF3fbI3bP9/Xc2' email='user@user' id=None
[2023-04-04 13:14:58 +0200] [7377] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('ff44a74d-f075-4074-b409-52d5e684c02e'), 'login': 'admin', 'email': 'user@user', 'password': '$2b$12$2aLdCXrCGrAGNu4s8rd1t.1VslniocShZKIIOqVQF3fbI3bP9/Xc2', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 11, 14, 58, 622708), 'updated_at': datetime.datetime(2023, 4, 4, 11, 14, 58, 622717)}
[2023-04-04 13:15:02 +0200] [7377] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 13:15:02 +0200] [7377] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 13:15:02 +0200] [7377] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 13:15:02 +0200] [7377] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 13:15:02 +0200] [7377] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fb94514deb0>
[2023-04-04 13:15:02 +0200] [7377] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 13:15:02 +0200] [7377] [TRACE] [services.auth_service] AuthService: Create session with user: ff44a74d-f075-4074-b409-52d5e684c02e
[2023-04-04 13:15:02 +0200] [7377] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 13:15:02 +0200] [7377] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('ff44a74d-f075-4074-b409-52d5e684c02e') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 11, 20, 2, 775907) refresh_expire_time=datetime.datetime(2023, 4, 6, 11, 15, 2, 776053) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MDcyMDIsInN1YiI6ImFkbWluIn0.QgwigBnfn0uM18e6afssS6y8fI37w-nZmUDkrzZb_30' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3Nzk3MDIsInN1YiI6ImFkbWluIn0.sn5hbzlL1riE8pglo6yuAsU92T2HO-0spg1g-xOCR0o' blocked=False is_active=True
[2023-04-04 13:15:02 +0200] [7377] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('81a917fa-dd52-455c-9bd1-a4468eaa9bc0'), 'user_id': UUID('ff44a74d-f075-4074-b409-52d5e684c02e'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MDcyMDIsInN1YiI6ImFkbWluIn0.QgwigBnfn0uM18e6afssS6y8fI37w-nZmUDkrzZb_30', 'access_expire_time': datetime.datetime(2023, 4, 4, 11, 20, 2, 775907), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3Nzk3MDIsInN1YiI6ImFkbWluIn0.sn5hbzlL1riE8pglo6yuAsU92T2HO-0spg1g-xOCR0o', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 11, 15, 2, 776053), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 11, 15, 2, 778420), 'updated_at': datetime.datetime(2023, 4, 4, 11, 15, 2, 778424)}
[2023-04-04 13:15:05 +0200] [7377] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 13:15:05 +0200] [7377] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fb947c700d0>
[2023-04-04 13:15:05 +0200] [7377] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 13:15:05 +0200] [7377] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 13:15:05 +0200] [7377] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fb94510e2b0>
[2023-04-04 13:15:05 +0200] [7377] [INFO] [services.student_service] StudentService: Create students
[2023-04-04 13:15:05 +0200] [7377] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_5', second_name=None, last_name='student_5', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-04 13:15:05 +0200] [7377] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_5' second_name=None last_name='student_5' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-04 13:15:05 +0200] [7377] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-04 13:15:05 +0200] [7377] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_5', 'second_name': None, 'last_name': 'student_5', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-04 13:15:07 +0200] [7377] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-04 13:15:07 +0200] [7377] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_5', second_name=None, last_name='student_5', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='8gH247HkcW4aBw')]
[2023-04-04 13:15:07 +0200] [7377] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-04 13:15:07 +0200] [7377] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_5', second_name=None, last_name='student_5', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='8gH247HkcW4aBw')]
[2023-04-04 13:15:07 +0200] [7377] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('b0611739-34ca-4294-b5ff-448b3981c9fe'), 'registration_token': '8gH247HkcW4aBw', 'registered_user': False, 'first_name': 'student_5', 'second_name': None, 'last_name': 'student_5', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 4, 11, 15, 7, 240919), 'updated_at': datetime.datetime(2023, 4, 4, 11, 15, 7, 240923), 'deleted_at': None}]
[2023-04-04 13:15:07 +0200] [7377] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7fb947c646d0>]
[2023-04-04 13:15:22 +0200] [7377] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 13:15:22 +0200] [7377] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fb94512b0d0>
[2023-04-04 13:15:22 +0200] [7377] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 13:15:22 +0200] [7377] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 13:15:22 +0200] [7377] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fb9450bfa90>
[2023-04-04 13:15:22 +0200] [7377] [INFO] [services.student_service] StudentService: Get student by id: b0611739-34ca-4294-b5ff-448b3981c9fe
[2023-04-04 13:15:22 +0200] [7377] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by id: b0611739-34ca-4294-b5ff-448b3981c9fe
[2023-04-04 13:15:22 +0200] [7377] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database {'id': UUID('b0611739-34ca-4294-b5ff-448b3981c9fe'), 'registration_token': '8gH247HkcW4aBw', 'registered_user': False, 'first_name': 'student_5', 'second_name': None, 'last_name': 'student_5', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 4, 11, 15, 7, 240919), 'updated_at': datetime.datetime(2023, 4, 4, 11, 15, 7, 240923), 'deleted_at': None}
[2023-04-04 13:15:27 +0200] [7377] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 13:15:27 +0200] [7377] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fb94aedf1c0>
[2023-04-04 13:15:27 +0200] [7377] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 13:15:27 +0200] [7377] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 13:15:27 +0200] [7377] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fb9450ce700>
[2023-04-04 13:15:27 +0200] [7377] [INFO] [services.student_service] StudentService: Get all students with given parameters
[2023-04-04 13:15:27 +0200] [7377] [TRACE] [services.student_service] StudentService: Get all student with parameters: {'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-04 13:15:27 +0200] [7377] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-04 13:15:27 +0200] [7377] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-04 13:15:27 +0200] [7377] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database [<db.models.StudentModel.StudentModel object at 0x7fb9450cee50>]
[2023-04-04 13:15:36 +0200] [7377] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 13:15:36 +0200] [7377] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fb9450f9e50>
[2023-04-04 13:15:36 +0200] [7377] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 13:15:36 +0200] [7377] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 13:15:36 +0200] [7377] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fb9450cef70>
[2023-04-04 13:15:36 +0200] [7377] [INFO] [services.student_service] StudentService: Get all students with given parameters
[2023-04-04 13:15:36 +0200] [7377] [TRACE] [services.student_service] StudentService: Get all student with parameters: {'academic_year': <AcademicYearsEnum.SECOND: '2'>}
[2023-04-04 13:15:36 +0200] [7377] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-04 13:15:36 +0200] [7377] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'academic_year': <AcademicYearsEnum.SECOND: '2'>}
[2023-04-04 13:15:36 +0200] [7377] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database [<db.models.StudentModel.StudentModel object at 0x7fb9450dc640>]
[2023-04-04 13:16:15 +0200] [7377] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 13:16:15 +0200] [7377] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fb947bd7880>
[2023-04-04 13:16:15 +0200] [7377] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 13:16:15 +0200] [7377] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 13:16:15 +0200] [7377] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fb9450dc760>
[2023-04-04 13:16:15 +0200] [7377] [INFO] [services.student_service] StudentService: Get all students with given parameters
[2023-04-04 13:16:15 +0200] [7377] [TRACE] [services.student_service] StudentService: Get all student with parameters: {'academic_year': <AcademicYearsEnum.THIRD: '3'>}
[2023-04-04 13:16:15 +0200] [7377] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-04 13:16:15 +0200] [7377] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'academic_year': <AcademicYearsEnum.THIRD: '3'>}
[2023-04-04 13:16:15 +0200] [7377] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-04 13:16:28 +0200] [7377] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 13:16:28 +0200] [7377] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fb947b558b0>
[2023-04-04 13:16:28 +0200] [7377] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 13:16:28 +0200] [7377] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 13:16:28 +0200] [7377] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fb9450dc880>
[2023-04-04 13:16:28 +0200] [7377] [INFO] [services.student_service] StudentService: Update student
[2023-04-04 13:16:28 +0200] [7377] [TRACE] [services.student_service] StudentService: Patch student with id: b0611739-34ca-4294-b5ff-448b3981c9fe - with following data: academic_year=<AcademicYearsEnum.THIRD: '3'> academic_group=<AcademicGroupsEnum.FIRST_3: '301'>
[2023-04-04 13:16:28 +0200] [7377] [INFO] [db.dao.base_dao] StudentModel DAO: Update db entry
[2023-04-04 13:16:28 +0200] [7377] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for update: item_id: b0611739-34ca-4294-b5ff-448b3981c9fe, patch_data: academic_year=<AcademicYearsEnum.THIRD: '3'> academic_group=<AcademicGroupsEnum.FIRST_3: '301'>
[2023-04-04 13:16:28 +0200] [7377] [DEBUG] [db.dao.base_dao] StudentModel DAO: Received updated entry from the database {'id': UUID('b0611739-34ca-4294-b5ff-448b3981c9fe'), 'registration_token': '8gH247HkcW4aBw', 'registered_user': False, 'first_name': 'student_5', 'second_name': None, 'last_name': 'student_5', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.FIRST_3: '301'>, 'created_at': datetime.datetime(2023, 4, 4, 11, 15, 7, 240919), 'updated_at': datetime.datetime(2023, 4, 4, 14, 16, 28, 624903), 'deleted_at': None}
[2023-04-04 13:16:38 +0200] [7377] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 13:16:38 +0200] [7377] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fb94510e460>
[2023-04-04 13:16:38 +0200] [7377] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 13:16:38 +0200] [7377] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 13:16:38 +0200] [7377] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fb9450dccd0>
[2023-04-04 13:16:38 +0200] [7377] [INFO] [services.student_service] StudentService: Delete student (mark student as deleted)
[2023-04-04 13:16:38 +0200] [7377] [TRACE] [services.student_service] StudentService: Patch student with id: b0611739-34ca-4294-b5ff-448b3981c9fe - with following data: deleted_at=datetime.datetime(2023, 4, 4, 11, 16, 38, 818336)
[2023-04-04 13:16:38 +0200] [7377] [INFO] [db.dao.base_dao] StudentModel DAO: Update db entry
[2023-04-04 13:16:38 +0200] [7377] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for update: item_id: b0611739-34ca-4294-b5ff-448b3981c9fe, patch_data: deleted_at=datetime.datetime(2023, 4, 4, 11, 16, 38, 818336)
[2023-04-04 13:16:38 +0200] [7377] [DEBUG] [db.dao.base_dao] StudentModel DAO: Received updated entry from the database {'id': UUID('b0611739-34ca-4294-b5ff-448b3981c9fe'), 'registration_token': '8gH247HkcW4aBw', 'registered_user': False, 'first_name': 'student_5', 'second_name': None, 'last_name': 'student_5', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.FIRST_3: '301'>, 'created_at': datetime.datetime(2023, 4, 4, 11, 15, 7, 240919), 'updated_at': datetime.datetime(2023, 4, 4, 14, 16, 38, 820088), 'deleted_at': datetime.datetime(2023, 4, 4, 11, 16, 38, 818336)}
[2023-04-04 13:16:44 +0200] [7377] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 13:16:44 +0200] [7377] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fb9450b6a90>
[2023-04-04 13:16:44 +0200] [7377] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 13:16:44 +0200] [7377] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 13:16:44 +0200] [7377] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fb9450696d0>
[2023-04-04 13:16:44 +0200] [7377] [INFO] [services.student_service] StudentService: Get student by id: b0611739-34ca-4294-b5ff-448b3981c9fe
[2023-04-04 13:16:44 +0200] [7377] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by id: b0611739-34ca-4294-b5ff-448b3981c9fe
[2023-04-04 13:16:44 +0200] [7377] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database {'id': UUID('b0611739-34ca-4294-b5ff-448b3981c9fe'), 'registration_token': '8gH247HkcW4aBw', 'registered_user': False, 'first_name': 'student_5', 'second_name': None, 'last_name': 'student_5', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.THIRD: '3'>, 'academic_group': <AcademicGroupsEnum.FIRST_3: '301'>, 'created_at': datetime.datetime(2023, 4, 4, 11, 15, 7, 240919), 'updated_at': datetime.datetime(2023, 4, 4, 14, 16, 38, 820088), 'deleted_at': datetime.datetime(2023, 4, 4, 11, 16, 38, 818336)}
[2023-04-04 13:16:50 +0200] [7377] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 13:16:50 +0200] [7377] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fb9450b6a90>
[2023-04-04 13:16:50 +0200] [7377] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 13:16:50 +0200] [7377] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 13:16:50 +0200] [7377] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fb945069670>
[2023-04-04 13:16:50 +0200] [7377] [INFO] [services.student_service] StudentService: Get all students with given parameters
[2023-04-04 13:16:50 +0200] [7377] [TRACE] [services.student_service] StudentService: Get all student with parameters: {'academic_year': <AcademicYearsEnum.THIRD: '3'>}
[2023-04-04 13:16:50 +0200] [7377] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-04 13:16:50 +0200] [7377] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'academic_year': <AcademicYearsEnum.THIRD: '3'>}
[2023-04-04 13:16:50 +0200] [7377] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database [<db.models.StudentModel.StudentModel object at 0x7fb945069610>]
[2023-04-04 13:17:01 +0200] [7377] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 13:17:01 +0200] [7377] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fb9450b6a90>
[2023-04-04 13:17:01 +0200] [7377] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 13:17:01 +0200] [7377] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 13:17:01 +0200] [7377] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fb9450694f0>
[2023-04-04 13:17:01 +0200] [7377] [INFO] [services.student_service] StudentService: Get all students with given parameters
[2023-04-04 13:17:01 +0200] [7377] [TRACE] [services.student_service] StudentService: Get all student with parameters: {'academic_group': <AcademicGroupsEnum.FIRST_3: '301'>}
[2023-04-04 13:17:01 +0200] [7377] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-04 13:17:01 +0200] [7377] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'academic_group': <AcademicGroupsEnum.FIRST_3: '301'>}
[2023-04-04 13:17:01 +0200] [7377] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database [<db.models.StudentModel.StudentModel object at 0x7fb9450696d0>]
[2023-04-04 14:50:21 +0200] [11586] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 14:50:21 +0200] [11586] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$Md4Na0Sbl62xam66KYlTcuxdPxKtfY4Dd.VH8qrTenvNOpqlMyzPm' email='user@user' id=None
[2023-04-04 14:50:21 +0200] [11586] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('3861c093-e4bc-4f46-8534-1b9065ce0b06'), 'login': 'admin', 'email': 'user@user', 'password': '$2b$12$Md4Na0Sbl62xam66KYlTcuxdPxKtfY4Dd.VH8qrTenvNOpqlMyzPm', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 12, 50, 21, 880327), 'updated_at': datetime.datetime(2023, 4, 4, 12, 50, 21, 880332)}
[2023-04-04 14:50:25 +0200] [11586] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 14:50:25 +0200] [11586] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 14:50:25 +0200] [11586] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 14:50:25 +0200] [11586] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 14:50:25 +0200] [11586] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7eff28c378e0>
[2023-04-04 14:50:26 +0200] [11586] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 14:50:26 +0200] [11586] [TRACE] [services.auth_service] AuthService: Create session with user: 3861c093-e4bc-4f46-8534-1b9065ce0b06
[2023-04-04 14:50:26 +0200] [11586] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 14:50:26 +0200] [11586] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('3861c093-e4bc-4f46-8534-1b9065ce0b06') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 12, 55, 26, 26509) refresh_expire_time=datetime.datetime(2023, 4, 6, 12, 50, 26, 26664) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTI5MjYsInN1YiI6ImFkbWluIn0.ZoCTER-GTzLJepq-15QzT_DOEo5_tR57TOcNznPIUT8' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODU0MjYsInN1YiI6ImFkbWluIn0.DFuqsyt6t6LqnfCiM2lZkjYB5r6HQxSlYa9UuwfCeH4' blocked=False is_active=True
[2023-04-04 14:50:26 +0200] [11586] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('86161f2b-62d9-4d35-9ac4-639f4ae4ffba'), 'user_id': UUID('3861c093-e4bc-4f46-8534-1b9065ce0b06'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTI5MjYsInN1YiI6ImFkbWluIn0.ZoCTER-GTzLJepq-15QzT_DOEo5_tR57TOcNznPIUT8', 'access_expire_time': datetime.datetime(2023, 4, 4, 12, 55, 26, 26509), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODU0MjYsInN1YiI6ImFkbWluIn0.DFuqsyt6t6LqnfCiM2lZkjYB5r6HQxSlYa9UuwfCeH4', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 12, 50, 26, 26664), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 12, 50, 26, 29182), 'updated_at': datetime.datetime(2023, 4, 4, 12, 50, 26, 29185)}
[2023-04-04 14:50:29 +0200] [11586] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 14:50:29 +0200] [11586] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7eff2b79b940>
[2023-04-04 14:50:29 +0200] [11586] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 14:50:29 +0200] [11586] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 14:50:29 +0200] [11586] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7eff28c59190>
[2023-04-04 14:50:29 +0200] [11586] [INFO] [services.student_service] StudentService: Create students
[2023-04-04 14:50:29 +0200] [11586] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_5', second_name=None, last_name='student_5', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-04 14:50:29 +0200] [11586] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_5' second_name=None last_name='student_5' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-04 14:50:29 +0200] [11586] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-04 14:50:29 +0200] [11586] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_5', 'second_name': None, 'last_name': 'student_5', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-04 14:50:30 +0200] [11586] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-04 14:50:30 +0200] [11586] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_5', second_name=None, last_name='student_5', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='wB4MCR06VBMEGw')]
[2023-04-04 14:50:30 +0200] [11586] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-04 14:50:30 +0200] [11586] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_5', second_name=None, last_name='student_5', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='wB4MCR06VBMEGw')]
[2023-04-04 14:50:30 +0200] [11586] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('7f79e80c-54db-42ad-8813-fc456c42b6a6'), 'registration_token': 'wB4MCR06VBMEGw', 'registered_user': False, 'first_name': 'student_5', 'second_name': None, 'last_name': 'student_5', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 4, 12, 50, 30, 752601), 'updated_at': datetime.datetime(2023, 4, 4, 12, 50, 30, 752606), 'deleted_at': None}]
[2023-04-04 14:50:30 +0200] [11586] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7eff2b7c2e80>]
[2023-04-04 14:50:49 +0200] [11586] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 14:50:49 +0200] [11586] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='student' login='user' password='$2b$12$24FIMFh7Y645igqZ9aDvFux8S0ZeXzarSY36q87bQy0ITxngZux5K' email='userrrr@user' id=None
[2023-04-04 14:50:49 +0200] [11586] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('722669e1-7bfc-4425-bcba-4e817b4c8126'), 'login': 'user', 'email': 'userrrr@user', 'password': '$2b$12$24FIMFh7Y645igqZ9aDvFux8S0ZeXzarSY36q87bQy0ITxngZux5K', 'role': 'student', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 12, 50, 49, 375952), 'updated_at': datetime.datetime(2023, 4, 4, 12, 50, 49, 375956)}
[2023-04-04 14:50:55 +0200] [11586] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 14:50:55 +0200] [11586] [TRACE] [services.auth_service] AuthService: Login user: user
[2023-04-04 14:50:55 +0200] [11586] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 14:50:55 +0200] [11586] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user'}
[2023-04-04 14:50:55 +0200] [11586] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7eff28c094c0>
[2023-04-04 14:50:55 +0200] [11586] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 14:50:55 +0200] [11586] [TRACE] [services.auth_service] AuthService: Create session with user: 722669e1-7bfc-4425-bcba-4e817b4c8126
[2023-04-04 14:50:55 +0200] [11586] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 14:50:55 +0200] [11586] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('722669e1-7bfc-4425-bcba-4e817b4c8126') login='user' role='student' access_expire_time=datetime.datetime(2023, 4, 4, 12, 55, 55, 357994) refresh_expire_time=datetime.datetime(2023, 4, 6, 12, 50, 55, 358147) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTI5NTUsInN1YiI6InVzZXIifQ.Hzp9mzdpnT07lmA9-S8_C9uLX-TcgdkUP-UxYWAFprw' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODU0NTUsInN1YiI6InVzZXIifQ.AVC1oCHVISbPk3VrhKAX350F5DMrfCaR3uT1G0kj1Zc' blocked=False is_active=True
[2023-04-04 14:50:55 +0200] [11586] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('7225995b-8711-48dd-b4c4-1a71658f4c98'), 'user_id': UUID('722669e1-7bfc-4425-bcba-4e817b4c8126'), 'login': 'user', 'role': 'student', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTI5NTUsInN1YiI6InVzZXIifQ.Hzp9mzdpnT07lmA9-S8_C9uLX-TcgdkUP-UxYWAFprw', 'access_expire_time': datetime.datetime(2023, 4, 4, 12, 55, 55, 357994), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODU0NTUsInN1YiI6InVzZXIifQ.AVC1oCHVISbPk3VrhKAX350F5DMrfCaR3uT1G0kj1Zc', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 12, 50, 55, 358147), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 12, 50, 55, 360142), 'updated_at': datetime.datetime(2023, 4, 4, 12, 50, 55, 360146)}
[2023-04-04 14:51:03 +0200] [11586] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 14:51:03 +0200] [11586] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7eff2b79bdf0>
[2023-04-04 14:51:03 +0200] [11586] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 14:51:03 +0200] [11586] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'user'}
[2023-04-04 14:51:03 +0200] [11586] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7eff28c09b80>
[2023-04-04 14:51:03 +0200] [11586] [ERROR] [utils.rights_restriction] 
NoneType: None
[2023-04-04 15:00:10 +0200] [12129] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 15:00:10 +0200] [12129] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$U.hvKOklXg2rSMBxbEl4TOhG/U3MCDu5yCDGByB4hiCsvdxGQXXIW' email='userrrr@user' id=None
[2023-04-04 15:00:10 +0200] [12129] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('f7c394f9-b37c-4fc5-942f-0e424d0e5696'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$U.hvKOklXg2rSMBxbEl4TOhG/U3MCDu5yCDGByB4hiCsvdxGQXXIW', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 13, 0, 10, 271409), 'updated_at': datetime.datetime(2023, 4, 4, 13, 0, 10, 271415)}
[2023-04-04 15:00:12 +0200] [12129] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 15:00:12 +0200] [12129] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 15:00:12 +0200] [12129] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:00:12 +0200] [12129] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:00:12 +0200] [12129] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f800129aa60>
[2023-04-04 15:00:13 +0200] [12129] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 15:00:13 +0200] [12129] [TRACE] [services.auth_service] AuthService: Create session with user: f7c394f9-b37c-4fc5-942f-0e424d0e5696
[2023-04-04 15:00:13 +0200] [12129] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 15:00:13 +0200] [12129] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('f7c394f9-b37c-4fc5-942f-0e424d0e5696') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 13, 5, 13, 109481) refresh_expire_time=datetime.datetime(2023, 4, 6, 13, 0, 13, 109634) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTM1MTMsInN1YiI6ImFkbWluIn0.v5n8NXwa99qtaWNXGBSmmMx4PTC3GLBTIu6vYXwCrlI' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODYwMTMsInN1YiI6ImFkbWluIn0.PlbmTA8l5JNkSCAIGBortl9tMRnCo0dY7v-51FLVpj0' blocked=False is_active=True
[2023-04-04 15:00:13 +0200] [12129] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('a54edb52-eb97-47e9-acea-af6c48092b19'), 'user_id': UUID('f7c394f9-b37c-4fc5-942f-0e424d0e5696'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTM1MTMsInN1YiI6ImFkbWluIn0.v5n8NXwa99qtaWNXGBSmmMx4PTC3GLBTIu6vYXwCrlI', 'access_expire_time': datetime.datetime(2023, 4, 4, 13, 5, 13, 109481), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODYwMTMsInN1YiI6ImFkbWluIn0.PlbmTA8l5JNkSCAIGBortl9tMRnCo0dY7v-51FLVpj0', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 13, 0, 13, 109634), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 13, 0, 13, 112390), 'updated_at': datetime.datetime(2023, 4, 4, 13, 0, 13, 112395)}
[2023-04-04 15:01:18 +0200] [12129] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:01:18 +0200] [12129] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f8003e19520>
[2023-04-04 15:01:18 +0200] [12129] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:01:18 +0200] [12129] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:01:18 +0200] [12129] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f80012bd250>
[2023-04-04 15:01:18 +0200] [12129] [INFO] [services.student_service] StudentService: Create students
[2023-04-04 15:01:18 +0200] [12129] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-04 15:01:18 +0200] [12129] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_1' second_name=None last_name='student_1' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-04 15:01:18 +0200] [12129] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-04 15:01:18 +0200] [12129] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-04 15:01:19 +0200] [12129] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-04 15:01:19 +0200] [12129] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='d8gwY6y1_xWu_A')]
[2023-04-04 15:01:19 +0200] [12129] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-04 15:01:19 +0200] [12129] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='d8gwY6y1_xWu_A')]
[2023-04-04 15:01:19 +0200] [12129] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('e1ce5112-7318-4b43-ad1c-8a673f73a451'), 'registration_token': 'd8gwY6y1_xWu_A', 'registered_user': False, 'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 4, 13, 1, 19, 340513), 'updated_at': datetime.datetime(2023, 4, 4, 13, 1, 19, 340516), 'deleted_at': None}]
[2023-04-04 15:01:19 +0200] [12129] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7f8003e19a30>]
[2023-04-04 15:01:43 +0200] [12129] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:01:43 +0200] [12129] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f8003e19520>
[2023-04-04 15:01:43 +0200] [12129] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:01:43 +0200] [12129] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:01:43 +0200] [12129] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f800126eb50>
[2023-04-04 15:01:43 +0200] [12129] [INFO] [services.teacher_service] TeacherService: Create teachers
[2023-04-04 15:01:43 +0200] [12129] [TRACE] [services.teacher_service] TeacherService: Register teachers with passed data [TeacherCreateDTO(first_name='string', second_name='string', last_name='string', birth_date='28-02-2002')]
[2023-04-04 15:01:43 +0200] [12129] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string' second_name='string' last_name='string' birth_date='28-02-2002'
[2023-04-04 15:02:20 +0200] [12285] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 15:02:20 +0200] [12285] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$gmbMOGCNUyuF20NkyPHF8.upVBG6Zrn12m9pqBTjNKE0ugz3SA4n6' email='userrrr@user' id=None
[2023-04-04 15:02:20 +0200] [12285] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('519c1dc9-b224-49e0-8aad-a96e085f2c04'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$gmbMOGCNUyuF20NkyPHF8.upVBG6Zrn12m9pqBTjNKE0ugz3SA4n6', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 13, 2, 20, 761772), 'updated_at': datetime.datetime(2023, 4, 4, 13, 2, 20, 761777)}
[2023-04-04 15:02:22 +0200] [12285] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 15:02:22 +0200] [12285] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 15:02:22 +0200] [12285] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:02:22 +0200] [12285] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:02:22 +0200] [12285] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f1e3c161a90>
[2023-04-04 15:02:22 +0200] [12285] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 15:02:22 +0200] [12285] [TRACE] [services.auth_service] AuthService: Create session with user: 519c1dc9-b224-49e0-8aad-a96e085f2c04
[2023-04-04 15:02:22 +0200] [12285] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 15:02:22 +0200] [12285] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('519c1dc9-b224-49e0-8aad-a96e085f2c04') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 13, 7, 22, 999200) refresh_expire_time=datetime.datetime(2023, 4, 6, 13, 2, 22, 999374) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTM2NDIsInN1YiI6ImFkbWluIn0.KQf7kgfE8mhMvW4tutLDLVP1VwEjmuloTwD6tcKg_8c' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODYxNDIsInN1YiI6ImFkbWluIn0.id-wq0lO3h-tERL2c0-JKVrE2DkBsihD7q0LZHT2YfA' blocked=False is_active=True
[2023-04-04 15:02:23 +0200] [12285] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('ff9d78bf-a27d-4638-a358-ab018be7d195'), 'user_id': UUID('519c1dc9-b224-49e0-8aad-a96e085f2c04'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTM2NDIsInN1YiI6ImFkbWluIn0.KQf7kgfE8mhMvW4tutLDLVP1VwEjmuloTwD6tcKg_8c', 'access_expire_time': datetime.datetime(2023, 4, 4, 13, 7, 22, 999200), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODYxNDIsInN1YiI6ImFkbWluIn0.id-wq0lO3h-tERL2c0-JKVrE2DkBsihD7q0LZHT2YfA', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 13, 2, 22, 999374), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 13, 2, 23, 2013), 'updated_at': datetime.datetime(2023, 4, 4, 13, 2, 23, 2017)}
[2023-04-04 15:02:24 +0200] [12285] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:02:24 +0200] [12285] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f1e3e4e42e0>
[2023-04-04 15:02:24 +0200] [12285] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:02:24 +0200] [12285] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:02:24 +0200] [12285] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f1e3c184280>
[2023-04-04 15:02:24 +0200] [12285] [INFO] [services.teacher_service] TeacherService: Create teachers
[2023-04-04 15:02:24 +0200] [12285] [TRACE] [services.teacher_service] TeacherService: Register teachers with passed data [TeacherCreateDTO(first_name='string', second_name='string', last_name='string', birth_date='28-02-2002')]
[2023-04-04 15:02:24 +0200] [12285] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string' second_name='string' last_name='string' birth_date='28-02-2002'
[2023-04-04 15:02:24 +0200] [12285] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:02:24 +0200] [12285] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string', 'second_name': 'string', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 15:02:24 +0200] [12285] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database []
[2023-04-04 15:02:24 +0200] [12285] [DEBUG] [services.teacher_service] TeacherService: Teachers to be registered after check: [TeacherCreateDTO(first_name='string', second_name='string', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='a9VPjMZYRPtYcg')]
[2023-04-04 15:02:24 +0200] [12285] [INFO] [db.dao.base_dao] TeacherModel DAO: Create db entry
[2023-04-04 15:02:24 +0200] [12285] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed for creation: [TeacherCreateDTO(first_name='string', second_name='string', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='a9VPjMZYRPtYcg')]
[2023-04-04 15:03:01 +0200] [12348] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 15:03:01 +0200] [12348] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$133dXWF7M13s0KkULmpKaei7lCBzYERke.9QCRMo3DvbPbmzBKW2y' email='userrrr@user' id=None
[2023-04-04 15:03:01 +0200] [12348] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('969650ce-9885-4cb4-b734-9cf887484010'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$133dXWF7M13s0KkULmpKaei7lCBzYERke.9QCRMo3DvbPbmzBKW2y', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 13, 3, 1, 241804), 'updated_at': datetime.datetime(2023, 4, 4, 13, 3, 1, 241809)}
[2023-04-04 15:03:03 +0200] [12348] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 15:03:03 +0200] [12348] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 15:03:03 +0200] [12348] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:03:03 +0200] [12348] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:03:03 +0200] [12348] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fd30c62fb50>
[2023-04-04 15:03:03 +0200] [12348] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 15:03:03 +0200] [12348] [TRACE] [services.auth_service] AuthService: Create session with user: 969650ce-9885-4cb4-b734-9cf887484010
[2023-04-04 15:03:03 +0200] [12348] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 15:03:03 +0200] [12348] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('969650ce-9885-4cb4-b734-9cf887484010') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 13, 8, 3, 920906) refresh_expire_time=datetime.datetime(2023, 4, 6, 13, 3, 3, 921058) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTM2ODMsInN1YiI6ImFkbWluIn0.98D-fPsoqJm6eG1OrAuu36i3A9Bip0paE8FfTYd5RCA' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODYxODMsInN1YiI6ImFkbWluIn0.iDI9_QIBFTh6PAtE-xilVaxldQKp6L-XDWfv0sBN1CY' blocked=False is_active=True
[2023-04-04 15:03:03 +0200] [12348] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('a459708f-5258-4a38-9631-8808abe8b810'), 'user_id': UUID('969650ce-9885-4cb4-b734-9cf887484010'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTM2ODMsInN1YiI6ImFkbWluIn0.98D-fPsoqJm6eG1OrAuu36i3A9Bip0paE8FfTYd5RCA', 'access_expire_time': datetime.datetime(2023, 4, 4, 13, 8, 3, 920906), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODYxODMsInN1YiI6ImFkbWluIn0.iDI9_QIBFTh6PAtE-xilVaxldQKp6L-XDWfv0sBN1CY', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 13, 3, 3, 921058), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 13, 3, 3, 923640), 'updated_at': datetime.datetime(2023, 4, 4, 13, 3, 3, 923644)}
[2023-04-04 15:03:07 +0200] [12348] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:03:07 +0200] [12348] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fd30f03bbb0>
[2023-04-04 15:03:07 +0200] [12348] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:03:07 +0200] [12348] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:03:07 +0200] [12348] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fd30c6542e0>
[2023-04-04 15:03:07 +0200] [12348] [INFO] [services.teacher_service] TeacherService: Create teachers
[2023-04-04 15:03:07 +0200] [12348] [TRACE] [services.teacher_service] TeacherService: Register teachers with passed data [TeacherCreateDTO(first_name='string', second_name='string', last_name='string', birth_date='28-02-2002')]
[2023-04-04 15:03:07 +0200] [12348] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string' second_name='string' last_name='string' birth_date='28-02-2002'
[2023-04-04 15:03:07 +0200] [12348] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:03:07 +0200] [12348] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string', 'second_name': 'string', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 15:03:07 +0200] [12348] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database []
[2023-04-04 15:03:07 +0200] [12348] [DEBUG] [services.teacher_service] TeacherService: Teachers to be registered after check: [TeacherCreateDTO(first_name='string', second_name='string', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='gCO-COxr5Pa8aQ')]
[2023-04-04 15:03:07 +0200] [12348] [INFO] [db.dao.base_dao] TeacherModel DAO: Create db entry
[2023-04-04 15:03:07 +0200] [12348] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed for creation: [TeacherCreateDTO(first_name='string', second_name='string', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='gCO-COxr5Pa8aQ')]
[2023-04-04 15:03:07 +0200] [12348] [DEBUG] [db.dao.base_dao] TeacherModel DAO: Created entries in database: [{'id': UUID('b270c567-b9b0-478b-9cb3-94b8d79c6109'), 'registration_token': 'gCO-COxr5Pa8aQ', 'registered_user': False, 'first_name': 'string', 'second_name': 'string', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 13, 3, 7, 385083), 'updated_at': datetime.datetime(2023, 4, 4, 13, 3, 7, 385090), 'deleted_at': None}]
[2023-04-04 15:03:07 +0200] [12348] [DEBUG] [services.teacher_service] TeacherService: Received the answer from database: [<db.models.TeacherModel.TeacherModel object at 0x7fd30f1ba820>]
[2023-04-04 15:03:53 +0200] [12395] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 15:03:53 +0200] [12395] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$kUIu/KkqR6bT7jdigdmQfe51Cfg8LUPaAuoWEtCu2Y.rYGRYO3cn.' email='userrrr@user' id=None
[2023-04-04 15:03:53 +0200] [12395] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('a80ab0f1-2655-46b4-8c48-f8ae0b645163'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$kUIu/KkqR6bT7jdigdmQfe51Cfg8LUPaAuoWEtCu2Y.rYGRYO3cn.', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 13, 3, 53, 328629), 'updated_at': datetime.datetime(2023, 4, 4, 13, 3, 53, 328634)}
[2023-04-04 15:03:55 +0200] [12395] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 15:03:55 +0200] [12395] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 15:03:55 +0200] [12395] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:03:55 +0200] [12395] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:03:55 +0200] [12395] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f26273b9610>
[2023-04-04 15:03:55 +0200] [12395] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 15:03:55 +0200] [12395] [TRACE] [services.auth_service] AuthService: Create session with user: a80ab0f1-2655-46b4-8c48-f8ae0b645163
[2023-04-04 15:03:55 +0200] [12395] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 15:03:55 +0200] [12395] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('a80ab0f1-2655-46b4-8c48-f8ae0b645163') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 13, 8, 55, 446676) refresh_expire_time=datetime.datetime(2023, 4, 6, 13, 3, 55, 446821) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTM3MzUsInN1YiI6ImFkbWluIn0.-m_NrKqT09xDZBTiCuwMR4_HEy30XjuGAKgYaZhhimI' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODYyMzUsInN1YiI6ImFkbWluIn0.rwXwDDxMCRKFQITKETC6x-XhmCIpVMjLRKl2W0MP40A' blocked=False is_active=True
[2023-04-04 15:03:55 +0200] [12395] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('5d051a31-5268-46e8-b924-b88680160309'), 'user_id': UUID('a80ab0f1-2655-46b4-8c48-f8ae0b645163'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTM3MzUsInN1YiI6ImFkbWluIn0.-m_NrKqT09xDZBTiCuwMR4_HEy30XjuGAKgYaZhhimI', 'access_expire_time': datetime.datetime(2023, 4, 4, 13, 8, 55, 446676), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODYyMzUsInN1YiI6ImFkbWluIn0.rwXwDDxMCRKFQITKETC6x-XhmCIpVMjLRKl2W0MP40A', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 13, 3, 55, 446821), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 13, 3, 55, 449341), 'updated_at': datetime.datetime(2023, 4, 4, 13, 3, 55, 449345)}
[2023-04-04 15:03:57 +0200] [12395] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:03:57 +0200] [12395] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f262a08fdf0>
[2023-04-04 15:03:57 +0200] [12395] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:03:57 +0200] [12395] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:03:57 +0200] [12395] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f26273c98b0>
[2023-04-04 15:03:57 +0200] [12395] [INFO] [services.teacher_service] TeacherService: Create teachers
[2023-04-04 15:03:57 +0200] [12395] [TRACE] [services.teacher_service] TeacherService: Register teachers with passed data [TeacherCreateDTO(first_name='string', second_name='string', last_name='string', birth_date='28-02-2002')]
[2023-04-04 15:03:57 +0200] [12395] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string' second_name='string' last_name='string' birth_date='28-02-2002'
[2023-04-04 15:03:57 +0200] [12395] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:03:57 +0200] [12395] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string', 'second_name': 'string', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 15:03:57 +0200] [12395] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database []
[2023-04-04 15:03:57 +0200] [12395] [DEBUG] [services.teacher_service] TeacherService: Teachers to be registered after check: [TeacherCreateDTO(first_name='string', second_name='string', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='dzLcjamm2BYC7g')]
[2023-04-04 15:03:57 +0200] [12395] [INFO] [db.dao.base_dao] TeacherModel DAO: Create db entry
[2023-04-04 15:03:57 +0200] [12395] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed for creation: [TeacherCreateDTO(first_name='string', second_name='string', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='dzLcjamm2BYC7g')]
[2023-04-04 15:03:57 +0200] [12395] [DEBUG] [db.dao.base_dao] TeacherModel DAO: Created entries in database: [{'id': UUID('e1d34604-57d2-4c15-af59-6321d29dfbfa'), 'registration_token': 'dzLcjamm2BYC7g', 'registered_user': False, 'first_name': 'string', 'second_name': 'string', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 13, 3, 57, 631398), 'updated_at': datetime.datetime(2023, 4, 4, 13, 3, 57, 631402), 'deleted_at': None}]
[2023-04-04 15:03:57 +0200] [12395] [DEBUG] [services.teacher_service] TeacherService: Received the answer from database: [<db.models.TeacherModel.TeacherModel object at 0x7f26273dde50>]
[2023-04-04 15:04:28 +0200] [12395] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:04:28 +0200] [12395] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f262a08f910>
[2023-04-04 15:04:28 +0200] [12395] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:04:28 +0200] [12395] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:04:28 +0200] [12395] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f262737f9a0>
[2023-04-04 15:04:28 +0200] [12395] [INFO] [services.teacher_service] TeacherService: Create teachers
[2023-04-04 15:04:28 +0200] [12395] [TRACE] [services.teacher_service] TeacherService: Register teachers with passed data [TeacherCreateDTO(first_name='string2', second_name='string2', last_name='string', birth_date='28-02-2002'), TeacherCreateDTO(first_name='string1', second_name=None, last_name='string1', birth_date='28-02-2002')]
[2023-04-04 15:04:28 +0200] [12395] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string2' second_name='string2' last_name='string' birth_date='28-02-2002'
[2023-04-04 15:04:28 +0200] [12395] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:04:28 +0200] [12395] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string2', 'second_name': 'string2', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 15:04:28 +0200] [12395] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database []
[2023-04-04 15:04:28 +0200] [12395] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string1' second_name=None last_name='string1' birth_date='28-02-2002'
[2023-04-04 15:04:28 +0200] [12395] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:04:28 +0200] [12395] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string1', 'second_name': None, 'last_name': 'string1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 15:04:28 +0200] [12395] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database []
[2023-04-04 15:04:28 +0200] [12395] [DEBUG] [services.teacher_service] TeacherService: Teachers to be registered after check: [TeacherCreateDTO(first_name='string2', second_name='string2', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='qSS9l_YN0Os_6w'), TeacherCreateDTO(first_name='string1', second_name=None, last_name='string1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='uvV-3bMPY3Qz8w')]
[2023-04-04 15:04:28 +0200] [12395] [INFO] [db.dao.base_dao] TeacherModel DAO: Create db entry
[2023-04-04 15:04:28 +0200] [12395] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed for creation: [TeacherCreateDTO(first_name='string2', second_name='string2', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='qSS9l_YN0Os_6w'), TeacherCreateDTO(first_name='string1', second_name=None, last_name='string1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='uvV-3bMPY3Qz8w')]
[2023-04-04 15:04:28 +0200] [12395] [DEBUG] [db.dao.base_dao] TeacherModel DAO: Created entries in database: [{'id': UUID('fec7766c-bf21-4f31-a982-1272b65a42c7'), 'registration_token': 'qSS9l_YN0Os_6w', 'registered_user': False, 'first_name': 'string2', 'second_name': 'string2', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 13, 4, 28, 384439), 'updated_at': datetime.datetime(2023, 4, 4, 13, 4, 28, 384445), 'deleted_at': None}, {'id': UUID('d685966f-0ab3-47b7-b767-42af71c15be8'), 'registration_token': 'uvV-3bMPY3Qz8w', 'registered_user': False, 'first_name': 'string1', 'second_name': None, 'last_name': 'string1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 13, 4, 28, 394276), 'updated_at': datetime.datetime(2023, 4, 4, 13, 4, 28, 394280), 'deleted_at': None}]
[2023-04-04 15:04:28 +0200] [12395] [DEBUG] [services.teacher_service] TeacherService: Received the answer from database: [<db.models.TeacherModel.TeacherModel object at 0x7f262a08fd90>, <db.models.TeacherModel.TeacherModel object at 0x7f262736a730>]
[2023-04-04 15:04:44 +0200] [12395] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:04:44 +0200] [12395] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f2627413100>
[2023-04-04 15:04:44 +0200] [12395] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:04:44 +0200] [12395] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:04:44 +0200] [12395] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f262738da00>
[2023-04-04 15:04:44 +0200] [12395] [INFO] [services.teacher_service] TeacherService: Create teachers
[2023-04-04 15:04:44 +0200] [12395] [TRACE] [services.teacher_service] TeacherService: Register teachers with passed data [TeacherCreateDTO(first_name='string', second_name='string', last_name='string', birth_date='28-02-2002'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date='28-02-2002')]
[2023-04-04 15:04:44 +0200] [12395] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string' second_name='string' last_name='string' birth_date='28-02-2002'
[2023-04-04 15:04:44 +0200] [12395] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:04:44 +0200] [12395] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string', 'second_name': 'string', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 15:04:44 +0200] [12395] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database [<db.models.TeacherModel.TeacherModel object at 0x7f262738dbe0>]
[2023-04-04 15:07:23 +0200] [12474] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 15:07:23 +0200] [12474] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$HC0GmtKPxROSbnOaKrkXN.HDcbwu6CpuueZLwDU.bAzHaVhmY962q' email='userrrr@user' id=None
[2023-04-04 15:07:23 +0200] [12474] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('0743d3ae-4d6f-40e7-ad98-139542efd8f5'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$HC0GmtKPxROSbnOaKrkXN.HDcbwu6CpuueZLwDU.bAzHaVhmY962q', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 13, 7, 23, 882383), 'updated_at': datetime.datetime(2023, 4, 4, 13, 7, 23, 882388)}
[2023-04-04 15:07:26 +0200] [12474] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 15:07:26 +0200] [12474] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 15:07:26 +0200] [12474] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:07:26 +0200] [12474] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:07:26 +0200] [12474] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fa408bd5b80>
[2023-04-04 15:07:26 +0200] [12474] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 15:07:26 +0200] [12474] [TRACE] [services.auth_service] AuthService: Create session with user: 0743d3ae-4d6f-40e7-ad98-139542efd8f5
[2023-04-04 15:07:26 +0200] [12474] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 15:07:26 +0200] [12474] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('0743d3ae-4d6f-40e7-ad98-139542efd8f5') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 13, 12, 26, 269148) refresh_expire_time=datetime.datetime(2023, 4, 6, 13, 7, 26, 269303) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTM5NDYsInN1YiI6ImFkbWluIn0.c_DODGQpJ-umll4FIA_YHRKsnMDfdY89iRN68BqlfuI' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODY0NDYsInN1YiI6ImFkbWluIn0.elKUAC06vHGGYLb89QkPNn9S1XKXIFNIZNqp4cekn-U' blocked=False is_active=True
[2023-04-04 15:07:26 +0200] [12474] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('6433d217-7f35-4962-a043-09c6e04b3faa'), 'user_id': UUID('0743d3ae-4d6f-40e7-ad98-139542efd8f5'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTM5NDYsInN1YiI6ImFkbWluIn0.c_DODGQpJ-umll4FIA_YHRKsnMDfdY89iRN68BqlfuI', 'access_expire_time': datetime.datetime(2023, 4, 4, 13, 12, 26, 269148), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODY0NDYsInN1YiI6ImFkbWluIn0.elKUAC06vHGGYLb89QkPNn9S1XKXIFNIZNqp4cekn-U', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 13, 7, 26, 269303), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 13, 7, 26, 271712), 'updated_at': datetime.datetime(2023, 4, 4, 13, 7, 26, 271716)}
[2023-04-04 15:07:29 +0200] [12474] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:07:29 +0200] [12474] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fa40b740430>
[2023-04-04 15:07:29 +0200] [12474] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:07:29 +0200] [12474] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:07:29 +0200] [12474] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fa408bf9310>
[2023-04-04 15:07:29 +0200] [12474] [INFO] [services.student_service] StudentService: Create students
[2023-04-04 15:07:29 +0200] [12474] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-04 15:07:29 +0200] [12474] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_1' second_name=None last_name='student_1' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-04 15:07:29 +0200] [12474] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-04 15:07:29 +0200] [12474] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-04 15:07:30 +0200] [12474] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-04 15:07:30 +0200] [12474] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='-ncUv7PGB5xYjQ')]
[2023-04-04 15:07:30 +0200] [12474] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-04 15:07:30 +0200] [12474] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='-ncUv7PGB5xYjQ')]
[2023-04-04 15:07:30 +0200] [12474] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('da5ef45f-4124-4322-88db-7370905d9d4b'), 'registration_token': '-ncUv7PGB5xYjQ', 'registered_user': False, 'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 4, 13, 7, 30, 890794), 'updated_at': datetime.datetime(2023, 4, 4, 13, 7, 30, 890798), 'deleted_at': None}]
[2023-04-04 15:07:30 +0200] [12474] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7fa40b8ae5e0>]
[2023-04-04 15:07:32 +0200] [12474] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:07:32 +0200] [12474] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fa40b5d0d00>
[2023-04-04 15:07:32 +0200] [12474] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:07:32 +0200] [12474] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:07:32 +0200] [12474] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fa408ba7640>
[2023-04-04 15:07:32 +0200] [12474] [INFO] [services.student_service] StudentService: Create students
[2023-04-04 15:07:32 +0200] [12474] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-04 15:07:32 +0200] [12474] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_1' second_name=None last_name='student_1' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-04 15:07:32 +0200] [12474] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-04 15:07:32 +0200] [12474] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-04 15:07:32 +0200] [12474] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database [<db.models.StudentModel.StudentModel object at 0x7fa408ba7e20>]
[2023-04-04 15:07:38 +0200] [12474] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:07:38 +0200] [12474] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fa408ba7880>
[2023-04-04 15:07:38 +0200] [12474] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:07:38 +0200] [12474] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:07:38 +0200] [12474] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fa408b1d640>
[2023-04-04 15:07:38 +0200] [12474] [INFO] [services.teacher_service] TeacherService: Create teachers
[2023-04-04 15:07:38 +0200] [12474] [TRACE] [services.teacher_service] TeacherService: Register teachers with passed data [TeacherCreateDTO(first_name='string', second_name='string', last_name='string', birth_date='28-02-2002'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date='28-02-2002')]
[2023-04-04 15:07:38 +0200] [12474] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string' second_name='string' last_name='string' birth_date='28-02-2002'
[2023-04-04 15:07:38 +0200] [12474] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:07:38 +0200] [12474] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string', 'second_name': 'string', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 15:07:38 +0200] [12474] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database []
[2023-04-04 15:07:38 +0200] [12474] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string3' second_name=None last_name='string3' birth_date='28-02-2002'
[2023-04-04 15:07:38 +0200] [12474] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:07:38 +0200] [12474] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 15:07:38 +0200] [12474] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database []
[2023-04-04 15:07:38 +0200] [12474] [DEBUG] [services.teacher_service] TeacherService: Teachers to be registered after check: [TeacherCreateDTO(first_name='string', second_name='string', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='B_Ym9Biw-vafoA'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='GKXhFg73ARYWDA')]
[2023-04-04 15:07:38 +0200] [12474] [INFO] [db.dao.base_dao] TeacherModel DAO: Create db entry
[2023-04-04 15:07:38 +0200] [12474] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed for creation: [TeacherCreateDTO(first_name='string', second_name='string', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='B_Ym9Biw-vafoA'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='GKXhFg73ARYWDA')]
[2023-04-04 15:07:38 +0200] [12474] [DEBUG] [db.dao.base_dao] TeacherModel DAO: Created entries in database: [{'id': UUID('20619d42-b504-4eef-8adb-002ae1805e9f'), 'registration_token': 'B_Ym9Biw-vafoA', 'registered_user': False, 'first_name': 'string', 'second_name': 'string', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 13, 7, 38, 646426), 'updated_at': datetime.datetime(2023, 4, 4, 13, 7, 38, 646431), 'deleted_at': None}, {'id': UUID('cbdfa4a4-04e2-47c6-a73c-8a835995a6db'), 'registration_token': 'GKXhFg73ARYWDA', 'registered_user': False, 'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 13, 7, 38, 659041), 'updated_at': datetime.datetime(2023, 4, 4, 13, 7, 38, 659045), 'deleted_at': None}]
[2023-04-04 15:07:38 +0200] [12474] [DEBUG] [services.teacher_service] TeacherService: Received the answer from database: [<db.models.TeacherModel.TeacherModel object at 0x7fa408ba7610>, <db.models.TeacherModel.TeacherModel object at 0x7fa40b630940>]
[2023-04-04 15:07:40 +0200] [12474] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:07:40 +0200] [12474] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fa408bf94f0>
[2023-04-04 15:07:40 +0200] [12474] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:07:40 +0200] [12474] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:07:40 +0200] [12474] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fa408b37a60>
[2023-04-04 15:07:40 +0200] [12474] [INFO] [services.teacher_service] TeacherService: Create teachers
[2023-04-04 15:07:40 +0200] [12474] [TRACE] [services.teacher_service] TeacherService: Register teachers with passed data [TeacherCreateDTO(first_name='string', second_name='string', last_name='string', birth_date='28-02-2002'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date='28-02-2002')]
[2023-04-04 15:07:40 +0200] [12474] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string' second_name='string' last_name='string' birth_date='28-02-2002'
[2023-04-04 15:07:40 +0200] [12474] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:07:40 +0200] [12474] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string', 'second_name': 'string', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 15:07:40 +0200] [12474] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database [<db.models.TeacherModel.TeacherModel object at 0x7fa408b37bb0>]
[2023-04-04 15:07:40 +0200] [12474] [INFO] [services.teacher_service] TeacherService: Got existing teacher from db: [<db.models.TeacherModel.TeacherModel object at 0x7fa408b37bb0>]
[2023-04-04 15:07:40 +0200] [12474] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string3' second_name=None last_name='string3' birth_date='28-02-2002'
[2023-04-04 15:07:40 +0200] [12474] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:07:40 +0200] [12474] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 15:07:40 +0200] [12474] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database [<db.models.TeacherModel.TeacherModel object at 0x7fa408b377f0>]
[2023-04-04 15:07:40 +0200] [12474] [INFO] [services.teacher_service] TeacherService: Got existing teacher from db: [<db.models.TeacherModel.TeacherModel object at 0x7fa408b377f0>]
[2023-04-04 15:07:40 +0200] [12474] [DEBUG] [services.teacher_service] TeacherService: Teachers to be registered after check: []
[2023-04-04 15:07:40 +0200] [12474] [INFO] [db.dao.base_dao] TeacherModel DAO: Create db entry
[2023-04-04 15:07:40 +0200] [12474] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed for creation: []
[2023-04-04 15:07:40 +0200] [12474] [DEBUG] [db.dao.base_dao] TeacherModel DAO: Created entries in database: []
[2023-04-04 15:07:40 +0200] [12474] [DEBUG] [services.teacher_service] TeacherService: Received the answer from database: []
[2023-04-04 15:08:19 +0200] [12584] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 15:08:19 +0200] [12584] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$ji5lXEwx5lXLcw4o3BTeYO57OjNCdq04OVgAhxt6qgmWRHx7mYzEC' email='userrrr@user' id=None
[2023-04-04 15:08:19 +0200] [12584] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('88e778d0-e6e4-4186-8c6f-e90158237484'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$ji5lXEwx5lXLcw4o3BTeYO57OjNCdq04OVgAhxt6qgmWRHx7mYzEC', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 13, 8, 19, 598586), 'updated_at': datetime.datetime(2023, 4, 4, 13, 8, 19, 598590)}
[2023-04-04 15:08:21 +0200] [12584] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 15:08:21 +0200] [12584] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 15:08:21 +0200] [12584] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:08:21 +0200] [12584] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:08:21 +0200] [12584] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f215974e880>
[2023-04-04 15:08:21 +0200] [12584] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 15:08:21 +0200] [12584] [TRACE] [services.auth_service] AuthService: Create session with user: 88e778d0-e6e4-4186-8c6f-e90158237484
[2023-04-04 15:08:21 +0200] [12584] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 15:08:21 +0200] [12584] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('88e778d0-e6e4-4186-8c6f-e90158237484') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 13, 13, 21, 863928) refresh_expire_time=datetime.datetime(2023, 4, 6, 13, 8, 21, 864145) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTQwMDEsInN1YiI6ImFkbWluIn0.QH8Qd9enXDd-QrCLIYjnly3uUButGuEs6IuprGn6HTs' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODY1MDEsInN1YiI6ImFkbWluIn0.42qik9xRdxB99SALeyEKW20zvpnvuxOJmjRy5_OEYvY' blocked=False is_active=True
[2023-04-04 15:08:21 +0200] [12584] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('4c1e9aaf-031d-4399-9705-c5c4b79e6a04'), 'user_id': UUID('88e778d0-e6e4-4186-8c6f-e90158237484'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTQwMDEsInN1YiI6ImFkbWluIn0.QH8Qd9enXDd-QrCLIYjnly3uUButGuEs6IuprGn6HTs', 'access_expire_time': datetime.datetime(2023, 4, 4, 13, 13, 21, 863928), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODY1MDEsInN1YiI6ImFkbWluIn0.42qik9xRdxB99SALeyEKW20zvpnvuxOJmjRy5_OEYvY', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 13, 8, 21, 864145), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 13, 8, 21, 866595), 'updated_at': datetime.datetime(2023, 4, 4, 13, 8, 21, 866598)}
[2023-04-04 15:08:24 +0200] [12584] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:08:24 +0200] [12584] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f215c2fbe50>
[2023-04-04 15:08:24 +0200] [12584] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:08:24 +0200] [12584] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:08:24 +0200] [12584] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f2159771070>
[2023-04-04 15:08:24 +0200] [12584] [INFO] [services.student_service] StudentService: Create students
[2023-04-04 15:08:24 +0200] [12584] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-04 15:08:24 +0200] [12584] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_1' second_name=None last_name='student_1' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-04 15:08:24 +0200] [12584] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-04 15:08:24 +0200] [12584] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-04 15:08:26 +0200] [12584] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-04 15:08:26 +0200] [12584] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='r_hggbQZ-uzrfA')]
[2023-04-04 15:08:26 +0200] [12584] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-04 15:08:26 +0200] [12584] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='r_hggbQZ-uzrfA')]
[2023-04-04 15:08:26 +0200] [12584] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('e5393199-8bbb-459e-862a-c83c98392554'), 'registration_token': 'r_hggbQZ-uzrfA', 'registered_user': False, 'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 4, 13, 8, 26, 13945), 'updated_at': datetime.datetime(2023, 4, 4, 13, 8, 26, 13949), 'deleted_at': None}]
[2023-04-04 15:08:26 +0200] [12584] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7f215c429e20>]
[2023-04-04 15:08:27 +0200] [12584] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:08:27 +0200] [12584] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f215cd94cd0>
[2023-04-04 15:08:27 +0200] [12584] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:08:27 +0200] [12584] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:08:27 +0200] [12584] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f2159722970>
[2023-04-04 15:08:27 +0200] [12584] [INFO] [services.student_service] StudentService: Create students
[2023-04-04 15:08:27 +0200] [12584] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-04 15:08:27 +0200] [12584] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_1' second_name=None last_name='student_1' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-04 15:08:27 +0200] [12584] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-04 15:08:27 +0200] [12584] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-04 15:08:27 +0200] [12584] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database [<db.models.StudentModel.StudentModel object at 0x7f2159722b50>]
[2023-04-04 15:08:27 +0200] [12584] [INFO] [services.student_service] StudentService: Got existing student from db: [<db.models.StudentModel.StudentModel object at 0x7f2159722b50>]
[2023-04-04 15:08:27 +0200] [12584] [DEBUG] [services.student_service] StudentService: Students to be registered after check: []
[2023-04-04 15:08:27 +0200] [12584] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-04 15:08:27 +0200] [12584] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: []
[2023-04-04 15:08:27 +0200] [12584] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: []
[2023-04-04 15:08:27 +0200] [12584] [DEBUG] [services.student_service] StudentService: Received the answer from database: []
[2023-04-04 15:08:29 +0200] [12584] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:08:29 +0200] [12584] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f21597ace20>
[2023-04-04 15:08:29 +0200] [12584] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:08:29 +0200] [12584] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:08:29 +0200] [12584] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f21597228b0>
[2023-04-04 15:08:29 +0200] [12584] [INFO] [services.teacher_service] TeacherService: Create teachers
[2023-04-04 15:08:29 +0200] [12584] [TRACE] [services.teacher_service] TeacherService: Register teachers with passed data [TeacherCreateDTO(first_name='string', second_name='string', last_name='string', birth_date='28-02-2002'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date='28-02-2002')]
[2023-04-04 15:08:29 +0200] [12584] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string' second_name='string' last_name='string' birth_date='28-02-2002'
[2023-04-04 15:08:29 +0200] [12584] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:08:29 +0200] [12584] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string', 'second_name': 'string', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 15:08:29 +0200] [12584] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database []
[2023-04-04 15:08:29 +0200] [12584] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string3' second_name=None last_name='string3' birth_date='28-02-2002'
[2023-04-04 15:08:29 +0200] [12584] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:08:29 +0200] [12584] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 15:08:29 +0200] [12584] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database []
[2023-04-04 15:08:29 +0200] [12584] [DEBUG] [services.teacher_service] TeacherService: Teachers to be registered after check: [TeacherCreateDTO(first_name='string', second_name='string', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='AYO3-6b4qw-ubA'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='SBdHyKMwFldGOg')]
[2023-04-04 15:08:29 +0200] [12584] [INFO] [db.dao.base_dao] TeacherModel DAO: Create db entry
[2023-04-04 15:08:29 +0200] [12584] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed for creation: [TeacherCreateDTO(first_name='string', second_name='string', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='AYO3-6b4qw-ubA'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='SBdHyKMwFldGOg')]
[2023-04-04 15:08:29 +0200] [12584] [DEBUG] [db.dao.base_dao] TeacherModel DAO: Created entries in database: [{'id': UUID('c6ca3470-42f0-4e48-acfc-70b7e222d225'), 'registration_token': 'AYO3-6b4qw-ubA', 'registered_user': False, 'first_name': 'string', 'second_name': 'string', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 13, 8, 29, 872768), 'updated_at': datetime.datetime(2023, 4, 4, 13, 8, 29, 872772), 'deleted_at': None}, {'id': UUID('4ed9ec97-c57d-4e55-9309-61b717bdb05d'), 'registration_token': 'SBdHyKMwFldGOg', 'registered_user': False, 'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 13, 8, 29, 885263), 'updated_at': datetime.datetime(2023, 4, 4, 13, 8, 29, 885266), 'deleted_at': None}]
[2023-04-04 15:08:29 +0200] [12584] [DEBUG] [services.teacher_service] TeacherService: Received the answer from database: [<db.models.TeacherModel.TeacherModel object at 0x7f215c1ace80>, <db.models.TeacherModel.TeacherModel object at 0x7f215cde59a0>]
[2023-04-04 15:08:30 +0200] [12584] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:08:30 +0200] [12584] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f21597f1ee0>
[2023-04-04 15:08:30 +0200] [12584] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:08:30 +0200] [12584] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:08:30 +0200] [12584] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f21596cc790>
[2023-04-04 15:08:30 +0200] [12584] [INFO] [services.teacher_service] TeacherService: Create teachers
[2023-04-04 15:08:30 +0200] [12584] [TRACE] [services.teacher_service] TeacherService: Register teachers with passed data [TeacherCreateDTO(first_name='string', second_name='string', last_name='string', birth_date='28-02-2002'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date='28-02-2002')]
[2023-04-04 15:08:30 +0200] [12584] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string' second_name='string' last_name='string' birth_date='28-02-2002'
[2023-04-04 15:08:30 +0200] [12584] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:08:30 +0200] [12584] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string', 'second_name': 'string', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 15:08:30 +0200] [12584] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database [<db.models.TeacherModel.TeacherModel object at 0x7f21596cc910>]
[2023-04-04 15:08:30 +0200] [12584] [INFO] [services.teacher_service] TeacherService: Got existing teacher from db: [<db.models.TeacherModel.TeacherModel object at 0x7f21596cc910>]
[2023-04-04 15:08:30 +0200] [12584] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string3' second_name=None last_name='string3' birth_date='28-02-2002'
[2023-04-04 15:08:30 +0200] [12584] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:08:30 +0200] [12584] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 15:08:30 +0200] [12584] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database [<db.models.TeacherModel.TeacherModel object at 0x7f21596cc550>]
[2023-04-04 15:08:30 +0200] [12584] [INFO] [services.teacher_service] TeacherService: Got existing teacher from db: [<db.models.TeacherModel.TeacherModel object at 0x7f21596cc550>]
[2023-04-04 15:08:30 +0200] [12584] [DEBUG] [services.teacher_service] TeacherService: Teachers to be registered after check: []
[2023-04-04 15:08:30 +0200] [12584] [INFO] [db.dao.base_dao] TeacherModel DAO: Create db entry
[2023-04-04 15:08:30 +0200] [12584] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed for creation: []
[2023-04-04 15:08:30 +0200] [12584] [DEBUG] [db.dao.base_dao] TeacherModel DAO: Created entries in database: []
[2023-04-04 15:08:30 +0200] [12584] [DEBUG] [services.teacher_service] TeacherService: Received the answer from database: []
[2023-04-04 15:09:12 +0200] [12584] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:09:12 +0200] [12584] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f215c147190>
[2023-04-04 15:09:12 +0200] [12584] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:09:12 +0200] [12584] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:09:12 +0200] [12584] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f21596cc4f0>
[2023-04-04 15:09:12 +0200] [12584] [INFO] [services.teacher_service] TeacherService: Create teachers
[2023-04-04 15:09:12 +0200] [12584] [TRACE] [services.teacher_service] TeacherService: Register teachers with passed data [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date='28-02-2002'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date='28-02-2002')]
[2023-04-04 15:09:12 +0200] [12584] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string1' second_name='string1' last_name='string' birth_date='28-02-2002'
[2023-04-04 15:09:12 +0200] [12584] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:09:12 +0200] [12584] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 15:09:12 +0200] [12584] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database []
[2023-04-04 15:09:12 +0200] [12584] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string3' second_name=None last_name='string3' birth_date='28-02-2002'
[2023-04-04 15:09:12 +0200] [12584] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:09:12 +0200] [12584] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 15:09:12 +0200] [12584] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database [<db.models.TeacherModel.TeacherModel object at 0x7f21596cc700>]
[2023-04-04 15:09:12 +0200] [12584] [INFO] [services.teacher_service] TeacherService: Got existing teacher from db: [<db.models.TeacherModel.TeacherModel object at 0x7f21596cc700>]
[2023-04-04 15:09:12 +0200] [12584] [DEBUG] [services.teacher_service] TeacherService: Teachers to be registered after check: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='4bL3FDunV_-S_g')]
[2023-04-04 15:09:12 +0200] [12584] [INFO] [db.dao.base_dao] TeacherModel DAO: Create db entry
[2023-04-04 15:09:12 +0200] [12584] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed for creation: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='4bL3FDunV_-S_g')]
[2023-04-04 15:09:12 +0200] [12584] [DEBUG] [db.dao.base_dao] TeacherModel DAO: Created entries in database: [{'id': UUID('eefc9307-26f2-4eb4-b2f1-351dde16cc4f'), 'registration_token': '4bL3FDunV_-S_g', 'registered_user': False, 'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 13, 9, 12, 169842), 'updated_at': datetime.datetime(2023, 4, 4, 13, 9, 12, 169845), 'deleted_at': None}]
[2023-04-04 15:09:12 +0200] [12584] [DEBUG] [services.teacher_service] TeacherService: Received the answer from database: [<db.models.TeacherModel.TeacherModel object at 0x7f2159718640>]
[2023-04-04 15:09:29 +0200] [12584] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:09:29 +0200] [12584] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f215c13e790>
[2023-04-04 15:09:29 +0200] [12584] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:09:29 +0200] [12584] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:09:29 +0200] [12584] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f21596cc1f0>
[2023-04-04 15:09:29 +0200] [12584] [INFO] [services.teacher_service] TeacherService: Get teacher by id: eefc9307-26f2-4eb4-b2f1-351dde16cc4f
[2023-04-04 15:09:29 +0200] [12584] [INFO] [db.dao.base_dao] TeacherModel DAO: Get db entry by id: eefc9307-26f2-4eb4-b2f1-351dde16cc4f
[2023-04-04 15:09:29 +0200] [12584] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database {'id': UUID('eefc9307-26f2-4eb4-b2f1-351dde16cc4f'), 'registration_token': '4bL3FDunV_-S_g', 'registered_user': False, 'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 13, 9, 12, 169842), 'updated_at': datetime.datetime(2023, 4, 4, 13, 9, 12, 169845), 'deleted_at': None}
[2023-04-04 15:09:34 +0200] [12584] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:09:34 +0200] [12584] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f215c191c70>
[2023-04-04 15:09:34 +0200] [12584] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:09:34 +0200] [12584] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:09:34 +0200] [12584] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f21596da1f0>
[2023-04-04 15:09:45 +0200] [12584] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:09:45 +0200] [12584] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f21596cc940>
[2023-04-04 15:09:45 +0200] [12584] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:09:45 +0200] [12584] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:09:45 +0200] [12584] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f21596daa30>
[2023-04-04 15:09:45 +0200] [12584] [INFO] [services.teacher_service] TeacherService: Delete teacher (mark student as deleted)
[2023-04-04 15:09:45 +0200] [12584] [TRACE] [services.teacher_service] TeacherService: Patch teacher with id: eefc9307-26f2-4eb4-b2f1-351dde16cc4f - with following data: deleted_at=datetime.datetime(2023, 4, 4, 13, 9, 45, 725735)
[2023-04-04 15:09:45 +0200] [12584] [INFO] [db.dao.base_dao] TeacherModel DAO: Update db entry
[2023-04-04 15:09:45 +0200] [12584] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed for update: item_id: eefc9307-26f2-4eb4-b2f1-351dde16cc4f, patch_data: deleted_at=datetime.datetime(2023, 4, 4, 13, 9, 45, 725735)
[2023-04-04 15:09:45 +0200] [12584] [DEBUG] [db.dao.base_dao] TeacherModel DAO: Received updated entry from the database {'id': UUID('eefc9307-26f2-4eb4-b2f1-351dde16cc4f'), 'registration_token': '4bL3FDunV_-S_g', 'registered_user': False, 'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 13, 9, 12, 169842), 'updated_at': datetime.datetime(2023, 4, 4, 16, 9, 45, 727356), 'deleted_at': datetime.datetime(2023, 4, 4, 13, 9, 45, 725735)}
[2023-04-04 15:09:51 +0200] [12584] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:09:51 +0200] [12584] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f215c13e040>
[2023-04-04 15:09:51 +0200] [12584] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:09:51 +0200] [12584] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:09:51 +0200] [12584] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f21596dabe0>
[2023-04-04 15:09:51 +0200] [12584] [INFO] [services.teacher_service] TeacherService: Get teacher by id: eefc9307-26f2-4eb4-b2f1-351dde16cc4f
[2023-04-04 15:09:51 +0200] [12584] [INFO] [db.dao.base_dao] TeacherModel DAO: Get db entry by id: eefc9307-26f2-4eb4-b2f1-351dde16cc4f
[2023-04-04 15:09:51 +0200] [12584] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database {'id': UUID('eefc9307-26f2-4eb4-b2f1-351dde16cc4f'), 'registration_token': '4bL3FDunV_-S_g', 'registered_user': False, 'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 13, 9, 12, 169842), 'updated_at': datetime.datetime(2023, 4, 4, 16, 9, 45, 727356), 'deleted_at': datetime.datetime(2023, 4, 4, 13, 9, 45, 725735)}
[2023-04-04 15:09:57 +0200] [12584] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:09:57 +0200] [12584] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f215c191580>
[2023-04-04 15:09:57 +0200] [12584] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:09:57 +0200] [12584] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:09:57 +0200] [12584] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f21596dad90>
[2023-04-04 15:13:05 +0200] [12751] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 15:13:05 +0200] [12751] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$K7iawZ0R9i9iKkyWGMQa7ON3Ir9hgr3cnTlZAuFn34h35o7PZbHs2' email='userrrr@user' id=None
[2023-04-04 15:13:05 +0200] [12751] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('75de2664-bd01-4ed2-bfb3-c3744d8fb77b'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$K7iawZ0R9i9iKkyWGMQa7ON3Ir9hgr3cnTlZAuFn34h35o7PZbHs2', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 13, 13, 5, 747511), 'updated_at': datetime.datetime(2023, 4, 4, 13, 13, 5, 747517)}
[2023-04-04 15:13:08 +0200] [12751] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 15:13:08 +0200] [12751] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 15:13:08 +0200] [12751] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:13:08 +0200] [12751] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:13:08 +0200] [12751] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f0374d90850>
[2023-04-04 15:13:08 +0200] [12751] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 15:13:08 +0200] [12751] [TRACE] [services.auth_service] AuthService: Create session with user: 75de2664-bd01-4ed2-bfb3-c3744d8fb77b
[2023-04-04 15:13:08 +0200] [12751] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 15:13:08 +0200] [12751] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('75de2664-bd01-4ed2-bfb3-c3744d8fb77b') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 13, 18, 8, 610695) refresh_expire_time=datetime.datetime(2023, 4, 6, 13, 13, 8, 610856) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTQyODgsInN1YiI6ImFkbWluIn0.H_5aNEAEhPPh07bTEpI-hemo9Y8vMydMNGAjM5nNOsY' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODY3ODgsInN1YiI6ImFkbWluIn0.zzyvEnBzgMjFU92mqM3SkmcTm-fwOmYCTlcfP1z1QRw' blocked=False is_active=True
[2023-04-04 15:13:08 +0200] [12751] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('5fe0b612-45ae-4855-9420-ad49eb5722c9'), 'user_id': UUID('75de2664-bd01-4ed2-bfb3-c3744d8fb77b'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTQyODgsInN1YiI6ImFkbWluIn0.H_5aNEAEhPPh07bTEpI-hemo9Y8vMydMNGAjM5nNOsY', 'access_expire_time': datetime.datetime(2023, 4, 4, 13, 18, 8, 610695), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODY3ODgsInN1YiI6ImFkbWluIn0.zzyvEnBzgMjFU92mqM3SkmcTm-fwOmYCTlcfP1z1QRw', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 13, 13, 8, 610856), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 13, 13, 8, 613588), 'updated_at': datetime.datetime(2023, 4, 4, 13, 13, 8, 613592)}
[2023-04-04 15:13:19 +0200] [12751] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:13:19 +0200] [12751] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f03779098b0>
[2023-04-04 15:13:19 +0200] [12751] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:13:19 +0200] [12751] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:13:19 +0200] [12751] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f0374dad040>
[2023-04-04 15:13:19 +0200] [12751] [INFO] [services.teacher_service] TeacherService: Create teachers
[2023-04-04 15:13:19 +0200] [12751] [TRACE] [services.teacher_service] TeacherService: Register teachers with passed data [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date='28-02-2002'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date='28-02-2002')]
[2023-04-04 15:13:19 +0200] [12751] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string1' second_name='string1' last_name='string' birth_date='28-02-2002'
[2023-04-04 15:13:19 +0200] [12751] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:13:19 +0200] [12751] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 15:13:19 +0200] [12751] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database []
[2023-04-04 15:13:19 +0200] [12751] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string3' second_name=None last_name='string3' birth_date='28-02-2002'
[2023-04-04 15:13:19 +0200] [12751] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:13:19 +0200] [12751] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 15:13:19 +0200] [12751] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database []
[2023-04-04 15:13:19 +0200] [12751] [DEBUG] [services.teacher_service] TeacherService: Teachers to be registered after check: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='S9Cb-seVG1i9vw'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='sczWj9zrTepCjg')]
[2023-04-04 15:13:19 +0200] [12751] [INFO] [db.dao.base_dao] TeacherModel DAO: Create db entry
[2023-04-04 15:13:19 +0200] [12751] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed for creation: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='S9Cb-seVG1i9vw'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='sczWj9zrTepCjg')]
[2023-04-04 15:13:19 +0200] [12751] [DEBUG] [db.dao.base_dao] TeacherModel DAO: Created entries in database: [{'id': UUID('d2962d57-871c-4347-b477-52c688938f9a'), 'registration_token': 'S9Cb-seVG1i9vw', 'registered_user': False, 'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 13, 13, 19, 283337), 'updated_at': datetime.datetime(2023, 4, 4, 13, 13, 19, 283341), 'deleted_at': None}, {'id': UUID('0e23d953-0953-4961-8e30-74fc2d732bda'), 'registration_token': 'sczWj9zrTepCjg', 'registered_user': False, 'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 13, 13, 19, 289799), 'updated_at': datetime.datetime(2023, 4, 4, 13, 13, 19, 289805), 'deleted_at': None}]
[2023-04-04 15:13:19 +0200] [12751] [DEBUG] [services.teacher_service] TeacherService: Received the answer from database: [<db.models.TeacherModel.TeacherModel object at 0x7f0374d3c340>, <db.models.TeacherModel.TeacherModel object at 0x7f03778b6d90>]
[2023-04-04 15:13:24 +0200] [12751] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:13:24 +0200] [12751] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f03783cff40>
[2023-04-04 15:13:24 +0200] [12751] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:13:24 +0200] [12751] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:13:24 +0200] [12751] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f0374d61640>
[2023-04-04 15:17:40 +0200] [12751] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:17:40 +0200] [12751] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f0374deed60>
[2023-04-04 15:17:40 +0200] [12751] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:17:40 +0200] [12751] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:17:40 +0200] [12751] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f0374d61e20>
[2023-04-04 15:17:40 +0200] [12751] [INFO] [services.student_service] StudentService: Get all not deleted students with given parameters
[2023-04-04 15:17:40 +0200] [12751] [TRACE] [services.student_service] StudentService: Get all not deleted student with parameters: {'academic_group': <AcademicGroupsEnum.FIRST_3: '301'>}
[2023-04-04 15:17:40 +0200] [12751] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-04 15:17:40 +0200] [12751] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'academic_group': <AcademicGroupsEnum.FIRST_3: '301'>}
[2023-04-04 15:17:41 +0200] [12751] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-04 15:18:58 +0200] [12961] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 15:18:58 +0200] [12961] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$dXm6bK1eAf1MfPiXB0737uAoQ5FAJqL5iwFNjyXxGXLmQlPUxmJm6' email='userrrr@user' id=None
[2023-04-04 15:18:59 +0200] [12961] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('02e5c8ce-e694-4404-87b1-1eee401334ce'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$dXm6bK1eAf1MfPiXB0737uAoQ5FAJqL5iwFNjyXxGXLmQlPUxmJm6', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 13, 18, 58, 990434), 'updated_at': datetime.datetime(2023, 4, 4, 13, 18, 58, 990440)}
[2023-04-04 15:19:00 +0200] [12961] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 15:19:00 +0200] [12961] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 15:19:00 +0200] [12961] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:19:00 +0200] [12961] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:19:00 +0200] [12961] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f18d4355a60>
[2023-04-04 15:19:01 +0200] [12961] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 15:19:01 +0200] [12961] [TRACE] [services.auth_service] AuthService: Create session with user: 02e5c8ce-e694-4404-87b1-1eee401334ce
[2023-04-04 15:19:01 +0200] [12961] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 15:19:01 +0200] [12961] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('02e5c8ce-e694-4404-87b1-1eee401334ce') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 13, 24, 1, 251466) refresh_expire_time=datetime.datetime(2023, 4, 6, 13, 19, 1, 251609) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTQ2NDEsInN1YiI6ImFkbWluIn0.jQvmbnhZTMoaFQVqUOmZYjQ9HUI8WOjkaVHG5jSTghQ' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODcxNDEsInN1YiI6ImFkbWluIn0.VdXEgiZc8mD8SPlhb3p0neModSzsuDT3n9dlRhlQL44' blocked=False is_active=True
[2023-04-04 15:19:01 +0200] [12961] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('cfb36bd9-3664-4c03-a5c9-1f86e7470128'), 'user_id': UUID('02e5c8ce-e694-4404-87b1-1eee401334ce'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTQ2NDEsInN1YiI6ImFkbWluIn0.jQvmbnhZTMoaFQVqUOmZYjQ9HUI8WOjkaVHG5jSTghQ', 'access_expire_time': datetime.datetime(2023, 4, 4, 13, 24, 1, 251466), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODcxNDEsInN1YiI6ImFkbWluIn0.VdXEgiZc8mD8SPlhb3p0neModSzsuDT3n9dlRhlQL44', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 13, 19, 1, 251609), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 13, 19, 1, 254299), 'updated_at': datetime.datetime(2023, 4, 4, 13, 19, 1, 254303)}
[2023-04-04 15:19:03 +0200] [12961] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:19:03 +0200] [12961] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f18d6ed4760>
[2023-04-04 15:19:03 +0200] [12961] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:19:03 +0200] [12961] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:19:03 +0200] [12961] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f18d4378250>
[2023-04-04 15:19:03 +0200] [12961] [INFO] [services.teacher_service] TeacherService: Create teachers
[2023-04-04 15:19:03 +0200] [12961] [TRACE] [services.teacher_service] TeacherService: Register teachers with passed data [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date='28-02-2002'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date='28-02-2002')]
[2023-04-04 15:19:03 +0200] [12961] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string1' second_name='string1' last_name='string' birth_date='28-02-2002'
[2023-04-04 15:19:03 +0200] [12961] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:19:03 +0200] [12961] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 15:19:03 +0200] [12961] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database []
[2023-04-04 15:19:03 +0200] [12961] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string3' second_name=None last_name='string3' birth_date='28-02-2002'
[2023-04-04 15:19:03 +0200] [12961] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:19:03 +0200] [12961] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 15:19:03 +0200] [12961] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database []
[2023-04-04 15:19:03 +0200] [12961] [DEBUG] [services.teacher_service] TeacherService: Teachers to be registered after check: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='qo05r9O79m1zbw'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='ORmW-1Zomx6fYg')]
[2023-04-04 15:19:03 +0200] [12961] [INFO] [db.dao.base_dao] TeacherModel DAO: Create db entry
[2023-04-04 15:19:03 +0200] [12961] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed for creation: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='qo05r9O79m1zbw'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='ORmW-1Zomx6fYg')]
[2023-04-04 15:19:03 +0200] [12961] [DEBUG] [db.dao.base_dao] TeacherModel DAO: Created entries in database: [{'id': UUID('e8b5e868-c691-4e9d-a790-4bbe8b47aa24'), 'registration_token': 'qo05r9O79m1zbw', 'registered_user': False, 'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 13, 19, 3, 945245), 'updated_at': datetime.datetime(2023, 4, 4, 13, 19, 3, 945249), 'deleted_at': None}, {'id': UUID('d247c921-ea03-4fdd-911d-4f2800607b1c'), 'registration_token': 'ORmW-1Zomx6fYg', 'registered_user': False, 'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 13, 19, 3, 957832), 'updated_at': datetime.datetime(2023, 4, 4, 13, 19, 3, 957840), 'deleted_at': None}]
[2023-04-04 15:19:03 +0200] [12961] [DEBUG] [services.teacher_service] TeacherService: Received the answer from database: [<db.models.TeacherModel.TeacherModel object at 0x7f18d6ed4910>, <db.models.TeacherModel.TeacherModel object at 0x7f18d4367070>]
[2023-04-04 15:19:07 +0200] [12961] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:19:07 +0200] [12961] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f18d6e23850>
[2023-04-04 15:19:07 +0200] [12961] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:19:07 +0200] [12961] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:19:07 +0200] [12961] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f18d432a8b0>
