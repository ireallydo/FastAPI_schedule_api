[2023-04-04 15:29:06 +0200] [13376] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 15:29:06 +0200] [13376] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$3GZaLOh/vGyanxieOpCRx.HekBcoTO3Mqvvn.QdQ0WdvketZopEGm' email='userrrr@user' id=None
[2023-04-04 15:29:06 +0200] [13376] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('89aecb1a-fadd-4306-8718-7a2ab1341a14'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$3GZaLOh/vGyanxieOpCRx.HekBcoTO3Mqvvn.QdQ0WdvketZopEGm', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 13, 29, 6, 874593), 'updated_at': datetime.datetime(2023, 4, 4, 13, 29, 6, 874598)}
[2023-04-04 15:29:08 +0200] [13376] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 15:29:08 +0200] [13376] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 15:29:08 +0200] [13376] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:29:08 +0200] [13376] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:29:08 +0200] [13376] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fdd7ad83ac0>
[2023-04-04 15:29:09 +0200] [13376] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 15:29:09 +0200] [13376] [TRACE] [services.auth_service] AuthService: Create session with user: 89aecb1a-fadd-4306-8718-7a2ab1341a14
[2023-04-04 15:29:09 +0200] [13376] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 15:29:09 +0200] [13376] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('89aecb1a-fadd-4306-8718-7a2ab1341a14') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 13, 34, 9, 57735) refresh_expire_time=datetime.datetime(2023, 4, 6, 13, 29, 9, 57888) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTUyNDksInN1YiI6ImFkbWluIn0.ra6tYAIASD1Dnb-Ff-6FbM7sk7O-dFXK88SWvEhp1sk' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODc3NDksInN1YiI6ImFkbWluIn0.LK09SU0Xzd1ust4MtiUkqwbwovElUBHyVfMLoaf5JKM' blocked=False is_active=True
[2023-04-04 15:29:09 +0200] [13376] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('10c9f18d-91e8-4b88-9151-427c0e4d55f3'), 'user_id': UUID('89aecb1a-fadd-4306-8718-7a2ab1341a14'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTUyNDksInN1YiI6ImFkbWluIn0.ra6tYAIASD1Dnb-Ff-6FbM7sk7O-dFXK88SWvEhp1sk', 'access_expire_time': datetime.datetime(2023, 4, 4, 13, 34, 9, 57735), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODc3NDksInN1YiI6ImFkbWluIn0.LK09SU0Xzd1ust4MtiUkqwbwovElUBHyVfMLoaf5JKM', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 13, 29, 9, 57888), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 13, 29, 9, 60670), 'updated_at': datetime.datetime(2023, 4, 4, 13, 29, 9, 60676)}
[2023-04-04 15:29:14 +0200] [13376] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:29:14 +0200] [13376] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fdd7d8f04c0>
[2023-04-04 15:29:14 +0200] [13376] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:29:14 +0200] [13376] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:29:14 +0200] [13376] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fdd7ada92b0>
[2023-04-04 15:29:14 +0200] [13376] [INFO] [services.teacher_service] TeacherService: Create teachers
[2023-04-04 15:29:14 +0200] [13376] [TRACE] [services.teacher_service] TeacherService: Register teachers with passed data [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date='28-02-2002'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date='28-02-2002')]
[2023-04-04 15:29:14 +0200] [13376] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string1' second_name='string1' last_name='string' birth_date='28-02-2002'
[2023-04-04 15:29:14 +0200] [13376] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:29:14 +0200] [13376] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 15:29:14 +0200] [13376] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database []
[2023-04-04 15:29:14 +0200] [13376] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string3' second_name=None last_name='string3' birth_date='28-02-2002'
[2023-04-04 15:29:14 +0200] [13376] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:29:14 +0200] [13376] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 15:29:14 +0200] [13376] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database []
[2023-04-04 15:29:14 +0200] [13376] [DEBUG] [services.teacher_service] TeacherService: Teachers to be registered after check: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='MYj0jEwOIJPdRQ'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='60yVvsWIXfpI6Q')]
[2023-04-04 15:29:14 +0200] [13376] [INFO] [db.dao.base_dao] TeacherModel DAO: Create db entry
[2023-04-04 15:29:14 +0200] [13376] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed for creation: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='MYj0jEwOIJPdRQ'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='60yVvsWIXfpI6Q')]
[2023-04-04 15:29:14 +0200] [13376] [DEBUG] [db.dao.base_dao] TeacherModel DAO: Created entries in database: [{'id': UUID('f6d37698-1b7e-4686-9b50-1b7742e07378'), 'registration_token': 'MYj0jEwOIJPdRQ', 'registered_user': False, 'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 13, 29, 14, 409152), 'updated_at': datetime.datetime(2023, 4, 4, 13, 29, 14, 409157), 'deleted_at': None}, {'id': UUID('298c3f0a-cf4b-422f-b099-0d239fbfea2c'), 'registration_token': '60yVvsWIXfpI6Q', 'registered_user': False, 'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 13, 29, 14, 421483), 'updated_at': datetime.datetime(2023, 4, 4, 13, 29, 14, 421488), 'deleted_at': None}]
[2023-04-04 15:29:14 +0200] [13376] [DEBUG] [services.teacher_service] TeacherService: Received the answer from database: [<db.models.TeacherModel.TeacherModel object at 0x7fdd7d8b6190>, <db.models.TeacherModel.TeacherModel object at 0x7fdd7ad99d30>]
[2023-04-04 15:29:17 +0200] [13376] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:29:17 +0200] [13376] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fdd7da5d970>
[2023-04-04 15:29:17 +0200] [13376] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:29:17 +0200] [13376] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:29:17 +0200] [13376] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fdd7ad5c910>
[2023-04-04 15:30:29 +0200] [13456] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 15:30:29 +0200] [13456] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$Qwvjcid71fhU8bl5CsNykeiBQVHgkikN7NhJh/.J2CtMHp2AKbuzq' email='userrrr@user' id=None
[2023-04-04 15:30:29 +0200] [13456] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('542b5ec6-8e3c-45c9-a841-e5620ab084dd'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$Qwvjcid71fhU8bl5CsNykeiBQVHgkikN7NhJh/.J2CtMHp2AKbuzq', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 13, 30, 29, 335831), 'updated_at': datetime.datetime(2023, 4, 4, 13, 30, 29, 335836)}
[2023-04-04 15:30:31 +0200] [13456] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 15:30:31 +0200] [13456] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 15:30:31 +0200] [13456] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:30:31 +0200] [13456] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:30:31 +0200] [13456] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7faf1654f820>
[2023-04-04 15:30:31 +0200] [13456] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 15:30:31 +0200] [13456] [TRACE] [services.auth_service] AuthService: Create session with user: 542b5ec6-8e3c-45c9-a841-e5620ab084dd
[2023-04-04 15:30:31 +0200] [13456] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 15:30:31 +0200] [13456] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('542b5ec6-8e3c-45c9-a841-e5620ab084dd') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 13, 35, 31, 781250) refresh_expire_time=datetime.datetime(2023, 4, 6, 13, 30, 31, 781406) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTUzMzEsInN1YiI6ImFkbWluIn0.M7mxngggZtFtE-_5yc5_CnjsFUY6EFIIOQpUt5Ur4_g' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODc4MzEsInN1YiI6ImFkbWluIn0.U1XA77Nxl5Sm6YrX0wDHrCRbVb-frdR6nlnHm5mBXPU' blocked=False is_active=True
[2023-04-04 15:30:31 +0200] [13456] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('7acc04cc-fb00-4555-a957-0fd53768391f'), 'user_id': UUID('542b5ec6-8e3c-45c9-a841-e5620ab084dd'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTUzMzEsInN1YiI6ImFkbWluIn0.M7mxngggZtFtE-_5yc5_CnjsFUY6EFIIOQpUt5Ur4_g', 'access_expire_time': datetime.datetime(2023, 4, 4, 13, 35, 31, 781250), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODc4MzEsInN1YiI6ImFkbWluIn0.U1XA77Nxl5Sm6YrX0wDHrCRbVb-frdR6nlnHm5mBXPU', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 13, 30, 31, 781406), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 13, 30, 31, 783890), 'updated_at': datetime.datetime(2023, 4, 4, 13, 30, 31, 783893)}
[2023-04-04 15:30:34 +0200] [13456] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:30:34 +0200] [13456] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7faf190cf550>
[2023-04-04 15:30:34 +0200] [13456] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:30:34 +0200] [13456] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:30:34 +0200] [13456] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7faf16562a30>
[2023-04-04 15:30:34 +0200] [13456] [INFO] [services.teacher_service] TeacherService: Create teachers
[2023-04-04 15:30:34 +0200] [13456] [TRACE] [services.teacher_service] TeacherService: Register teachers with passed data [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date='28-02-2002'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date='28-02-2002')]
[2023-04-04 15:30:34 +0200] [13456] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string1' second_name='string1' last_name='string' birth_date='28-02-2002'
[2023-04-04 15:30:34 +0200] [13456] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:30:34 +0200] [13456] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 15:30:34 +0200] [13456] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database []
[2023-04-04 15:30:34 +0200] [13456] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string3' second_name=None last_name='string3' birth_date='28-02-2002'
[2023-04-04 15:30:34 +0200] [13456] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:30:34 +0200] [13456] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 15:30:34 +0200] [13456] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database []
[2023-04-04 15:30:34 +0200] [13456] [DEBUG] [services.teacher_service] TeacherService: Teachers to be registered after check: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='jp0KnLRr4UH6jg'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='m-nS7fzKQImWvQ')]
[2023-04-04 15:30:34 +0200] [13456] [INFO] [db.dao.base_dao] TeacherModel DAO: Create db entry
[2023-04-04 15:30:34 +0200] [13456] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed for creation: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='jp0KnLRr4UH6jg'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='m-nS7fzKQImWvQ')]
[2023-04-04 15:30:34 +0200] [13456] [DEBUG] [db.dao.base_dao] TeacherModel DAO: Created entries in database: [{'id': UUID('82efadeb-b63d-4766-b704-46364a35cdec'), 'registration_token': 'jp0KnLRr4UH6jg', 'registered_user': False, 'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 13, 30, 34, 100015), 'updated_at': datetime.datetime(2023, 4, 4, 13, 30, 34, 100020), 'deleted_at': None}, {'id': UUID('7b442452-bee9-4432-bde2-46398eb7223f'), 'registration_token': 'm-nS7fzKQImWvQ', 'registered_user': False, 'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 13, 30, 34, 113930), 'updated_at': datetime.datetime(2023, 4, 4, 13, 30, 34, 113937), 'deleted_at': None}]
[2023-04-04 15:30:34 +0200] [13456] [DEBUG] [services.teacher_service] TeacherService: Received the answer from database: [<db.models.TeacherModel.TeacherModel object at 0x7faf16501040>, <db.models.TeacherModel.TeacherModel object at 0x7faf190cf7c0>]
[2023-04-04 15:30:43 +0200] [13456] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:30:43 +0200] [13456] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7faf19227760>
[2023-04-04 15:30:43 +0200] [13456] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:30:43 +0200] [13456] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:30:43 +0200] [13456] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7faf16526610>
[2023-04-04 15:41:34 +0200] [13818] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 15:41:34 +0200] [13818] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$KUOyJvA6as0J16Iwh9hPCOIiuEj9XvW0Kp/gAXJuK1.cUk3lL1qdS' email='userrrr@user' id=None
[2023-04-04 15:41:34 +0200] [13818] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('8e24009c-4d5b-42a2-bcaa-6de4749c069f'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$KUOyJvA6as0J16Iwh9hPCOIiuEj9XvW0Kp/gAXJuK1.cUk3lL1qdS', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 13, 41, 34, 743193), 'updated_at': datetime.datetime(2023, 4, 4, 13, 41, 34, 743199)}
[2023-04-04 15:41:36 +0200] [13818] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 15:41:36 +0200] [13818] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 15:41:36 +0200] [13818] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:41:36 +0200] [13818] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:41:36 +0200] [13818] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f682d1a1b20>
[2023-04-04 15:41:37 +0200] [13818] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 15:41:37 +0200] [13818] [TRACE] [services.auth_service] AuthService: Create session with user: 8e24009c-4d5b-42a2-bcaa-6de4749c069f
[2023-04-04 15:41:37 +0200] [13818] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 15:41:37 +0200] [13818] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('8e24009c-4d5b-42a2-bcaa-6de4749c069f') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 13, 46, 37, 147109) refresh_expire_time=datetime.datetime(2023, 4, 6, 13, 41, 37, 147247) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTU5OTcsInN1YiI6ImFkbWluIn0.3tharwF_669ghyQzwI9axVqahI-Wqrv6huGRfZ53ui4' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODg0OTcsInN1YiI6ImFkbWluIn0.GutPhEyzURODeMM5S6j_cl0i7nbWwmtfoS9irlxSPvw' blocked=False is_active=True
[2023-04-04 15:41:37 +0200] [13818] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('6fb6968f-4003-417f-aab1-f87c5c4e721d'), 'user_id': UUID('8e24009c-4d5b-42a2-bcaa-6de4749c069f'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTU5OTcsInN1YiI6ImFkbWluIn0.3tharwF_669ghyQzwI9axVqahI-Wqrv6huGRfZ53ui4', 'access_expire_time': datetime.datetime(2023, 4, 4, 13, 46, 37, 147109), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODg0OTcsInN1YiI6ImFkbWluIn0.GutPhEyzURODeMM5S6j_cl0i7nbWwmtfoS9irlxSPvw', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 13, 41, 37, 147247), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 13, 41, 37, 149526), 'updated_at': datetime.datetime(2023, 4, 4, 13, 41, 37, 149530)}
[2023-04-04 15:41:39 +0200] [13818] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:41:39 +0200] [13818] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f682fd1e760>
[2023-04-04 15:41:39 +0200] [13818] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:41:39 +0200] [13818] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:41:39 +0200] [13818] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f682d1c52b0>
[2023-04-04 15:41:40 +0200] [13818] [INFO] [services.student_service] StudentService: Create students
[2023-04-04 15:41:40 +0200] [13818] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-04 15:41:40 +0200] [13818] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_1' second_name=None last_name='student_1' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-04 15:41:40 +0200] [13818] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-04 15:41:40 +0200] [13818] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-04 15:41:41 +0200] [13818] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-04 15:41:41 +0200] [13818] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='_YGHTOV_MpKWoA')]
[2023-04-04 15:41:41 +0200] [13818] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-04 15:41:41 +0200] [13818] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='_YGHTOV_MpKWoA')]
[2023-04-04 15:41:41 +0200] [13818] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('9e05410a-744f-4576-9bda-5b0774d856e0'), 'registration_token': '_YGHTOV_MpKWoA', 'registered_user': False, 'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 4, 13, 41, 41, 303652), 'updated_at': datetime.datetime(2023, 4, 4, 13, 41, 41, 303656), 'deleted_at': None}]
[2023-04-04 15:41:41 +0200] [13818] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7f682fb89040>]
[2023-04-04 15:41:43 +0200] [13818] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:41:43 +0200] [13818] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f682d2345e0>
[2023-04-04 15:41:43 +0200] [13818] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:41:43 +0200] [13818] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:41:43 +0200] [13818] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f682d174a60>
[2023-04-04 15:41:43 +0200] [13818] [INFO] [services.student_service] StudentService: Get all not deleted students with given parameters
[2023-04-04 15:41:43 +0200] [13818] [TRACE] [services.student_service] StudentService: Get all not deleted student with parameters: {'academic_group': <AcademicGroupsEnum.FIRST_3: '301'>}
[2023-04-04 15:41:43 +0200] [13818] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-04 15:41:43 +0200] [13818] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {}
[2023-04-04 15:41:43 +0200] [13818] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database [<db.models.StudentModel.StudentModel object at 0x7f682d174ee0>]
[2023-04-04 15:46:03 +0200] [13957] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 15:46:03 +0200] [13957] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$g8q5ZbtdkmrKIWGPZBOBj.cyl5GJCVfl6vC1yLbk6F54ddz1TwaOC' email='userrrr@user' id=None
[2023-04-04 15:46:03 +0200] [13957] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('65f776da-e713-405c-911a-7dde4f75dd94'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$g8q5ZbtdkmrKIWGPZBOBj.cyl5GJCVfl6vC1yLbk6F54ddz1TwaOC', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 13, 46, 3, 688050), 'updated_at': datetime.datetime(2023, 4, 4, 13, 46, 3, 688056)}
[2023-04-04 15:46:05 +0200] [13957] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 15:46:05 +0200] [13957] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 15:46:05 +0200] [13957] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:46:05 +0200] [13957] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:46:05 +0200] [13957] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f871178a820>
[2023-04-04 15:46:05 +0200] [13957] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 15:46:05 +0200] [13957] [TRACE] [services.auth_service] AuthService: Create session with user: 65f776da-e713-405c-911a-7dde4f75dd94
[2023-04-04 15:46:05 +0200] [13957] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 15:46:05 +0200] [13957] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('65f776da-e713-405c-911a-7dde4f75dd94') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 13, 51, 5, 862192) refresh_expire_time=datetime.datetime(2023, 4, 6, 13, 46, 5, 862381) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTYyNjUsInN1YiI6ImFkbWluIn0.eJQ1EX-vHIbinI-THfRszswy0hCHU7oh8X1fs43t9Qg' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODg3NjUsInN1YiI6ImFkbWluIn0.N8lO9SgoAet2hY0v8IesOen7xMf2jO_lipxNUr-Bb-E' blocked=False is_active=True
[2023-04-04 15:46:05 +0200] [13957] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('c51d9dc1-61a5-4870-bf59-e521b680f3fb'), 'user_id': UUID('65f776da-e713-405c-911a-7dde4f75dd94'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTYyNjUsInN1YiI6ImFkbWluIn0.eJQ1EX-vHIbinI-THfRszswy0hCHU7oh8X1fs43t9Qg', 'access_expire_time': datetime.datetime(2023, 4, 4, 13, 51, 5, 862192), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODg3NjUsInN1YiI6ImFkbWluIn0.N8lO9SgoAet2hY0v8IesOen7xMf2jO_lipxNUr-Bb-E', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 13, 46, 5, 862381), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 13, 46, 5, 865218), 'updated_at': datetime.datetime(2023, 4, 4, 13, 46, 5, 865223)}
[2023-04-04 15:46:11 +0200] [13957] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:46:11 +0200] [13957] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f87143097c0>
[2023-04-04 15:46:11 +0200] [13957] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:46:11 +0200] [13957] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:46:11 +0200] [13957] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f871179da30>
[2023-04-04 15:46:11 +0200] [13957] [INFO] [services.teacher_service] TeacherService: Create teachers
[2023-04-04 15:46:11 +0200] [13957] [TRACE] [services.teacher_service] TeacherService: Register teachers with passed data [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date='28-02-2002'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date='28-02-2002')]
[2023-04-04 15:46:11 +0200] [13957] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string1' second_name='string1' last_name='string' birth_date='28-02-2002'
[2023-04-04 15:46:11 +0200] [13957] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:46:11 +0200] [13957] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 15:46:11 +0200] [13957] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database []
[2023-04-04 15:46:11 +0200] [13957] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string3' second_name=None last_name='string3' birth_date='28-02-2002'
[2023-04-04 15:46:11 +0200] [13957] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:46:11 +0200] [13957] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 15:46:11 +0200] [13957] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database []
[2023-04-04 15:46:11 +0200] [13957] [DEBUG] [services.teacher_service] TeacherService: Teachers to be registered after check: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='FrGSmQFj7wA9IA'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='gnIQT8X3-jQtGQ')]
[2023-04-04 15:46:11 +0200] [13957] [INFO] [db.dao.base_dao] TeacherModel DAO: Create db entry
[2023-04-04 15:46:11 +0200] [13957] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed for creation: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='FrGSmQFj7wA9IA'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='gnIQT8X3-jQtGQ')]
[2023-04-04 15:46:11 +0200] [13957] [DEBUG] [db.dao.base_dao] TeacherModel DAO: Created entries in database: [{'id': UUID('29f8175f-a0b6-4c62-b765-6ed7747d6dcc'), 'registration_token': 'FrGSmQFj7wA9IA', 'registered_user': False, 'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 13, 46, 11, 216505), 'updated_at': datetime.datetime(2023, 4, 4, 13, 46, 11, 216509), 'deleted_at': None}, {'id': UUID('831e441e-dff4-4679-9d64-998d9d7b10cd'), 'registration_token': 'gnIQT8X3-jQtGQ', 'registered_user': False, 'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 13, 46, 11, 230136), 'updated_at': datetime.datetime(2023, 4, 4, 13, 46, 11, 230143), 'deleted_at': None}]
[2023-04-04 15:46:11 +0200] [13957] [DEBUG] [services.teacher_service] TeacherService: Received the answer from database: [<db.models.TeacherModel.TeacherModel object at 0x7f871173c0a0>, <db.models.TeacherModel.TeacherModel object at 0x7f87142bb070>]
[2023-04-04 15:46:14 +0200] [13957] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:46:14 +0200] [13957] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f871182eeb0>
[2023-04-04 15:46:14 +0200] [13957] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:46:14 +0200] [13957] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:46:14 +0200] [13957] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f8711762610>
[2023-04-04 15:48:20 +0200] [14056] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 15:48:20 +0200] [14056] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$23VRw6ySxmvhem.JOpsaoOzyU0PxCrnaBnEsmsyVXd.4qhX/O243u' email='userrrr@user' id=None
[2023-04-04 15:48:20 +0200] [14056] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('e93d000a-654e-486c-8cd3-3ceed6fa322a'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$23VRw6ySxmvhem.JOpsaoOzyU0PxCrnaBnEsmsyVXd.4qhX/O243u', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 13, 48, 20, 416564), 'updated_at': datetime.datetime(2023, 4, 4, 13, 48, 20, 416569)}
[2023-04-04 15:48:23 +0200] [14056] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 15:48:23 +0200] [14056] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 15:48:23 +0200] [14056] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:48:23 +0200] [14056] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:48:23 +0200] [14056] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f92769e6850>
[2023-04-04 15:48:23 +0200] [14056] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 15:48:23 +0200] [14056] [TRACE] [services.auth_service] AuthService: Create session with user: e93d000a-654e-486c-8cd3-3ceed6fa322a
[2023-04-04 15:48:23 +0200] [14056] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 15:48:23 +0200] [14056] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('e93d000a-654e-486c-8cd3-3ceed6fa322a') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 13, 53, 23, 631286) refresh_expire_time=datetime.datetime(2023, 4, 6, 13, 48, 23, 631438) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTY0MDMsInN1YiI6ImFkbWluIn0.5jGDpEvnpAPyJetY3D5ueLMHyruSrJEiww9jL2GwBU4' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODg5MDMsInN1YiI6ImFkbWluIn0.Fvasr0i9FHMFNvkNU8ROOM92jgDXlBFYH1raYw7-Rcw' blocked=False is_active=True
[2023-04-04 15:48:23 +0200] [14056] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('773989e7-3d8c-41b1-a757-ea9a1d99274b'), 'user_id': UUID('e93d000a-654e-486c-8cd3-3ceed6fa322a'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTY0MDMsInN1YiI6ImFkbWluIn0.5jGDpEvnpAPyJetY3D5ueLMHyruSrJEiww9jL2GwBU4', 'access_expire_time': datetime.datetime(2023, 4, 4, 13, 53, 23, 631286), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODg5MDMsInN1YiI6ImFkbWluIn0.Fvasr0i9FHMFNvkNU8ROOM92jgDXlBFYH1raYw7-Rcw', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 13, 48, 23, 631438), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 13, 48, 23, 633904), 'updated_at': datetime.datetime(2023, 4, 4, 13, 48, 23, 633908)}
[2023-04-04 15:48:27 +0200] [14056] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:48:27 +0200] [14056] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f9279564550>
[2023-04-04 15:48:27 +0200] [14056] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:48:27 +0200] [14056] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:48:27 +0200] [14056] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f9276a09040>
[2023-04-04 15:48:27 +0200] [14056] [INFO] [services.student_service] StudentService: Create students
[2023-04-04 15:48:27 +0200] [14056] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-04 15:48:27 +0200] [14056] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_1' second_name=None last_name='student_1' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-04 15:48:27 +0200] [14056] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-04 15:48:27 +0200] [14056] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-04 15:48:28 +0200] [14056] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database []
[2023-04-04 15:48:28 +0200] [14056] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='gncRQT1DEwlrKQ')]
[2023-04-04 15:48:28 +0200] [14056] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-04 15:48:28 +0200] [14056] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='gncRQT1DEwlrKQ')]
[2023-04-04 15:48:28 +0200] [14056] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('57f2a8cc-bc4f-4e19-a4a9-07d96f574050'), 'registration_token': 'gncRQT1DEwlrKQ', 'registered_user': False, 'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 4, 13, 48, 28, 628651), 'updated_at': datetime.datetime(2023, 4, 4, 13, 48, 28, 628655), 'deleted_at': None}]
[2023-04-04 15:48:28 +0200] [14056] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7f92796be5e0>]
[2023-04-04 15:48:30 +0200] [14056] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:48:30 +0200] [14056] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f92793cd790>
[2023-04-04 15:48:30 +0200] [14056] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:48:30 +0200] [14056] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:48:30 +0200] [14056] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f92769ba940>
[2023-04-04 15:48:30 +0200] [14056] [INFO] [services.teacher_service] TeacherService: Create teachers
[2023-04-04 15:48:30 +0200] [14056] [TRACE] [services.teacher_service] TeacherService: Register teachers with passed data [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date='28-02-2002'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date='28-02-2002')]
[2023-04-04 15:48:30 +0200] [14056] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string1' second_name='string1' last_name='string' birth_date='28-02-2002'
[2023-04-04 15:48:30 +0200] [14056] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:48:30 +0200] [14056] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 15:48:30 +0200] [14056] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database []
[2023-04-04 15:48:30 +0200] [14056] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string3' second_name=None last_name='string3' birth_date='28-02-2002'
[2023-04-04 15:48:30 +0200] [14056] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:48:30 +0200] [14056] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 15:48:30 +0200] [14056] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database []
[2023-04-04 15:48:30 +0200] [14056] [DEBUG] [services.teacher_service] TeacherService: Teachers to be registered after check: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='wNt5VeaD4NdGcQ'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='SP97JJRwkiWufQ')]
[2023-04-04 15:48:30 +0200] [14056] [INFO] [db.dao.base_dao] TeacherModel DAO: Create db entry
[2023-04-04 15:48:30 +0200] [14056] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed for creation: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='wNt5VeaD4NdGcQ'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='SP97JJRwkiWufQ')]
[2023-04-04 15:48:30 +0200] [14056] [DEBUG] [db.dao.base_dao] TeacherModel DAO: Created entries in database: [{'id': UUID('29e708af-5aad-46af-b6e3-4647cead934e'), 'registration_token': 'wNt5VeaD4NdGcQ', 'registered_user': False, 'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 13, 48, 30, 971852), 'updated_at': datetime.datetime(2023, 4, 4, 13, 48, 30, 971856), 'deleted_at': None}, {'id': UUID('f5eca131-979a-4fe5-b89f-b2073726eee1'), 'registration_token': 'SP97JJRwkiWufQ', 'registered_user': False, 'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 13, 48, 30, 987459), 'updated_at': datetime.datetime(2023, 4, 4, 13, 48, 30, 987465), 'deleted_at': None}]
[2023-04-04 15:48:30 +0200] [14056] [DEBUG] [services.teacher_service] TeacherService: Received the answer from database: [<db.models.TeacherModel.TeacherModel object at 0x7f9279564a90>, <db.models.TeacherModel.TeacherModel object at 0x7f92793d78e0>]
[2023-04-04 15:48:45 +0200] [14056] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:48:45 +0200] [14056] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f92793dfcd0>
[2023-04-04 15:48:45 +0200] [14056] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:48:45 +0200] [14056] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:48:45 +0200] [14056] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f9276965130>
[2023-04-04 15:49:15 +0200] [14128] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 15:49:15 +0200] [14128] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$7plxyVc8VYzvxQFGKMsVxeqnPt0uSo6If12YCRCcnoQJSwfNhlCz.' email='userrrr@user' id=None
[2023-04-04 15:49:15 +0200] [14128] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('015442c6-0821-4fb5-a8aa-b97884f31990'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$7plxyVc8VYzvxQFGKMsVxeqnPt0uSo6If12YCRCcnoQJSwfNhlCz.', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 13, 49, 15, 430086), 'updated_at': datetime.datetime(2023, 4, 4, 13, 49, 15, 430092)}
[2023-04-04 15:49:17 +0200] [14128] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 15:49:17 +0200] [14128] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 15:49:17 +0200] [14128] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:49:17 +0200] [14128] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:49:17 +0200] [14128] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fb53c2a2d30>
[2023-04-04 15:49:17 +0200] [14128] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 15:49:17 +0200] [14128] [TRACE] [services.auth_service] AuthService: Create session with user: 015442c6-0821-4fb5-a8aa-b97884f31990
[2023-04-04 15:49:17 +0200] [14128] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 15:49:17 +0200] [14128] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('015442c6-0821-4fb5-a8aa-b97884f31990') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 13, 54, 17, 570185) refresh_expire_time=datetime.datetime(2023, 4, 6, 13, 49, 17, 570373) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTY0NTcsInN1YiI6ImFkbWluIn0.0OqFFLW741RiJF1YHXpt_-6pKj3azt17PL6ED30lXW4' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODg5NTcsInN1YiI6ImFkbWluIn0.hY7mq6lcW63RLf9d8k6OuAGhV2lvpHfmBPd33Y0pWvQ' blocked=False is_active=True
[2023-04-04 15:49:17 +0200] [14128] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('359006d4-6c20-4599-be2b-38d1b6c414dd'), 'user_id': UUID('015442c6-0821-4fb5-a8aa-b97884f31990'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTY0NTcsInN1YiI6ImFkbWluIn0.0OqFFLW741RiJF1YHXpt_-6pKj3azt17PL6ED30lXW4', 'access_expire_time': datetime.datetime(2023, 4, 4, 13, 54, 17, 570185), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODg5NTcsInN1YiI6ImFkbWluIn0.hY7mq6lcW63RLf9d8k6OuAGhV2lvpHfmBPd33Y0pWvQ', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 13, 49, 17, 570373), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 13, 49, 17, 573580), 'updated_at': datetime.datetime(2023, 4, 4, 13, 49, 17, 573586)}
[2023-04-04 15:49:19 +0200] [14128] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:49:19 +0200] [14128] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fb53eca7d60>
[2023-04-04 15:49:19 +0200] [14128] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:49:19 +0200] [14128] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:49:19 +0200] [14128] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fb53c2b99d0>
[2023-04-04 15:49:19 +0200] [14128] [INFO] [services.teacher_service] TeacherService: Create teachers
[2023-04-04 15:49:19 +0200] [14128] [TRACE] [services.teacher_service] TeacherService: Register teachers with passed data [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date='28-02-2002'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date='28-02-2002')]
[2023-04-04 15:49:19 +0200] [14128] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string1' second_name='string1' last_name='string' birth_date='28-02-2002'
[2023-04-04 15:49:19 +0200] [14128] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:49:19 +0200] [14128] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 15:49:19 +0200] [14128] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database []
[2023-04-04 15:49:19 +0200] [14128] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string3' second_name=None last_name='string3' birth_date='28-02-2002'
[2023-04-04 15:49:19 +0200] [14128] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:49:19 +0200] [14128] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 15:49:19 +0200] [14128] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database []
[2023-04-04 15:49:19 +0200] [14128] [DEBUG] [services.teacher_service] TeacherService: Teachers to be registered after check: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='Eq7s4uTLS2ua5g'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='0o5iZ2mWWTWWTA')]
[2023-04-04 15:49:19 +0200] [14128] [INFO] [db.dao.base_dao] TeacherModel DAO: Create db entry
[2023-04-04 15:49:19 +0200] [14128] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed for creation: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='Eq7s4uTLS2ua5g'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='0o5iZ2mWWTWWTA')]
[2023-04-04 15:49:19 +0200] [14128] [DEBUG] [db.dao.base_dao] TeacherModel DAO: Created entries in database: [{'id': UUID('3eb3746b-c1e1-406b-bfe6-6a53a3252a74'), 'registration_token': 'Eq7s4uTLS2ua5g', 'registered_user': False, 'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 13, 49, 19, 241779), 'updated_at': datetime.datetime(2023, 4, 4, 13, 49, 19, 241784), 'deleted_at': None}, {'id': UUID('057cfd2a-57c9-49fc-87c0-83039c895daf'), 'registration_token': '0o5iZ2mWWTWWTA', 'registered_user': False, 'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 13, 49, 19, 255987), 'updated_at': datetime.datetime(2023, 4, 4, 13, 49, 19, 255993), 'deleted_at': None}]
[2023-04-04 15:49:19 +0200] [14128] [DEBUG] [services.teacher_service] TeacherService: Received the answer from database: [<db.models.TeacherModel.TeacherModel object at 0x7fb53c2b4310>, <db.models.TeacherModel.TeacherModel object at 0x7fb53ef55640>]
[2023-04-04 15:49:22 +0200] [14128] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:49:22 +0200] [14128] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fb53ed1ae20>
[2023-04-04 15:49:22 +0200] [14128] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:49:22 +0200] [14128] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:49:22 +0200] [14128] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fb53c276fd0>
[2023-04-04 15:50:18 +0200] [14204] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 15:50:18 +0200] [14204] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$cT5qcig8naupksVpzyghKuClrEja5hHzQ33GBuIVInPBkBiNdVxva' email='userrrr@user' id=None
[2023-04-04 15:50:18 +0200] [14204] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('3e5532f7-886b-4e5c-8973-3e4787d01d24'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$cT5qcig8naupksVpzyghKuClrEja5hHzQ33GBuIVInPBkBiNdVxva', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 13, 50, 18, 950778), 'updated_at': datetime.datetime(2023, 4, 4, 13, 50, 18, 950783)}
[2023-04-04 15:50:22 +0200] [14204] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 15:50:22 +0200] [14204] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 15:50:22 +0200] [14204] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:50:22 +0200] [14204] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:50:22 +0200] [14204] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fe7c9cc2b50>
[2023-04-04 15:50:23 +0200] [14204] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 15:50:23 +0200] [14204] [TRACE] [services.auth_service] AuthService: Create session with user: 3e5532f7-886b-4e5c-8973-3e4787d01d24
[2023-04-04 15:50:23 +0200] [14204] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 15:50:23 +0200] [14204] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('3e5532f7-886b-4e5c-8973-3e4787d01d24') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 13, 55, 23, 66036) refresh_expire_time=datetime.datetime(2023, 4, 6, 13, 50, 23, 66216) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTY1MjMsInN1YiI6ImFkbWluIn0.f2kk2Zxz0M1K-HrRlrG2WNk6-hFIF2WwYGZsgtFM6z8' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODkwMjMsInN1YiI6ImFkbWluIn0.LkaPlv7DBN-Xp5r865x6wv1CYhfLoYJ2Po13oIUdzZc' blocked=False is_active=True
[2023-04-04 15:50:23 +0200] [14204] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('1dd90515-f97a-4b37-a045-2c35b0bd7178'), 'user_id': UUID('3e5532f7-886b-4e5c-8973-3e4787d01d24'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MTY1MjMsInN1YiI6ImFkbWluIn0.f2kk2Zxz0M1K-HrRlrG2WNk6-hFIF2WwYGZsgtFM6z8', 'access_expire_time': datetime.datetime(2023, 4, 4, 13, 55, 23, 66036), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3ODkwMjMsInN1YiI6ImFkbWluIn0.LkaPlv7DBN-Xp5r865x6wv1CYhfLoYJ2Po13oIUdzZc', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 13, 50, 23, 66216), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 13, 50, 23, 68782), 'updated_at': datetime.datetime(2023, 4, 4, 13, 50, 23, 68786)}
[2023-04-04 15:50:26 +0200] [14204] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:50:26 +0200] [14204] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fe7cc83e7f0>
[2023-04-04 15:50:26 +0200] [14204] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:50:26 +0200] [14204] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:50:26 +0200] [14204] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fe7c9ce62e0>
[2023-04-04 15:50:26 +0200] [14204] [INFO] [services.teacher_service] TeacherService: Create teachers
[2023-04-04 15:50:26 +0200] [14204] [TRACE] [services.teacher_service] TeacherService: Register teachers with passed data [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date='28-02-2002'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date='28-02-2002')]
[2023-04-04 15:50:26 +0200] [14204] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string1' second_name='string1' last_name='string' birth_date='28-02-2002'
[2023-04-04 15:50:26 +0200] [14204] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:50:26 +0200] [14204] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 15:50:26 +0200] [14204] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database []
[2023-04-04 15:50:26 +0200] [14204] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string3' second_name=None last_name='string3' birth_date='28-02-2002'
[2023-04-04 15:50:26 +0200] [14204] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:50:26 +0200] [14204] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 15:50:26 +0200] [14204] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database []
[2023-04-04 15:50:26 +0200] [14204] [DEBUG] [services.teacher_service] TeacherService: Teachers to be registered after check: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='M91YkjNzsViTig'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='i5tf8wQ31Z6amA')]
[2023-04-04 15:50:26 +0200] [14204] [INFO] [db.dao.base_dao] TeacherModel DAO: Create db entry
[2023-04-04 15:50:26 +0200] [14204] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed for creation: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='M91YkjNzsViTig'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='i5tf8wQ31Z6amA')]
[2023-04-04 15:50:26 +0200] [14204] [DEBUG] [db.dao.base_dao] TeacherModel DAO: Created entries in database: [{'id': UUID('2aba4cb0-16a9-4794-a297-e163518650b4'), 'registration_token': 'M91YkjNzsViTig', 'registered_user': False, 'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 13, 50, 26, 140163), 'updated_at': datetime.datetime(2023, 4, 4, 13, 50, 26, 140167), 'deleted_at': None}, {'id': UUID('f90168f1-deeb-4e51-8aaa-1825d1244e7f'), 'registration_token': 'i5tf8wQ31Z6amA', 'registered_user': False, 'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 13, 50, 26, 153960), 'updated_at': datetime.datetime(2023, 4, 4, 13, 50, 26, 153967), 'deleted_at': None}]
[2023-04-04 15:50:26 +0200] [14204] [DEBUG] [services.teacher_service] TeacherService: Received the answer from database: [<db.models.TeacherModel.TeacherModel object at 0x7fe7cc83e670>, <db.models.TeacherModel.TeacherModel object at 0x7fe7c9cd5f70>]
[2023-04-04 15:50:28 +0200] [14204] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:50:28 +0200] [14204] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fe7cd307cd0>
[2023-04-04 15:50:28 +0200] [14204] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:50:28 +0200] [14204] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:50:28 +0200] [14204] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fe7c9c98940>
[2023-04-04 15:50:28 +0200] [14204] [INFO] [services.teacher_service] TeacherService: Get all not deleted teachers
[2023-04-04 15:50:28 +0200] [14204] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:50:28 +0200] [14204] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {}
[2023-04-04 15:50:28 +0200] [14204] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database [<db.models.TeacherModel.TeacherModel object at 0x7fe7c9c98d00>, <db.models.TeacherModel.TeacherModel object at 0x7fe7c9c98dc0>]
[2023-04-04 15:50:44 +0200] [14204] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:50:44 +0200] [14204] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fe7cc7f4280>
[2023-04-04 15:50:44 +0200] [14204] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:50:44 +0200] [14204] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:50:44 +0200] [14204] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fe7c9c98760>
[2023-04-04 15:50:44 +0200] [14204] [INFO] [services.teacher_service] TeacherService: Delete teacher (mark student as deleted)
[2023-04-04 15:50:44 +0200] [14204] [TRACE] [services.teacher_service] TeacherService: Patch teacher with id: 2aba4cb0-16a9-4794-a297-e163518650b4 - with following data: deleted_at=datetime.datetime(2023, 4, 4, 13, 50, 44, 453323)
[2023-04-04 15:50:44 +0200] [14204] [INFO] [db.dao.base_dao] TeacherModel DAO: Update db entry
[2023-04-04 15:50:44 +0200] [14204] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed for update: item_id: 2aba4cb0-16a9-4794-a297-e163518650b4, patch_data: deleted_at=datetime.datetime(2023, 4, 4, 13, 50, 44, 453323)
[2023-04-04 15:50:44 +0200] [14204] [DEBUG] [db.dao.base_dao] TeacherModel DAO: Received updated entry from the database {'id': UUID('2aba4cb0-16a9-4794-a297-e163518650b4'), 'registration_token': 'M91YkjNzsViTig', 'registered_user': False, 'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 13, 50, 26, 140163), 'updated_at': datetime.datetime(2023, 4, 4, 16, 50, 44, 454580), 'deleted_at': datetime.datetime(2023, 4, 4, 13, 50, 44, 453323)}
[2023-04-04 15:50:50 +0200] [14204] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 15:50:50 +0200] [14204] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fe7c9c73fa0>
[2023-04-04 15:50:50 +0200] [14204] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 15:50:50 +0200] [14204] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 15:50:50 +0200] [14204] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fe7c9c36370>
[2023-04-04 15:50:50 +0200] [14204] [INFO] [services.teacher_service] TeacherService: Get all not deleted teachers
[2023-04-04 15:50:50 +0200] [14204] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 15:50:50 +0200] [14204] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {}
[2023-04-04 15:50:50 +0200] [14204] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database [<db.models.TeacherModel.TeacherModel object at 0x7fe7c9c36190>, <db.models.TeacherModel.TeacherModel object at 0x7fe7c9c36490>]
[2023-04-04 17:11:02 +0200] [18446] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 17:11:02 +0200] [18446] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f7b09fdbd30>
[2023-04-04 17:11:07 +0200] [18446] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 17:11:07 +0200] [18446] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$yjmtutyNvR/lXmnkKp2fmuXQIGYC67l/Q7k8zcr5sQxMer06M8gIa' email='userrrr@user' id=None
[2023-04-04 17:11:07 +0200] [18446] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('c8517cea-e088-4675-8324-5732d752051b'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$yjmtutyNvR/lXmnkKp2fmuXQIGYC67l/Q7k8zcr5sQxMer06M8gIa', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 11, 7, 883480), 'updated_at': datetime.datetime(2023, 4, 4, 15, 11, 7, 883485)}
[2023-04-04 17:11:10 +0200] [18446] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 17:11:10 +0200] [18446] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 17:11:10 +0200] [18446] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:11:10 +0200] [18446] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:11:10 +0200] [18446] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f7b07d96a30>
[2023-04-04 17:11:10 +0200] [18446] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 17:11:10 +0200] [18446] [TRACE] [services.auth_service] AuthService: Create session with user: c8517cea-e088-4675-8324-5732d752051b
[2023-04-04 17:11:10 +0200] [18446] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 17:11:10 +0200] [18446] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('c8517cea-e088-4675-8324-5732d752051b') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 15, 16, 10, 592318) refresh_expire_time=datetime.datetime(2023, 4, 6, 15, 11, 10, 592456) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjEzNzAsInN1YiI6ImFkbWluIn0.FipzTbLXdSv_LX2M3ayyd6M-ec7dzvV9B-vmJLIokdQ' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTM4NzAsInN1YiI6ImFkbWluIn0._-rerD5oFcJ1zAvi0ZBs576MFKqMbT4XMDbU6bI2p4Y' blocked=False is_active=True
[2023-04-04 17:11:10 +0200] [18446] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('58f409bf-1338-495c-a0c0-91227e6f7875'), 'user_id': UUID('c8517cea-e088-4675-8324-5732d752051b'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjEzNzAsInN1YiI6ImFkbWluIn0.FipzTbLXdSv_LX2M3ayyd6M-ec7dzvV9B-vmJLIokdQ', 'access_expire_time': datetime.datetime(2023, 4, 4, 15, 16, 10, 592318), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTM4NzAsInN1YiI6ImFkbWluIn0._-rerD5oFcJ1zAvi0ZBs576MFKqMbT4XMDbU6bI2p4Y', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 15, 11, 10, 592456), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 11, 10, 594858), 'updated_at': datetime.datetime(2023, 4, 4, 15, 11, 10, 594862)}
[2023-04-04 17:11:12 +0200] [18446] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 17:11:12 +0200] [18446] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f7b09fdb130>
[2023-04-04 17:11:12 +0200] [18446] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:11:12 +0200] [18446] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:11:12 +0200] [18446] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f7b07525f70>
[2023-04-04 17:13:16 +0200] [18681] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 17:13:16 +0200] [18681] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$JnI1kvZVTo8E34FMi4a3guRDzoWVCGPw4afhANyB0SMFXSnGNcJU.' email='userrrr@user' id=None
[2023-04-04 17:13:16 +0200] [18681] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('5d6549db-3ed2-4baf-90d8-d4bd84898d00'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$JnI1kvZVTo8E34FMi4a3guRDzoWVCGPw4afhANyB0SMFXSnGNcJU.', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 13, 16, 476300), 'updated_at': datetime.datetime(2023, 4, 4, 15, 13, 16, 476306)}
[2023-04-04 17:13:19 +0200] [18681] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 17:13:19 +0200] [18681] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 17:13:19 +0200] [18681] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:13:19 +0200] [18681] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:13:19 +0200] [18681] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fe39c673610>
[2023-04-04 17:13:19 +0200] [18681] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 17:13:19 +0200] [18681] [TRACE] [services.auth_service] AuthService: Create session with user: 5d6549db-3ed2-4baf-90d8-d4bd84898d00
[2023-04-04 17:13:19 +0200] [18681] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 17:13:19 +0200] [18681] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('5d6549db-3ed2-4baf-90d8-d4bd84898d00') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 15, 18, 19, 490611) refresh_expire_time=datetime.datetime(2023, 4, 6, 15, 13, 19, 490769) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjE0OTksInN1YiI6ImFkbWluIn0.QIJ-_jCr17p6oD_7thHCJSBLgDVY-OgC7GQN5G8R308' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTM5OTksInN1YiI6ImFkbWluIn0.4yh0BURV11vJ89wEQTp7tvDHHFbl0PoThqiDcJtwg20' blocked=False is_active=True
[2023-04-04 17:13:19 +0200] [18681] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('1d539d64-af56-4f8a-8c03-38d37fb2854a'), 'user_id': UUID('5d6549db-3ed2-4baf-90d8-d4bd84898d00'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjE0OTksInN1YiI6ImFkbWluIn0.QIJ-_jCr17p6oD_7thHCJSBLgDVY-OgC7GQN5G8R308', 'access_expire_time': datetime.datetime(2023, 4, 4, 15, 18, 19, 490611), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTM5OTksInN1YiI6ImFkbWluIn0.4yh0BURV11vJ89wEQTp7tvDHHFbl0PoThqiDcJtwg20', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 15, 13, 19, 490769), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 13, 19, 493802), 'updated_at': datetime.datetime(2023, 4, 4, 15, 13, 19, 493809)}
[2023-04-04 17:13:21 +0200] [18681] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 17:13:21 +0200] [18681] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fe39eaa0fa0>
[2023-04-04 17:13:21 +0200] [18681] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:13:21 +0200] [18681] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:13:21 +0200] [18681] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fe39c682be0>
[2023-04-04 17:14:20 +0200] [18681] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 17:14:20 +0200] [18681] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$/F2fBA8VefMMKAGy3/gMUuSCseYNjHMzAGY6bB/02Rrjr9zQfWbFC' email='userrrr@user' id=None
[2023-04-04 17:14:30 +0200] [18681] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 17:14:30 +0200] [18681] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fe39c619b50>
[2023-04-04 17:14:30 +0200] [18681] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:14:30 +0200] [18681] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:14:30 +0200] [18681] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fe39c673610>
[2023-04-04 17:18:39 +0200] [18935] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 17:18:39 +0200] [18935] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$PEAl40RzJGIqOQn042ejHOl9qxKkSuoZSWCwuJnF2zI.cZ6SvYRay' email='userrrr@user' id=None
[2023-04-04 17:18:39 +0200] [18935] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('8ab15886-74d0-4541-84ec-556638fae5d5'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$PEAl40RzJGIqOQn042ejHOl9qxKkSuoZSWCwuJnF2zI.cZ6SvYRay', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 18, 39, 59571), 'updated_at': datetime.datetime(2023, 4, 4, 15, 18, 39, 59576)}
[2023-04-04 17:18:41 +0200] [18935] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 17:18:41 +0200] [18935] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 17:18:41 +0200] [18935] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:18:41 +0200] [18935] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:18:41 +0200] [18935] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fc4bc1de5b0>
[2023-04-04 17:18:41 +0200] [18935] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 17:18:41 +0200] [18935] [TRACE] [services.auth_service] AuthService: Create session with user: 8ab15886-74d0-4541-84ec-556638fae5d5
[2023-04-04 17:18:41 +0200] [18935] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 17:18:41 +0200] [18935] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('8ab15886-74d0-4541-84ec-556638fae5d5') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 15, 23, 41, 716472) refresh_expire_time=datetime.datetime(2023, 4, 6, 15, 18, 41, 716617) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjE4MjEsInN1YiI6ImFkbWluIn0.GhITHMeccXoxBDnHLcA-L0QWqYHhR8-s7ng_V9zQjX0' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTQzMjEsInN1YiI6ImFkbWluIn0.hkLLfUsfVsBv6w3oKs6FEOtyOAClhjYXv_XL5STp9bM' blocked=False is_active=True
[2023-04-04 17:18:41 +0200] [18935] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('e2ebafed-20c2-4cf6-9cd2-ee2dee74b3bb'), 'user_id': UUID('8ab15886-74d0-4541-84ec-556638fae5d5'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjE4MjEsInN1YiI6ImFkbWluIn0.GhITHMeccXoxBDnHLcA-L0QWqYHhR8-s7ng_V9zQjX0', 'access_expire_time': datetime.datetime(2023, 4, 4, 15, 23, 41, 716472), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTQzMjEsInN1YiI6ImFkbWluIn0.hkLLfUsfVsBv6w3oKs6FEOtyOAClhjYXv_XL5STp9bM', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 15, 18, 41, 716617), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 18, 41, 718840), 'updated_at': datetime.datetime(2023, 4, 4, 15, 18, 41, 718844)}
[2023-04-04 17:18:43 +0200] [18935] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 17:18:43 +0200] [18935] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fc4bee0bd60>
[2023-04-04 17:18:43 +0200] [18935] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:18:43 +0200] [18935] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:18:43 +0200] [18935] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fc4bc1eebb0>
[2023-04-04 17:19:11 +0200] [18993] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 17:19:11 +0200] [18993] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$JL.dO8LuynCYOIVzTb2jmuHD99Wm1qkOp7zSSVi7iJjk9S6BH.LcO' email='userrrr@user' id=None
[2023-04-04 17:19:11 +0200] [18993] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('64e71ebc-f19d-4dec-95f1-b4e11f0e0476'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$JL.dO8LuynCYOIVzTb2jmuHD99Wm1qkOp7zSSVi7iJjk9S6BH.LcO', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 19, 11, 148195), 'updated_at': datetime.datetime(2023, 4, 4, 15, 19, 11, 148202)}
[2023-04-04 17:19:13 +0200] [18993] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 17:19:13 +0200] [18993] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 17:19:13 +0200] [18993] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:19:13 +0200] [18993] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:19:13 +0200] [18993] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fdd65926550>
[2023-04-04 17:19:13 +0200] [18993] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 17:19:13 +0200] [18993] [TRACE] [services.auth_service] AuthService: Create session with user: 64e71ebc-f19d-4dec-95f1-b4e11f0e0476
[2023-04-04 17:19:13 +0200] [18993] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 17:19:13 +0200] [18993] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('64e71ebc-f19d-4dec-95f1-b4e11f0e0476') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 15, 24, 13, 451355) refresh_expire_time=datetime.datetime(2023, 4, 6, 15, 19, 13, 451525) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjE4NTMsInN1YiI6ImFkbWluIn0.Us262MJLvc0t0vTgYJb7Yl99rodcJIdvS7sFA4QsdD0' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTQzNTMsInN1YiI6ImFkbWluIn0.q42E2ksPbklQhMZwBbc9HmxFJyTjL5f3TZx5-tBPX5E' blocked=False is_active=True
[2023-04-04 17:19:13 +0200] [18993] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('fe43d4e7-ad6b-4729-a16f-63252253afee'), 'user_id': UUID('64e71ebc-f19d-4dec-95f1-b4e11f0e0476'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjE4NTMsInN1YiI6ImFkbWluIn0.Us262MJLvc0t0vTgYJb7Yl99rodcJIdvS7sFA4QsdD0', 'access_expire_time': datetime.datetime(2023, 4, 4, 15, 24, 13, 451355), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTQzNTMsInN1YiI6ImFkbWluIn0.q42E2ksPbklQhMZwBbc9HmxFJyTjL5f3TZx5-tBPX5E', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 15, 19, 13, 451525), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 19, 13, 454661), 'updated_at': datetime.datetime(2023, 4, 4, 15, 19, 13, 454667)}
[2023-04-04 17:19:15 +0200] [18993] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 17:19:15 +0200] [18993] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7fdd685533d0>
[2023-04-04 17:19:15 +0200] [18993] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:19:15 +0200] [18993] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:19:15 +0200] [18993] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7fdd65937b50>
[2023-04-04 17:23:05 +0200] [19093] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 17:23:05 +0200] [19093] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$PAGzcS1Ks9OetGy67af/wejm6gjH.SDWuNHdIDJlyeeG/l0PcQgC.' email='userrrr@user' id=None
[2023-04-04 17:23:05 +0200] [19093] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('bb74895d-be8a-4701-b5e5-31cfe1b31696'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$PAGzcS1Ks9OetGy67af/wejm6gjH.SDWuNHdIDJlyeeG/l0PcQgC.', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 23, 5, 742437), 'updated_at': datetime.datetime(2023, 4, 4, 15, 23, 5, 742441)}
[2023-04-04 17:23:07 +0200] [19093] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 17:23:07 +0200] [19093] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 17:23:07 +0200] [19093] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:23:07 +0200] [19093] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:23:07 +0200] [19093] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f0644a29580>
[2023-04-04 17:23:08 +0200] [19093] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 17:23:08 +0200] [19093] [TRACE] [services.auth_service] AuthService: Create session with user: bb74895d-be8a-4701-b5e5-31cfe1b31696
[2023-04-04 17:23:08 +0200] [19093] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 17:23:08 +0200] [19093] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('bb74895d-be8a-4701-b5e5-31cfe1b31696') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 15, 28, 8, 185644) refresh_expire_time=datetime.datetime(2023, 4, 6, 15, 23, 8, 185809) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjIwODgsInN1YiI6ImFkbWluIn0.l0VuTOYzORVulZep4coMFzObd7KY138DopqiGbQ7itw' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTQ1ODgsInN1YiI6ImFkbWluIn0.TFI1hnxQW86OawUhQcE6iocnHsN2pJY2ZZiCZ2KFWCk' blocked=False is_active=True
[2023-04-04 17:23:08 +0200] [19093] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('beb242e9-91e5-4a8d-8e21-12bb828560c6'), 'user_id': UUID('bb74895d-be8a-4701-b5e5-31cfe1b31696'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjIwODgsInN1YiI6ImFkbWluIn0.l0VuTOYzORVulZep4coMFzObd7KY138DopqiGbQ7itw', 'access_expire_time': datetime.datetime(2023, 4, 4, 15, 28, 8, 185644), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTQ1ODgsInN1YiI6ImFkbWluIn0.TFI1hnxQW86OawUhQcE6iocnHsN2pJY2ZZiCZ2KFWCk', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 15, 23, 8, 185809), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 23, 8, 188319), 'updated_at': datetime.datetime(2023, 4, 4, 15, 23, 8, 188324)}
[2023-04-04 17:23:17 +0200] [19093] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 17:23:17 +0200] [19093] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <starlette.requests.Request object at 0x7f064758bbb0>
[2023-04-04 17:23:17 +0200] [19093] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:23:17 +0200] [19093] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:23:17 +0200] [19093] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f0644a39b80>
[2023-04-04 17:23:58 +0200] [19177] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 17:23:58 +0200] [19177] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$4hAJ6OvXTQely.XX96S1au3gMKBHaZKbQO3WKQOvU5dnDRAHShx.6' email='userrrr@user' id=None
[2023-04-04 17:23:58 +0200] [19177] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('f80e12af-e6a2-45cb-b0da-52b2e30b7602'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$4hAJ6OvXTQely.XX96S1au3gMKBHaZKbQO3WKQOvU5dnDRAHShx.6', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 23, 58, 211679), 'updated_at': datetime.datetime(2023, 4, 4, 15, 23, 58, 211683)}
[2023-04-04 17:24:01 +0200] [19177] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 17:24:01 +0200] [19177] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 17:24:01 +0200] [19177] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:24:01 +0200] [19177] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:24:01 +0200] [19177] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f10fc99a580>
[2023-04-04 17:24:02 +0200] [19177] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 17:24:02 +0200] [19177] [TRACE] [services.auth_service] AuthService: Create session with user: f80e12af-e6a2-45cb-b0da-52b2e30b7602
[2023-04-04 17:24:02 +0200] [19177] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 17:24:02 +0200] [19177] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('f80e12af-e6a2-45cb-b0da-52b2e30b7602') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 15, 29, 2, 12384) refresh_expire_time=datetime.datetime(2023, 4, 6, 15, 24, 2, 12541) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjIxNDIsInN1YiI6ImFkbWluIn0.LNsI1IZpR774qTo8SyP5Gd_4DeFBQDUMdo9HrLiLuq8' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTQ2NDIsInN1YiI6ImFkbWluIn0.bG95p8H1tz3E7hVCkkGQ1dZLgRXH4cTLHc8Ep1s0Ko8' blocked=False is_active=True
[2023-04-04 17:24:02 +0200] [19177] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('5859179f-4f3f-4c04-b8f5-44dd38b55cec'), 'user_id': UUID('f80e12af-e6a2-45cb-b0da-52b2e30b7602'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjIxNDIsInN1YiI6ImFkbWluIn0.LNsI1IZpR774qTo8SyP5Gd_4DeFBQDUMdo9HrLiLuq8', 'access_expire_time': datetime.datetime(2023, 4, 4, 15, 29, 2, 12384), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTQ2NDIsInN1YiI6ImFkbWluIn0.bG95p8H1tz3E7hVCkkGQ1dZLgRXH4cTLHc8Ep1s0Ko8', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 15, 24, 2, 12541), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 24, 2, 14964), 'updated_at': datetime.datetime(2023, 4, 4, 15, 24, 2, 14967)}
[2023-04-04 17:24:04 +0200] [19177] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 17:24:04 +0200] [19177] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: <coroutine object Request.json at 0x7f10fca274c0>
[2023-04-04 17:24:04 +0200] [19177] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:24:04 +0200] [19177] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:24:04 +0200] [19177] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f10fc94a4c0>
[2023-04-04 17:25:03 +0200] [19226] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 17:25:03 +0200] [19226] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$9nrpEVx9cBq9dqvpYje/feJ8Pb2CqfB/fXRZLhXIXwL1oPUplkpp2' email='userrrr@user' id=None
[2023-04-04 17:25:03 +0200] [19226] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('0cee9c15-ee5c-45f2-aa78-ecffb1564d6c'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$9nrpEVx9cBq9dqvpYje/feJ8Pb2CqfB/fXRZLhXIXwL1oPUplkpp2', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 25, 3, 742796), 'updated_at': datetime.datetime(2023, 4, 4, 15, 25, 3, 742801)}
[2023-04-04 17:25:05 +0200] [19226] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 17:25:05 +0200] [19226] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 17:25:05 +0200] [19226] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:25:05 +0200] [19226] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:25:05 +0200] [19226] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f1b9d4ac580>
[2023-04-04 17:25:05 +0200] [19226] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 17:25:05 +0200] [19226] [TRACE] [services.auth_service] AuthService: Create session with user: 0cee9c15-ee5c-45f2-aa78-ecffb1564d6c
[2023-04-04 17:25:05 +0200] [19226] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 17:25:05 +0200] [19226] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('0cee9c15-ee5c-45f2-aa78-ecffb1564d6c') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 15, 30, 5, 857855) refresh_expire_time=datetime.datetime(2023, 4, 6, 15, 25, 5, 858022) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjIyMDUsInN1YiI6ImFkbWluIn0.WA0AYcviRy1cDJU5MQy7mXAAdj6cgya6dCy9ZA7PRzg' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTQ3MDUsInN1YiI6ImFkbWluIn0.UB0YX8m7WyoRd-eC7HruykVVqCZ0VUgXP458pYtis_k' blocked=False is_active=True
[2023-04-04 17:25:05 +0200] [19226] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('496c6dca-7156-4396-9a22-583168cd464e'), 'user_id': UUID('0cee9c15-ee5c-45f2-aa78-ecffb1564d6c'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjIyMDUsInN1YiI6ImFkbWluIn0.WA0AYcviRy1cDJU5MQy7mXAAdj6cgya6dCy9ZA7PRzg', 'access_expire_time': datetime.datetime(2023, 4, 4, 15, 30, 5, 857855), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTQ3MDUsInN1YiI6ImFkbWluIn0.UB0YX8m7WyoRd-eC7HruykVVqCZ0VUgXP458pYtis_k', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 15, 25, 5, 858022), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 25, 5, 860535), 'updated_at': datetime.datetime(2023, 4, 4, 15, 25, 5, 860539)}
[2023-04-04 17:25:09 +0200] [19226] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 17:25:09 +0200] [19226] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: {'lesson_number': '1', 'start_time': '09:00', 'end_time': '10:00'}
[2023-04-04 17:25:09 +0200] [19226] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:25:09 +0200] [19226] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:25:09 +0200] [19226] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database <db.models.UserModel.UserModel object at 0x7f1b9d4bcb80>
[2023-04-04 17:26:21 +0200] [19317] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 17:26:21 +0200] [19317] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$gvoc2xHBBWIM/TcwNTJHjeXckwpYOqInX1IIUPjjjNUGDniTHg/De' email='userrrr@user' id=None
[2023-04-04 17:26:21 +0200] [19317] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('929af5b1-0254-43c5-bc53-29f0af35d67e'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$gvoc2xHBBWIM/TcwNTJHjeXckwpYOqInX1IIUPjjjNUGDniTHg/De', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 26, 21, 431233), 'updated_at': datetime.datetime(2023, 4, 4, 15, 26, 21, 431239)}
[2023-04-04 17:26:23 +0200] [19317] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 17:26:23 +0200] [19317] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 17:26:23 +0200] [19317] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:26:23 +0200] [19317] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:26:23 +0200] [19317] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database {'id': UUID('929af5b1-0254-43c5-bc53-29f0af35d67e'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$gvoc2xHBBWIM/TcwNTJHjeXckwpYOqInX1IIUPjjjNUGDniTHg/De', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 26, 21, 431233), 'updated_at': datetime.datetime(2023, 4, 4, 15, 26, 21, 431239)}
[2023-04-04 17:26:23 +0200] [19317] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 17:26:23 +0200] [19317] [TRACE] [services.auth_service] AuthService: Create session with user: 929af5b1-0254-43c5-bc53-29f0af35d67e
[2023-04-04 17:26:23 +0200] [19317] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 17:26:23 +0200] [19317] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('929af5b1-0254-43c5-bc53-29f0af35d67e') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 15, 31, 23, 593650) refresh_expire_time=datetime.datetime(2023, 4, 6, 15, 26, 23, 593805) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjIyODMsInN1YiI6ImFkbWluIn0.yeEFybSj3Gh4412JT3SaYGCO-0bkoGlb_Q9nfnUB-F4' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTQ3ODMsInN1YiI6ImFkbWluIn0.UL78B2FPcIS_DZ8ZgYpy0xPsNRS05vPzTyeUmvnlJCc' blocked=False is_active=True
[2023-04-04 17:26:23 +0200] [19317] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('7bd45fde-dd31-4054-83ed-c0dd0b38a4cf'), 'user_id': UUID('929af5b1-0254-43c5-bc53-29f0af35d67e'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjIyODMsInN1YiI6ImFkbWluIn0.yeEFybSj3Gh4412JT3SaYGCO-0bkoGlb_Q9nfnUB-F4', 'access_expire_time': datetime.datetime(2023, 4, 4, 15, 31, 23, 593650), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTQ3ODMsInN1YiI6ImFkbWluIn0.UL78B2FPcIS_DZ8ZgYpy0xPsNRS05vPzTyeUmvnlJCc', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 15, 26, 23, 593805), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 26, 23, 596620), 'updated_at': datetime.datetime(2023, 4, 4, 15, 26, 23, 596641)}
[2023-04-04 17:26:26 +0200] [19317] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 17:26:26 +0200] [19317] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: {'lesson_number': '1', 'start_time': '09:00', 'end_time': '10:00'}
[2023-04-04 17:26:26 +0200] [19317] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:26:26 +0200] [19317] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:26:26 +0200] [19317] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database {'id': UUID('929af5b1-0254-43c5-bc53-29f0af35d67e'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$gvoc2xHBBWIM/TcwNTJHjeXckwpYOqInX1IIUPjjjNUGDniTHg/De', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 26, 21, 431233), 'updated_at': datetime.datetime(2023, 4, 4, 15, 26, 21, 431239)}
[2023-04-04 17:39:21 +0200] [19317] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 17:39:21 +0200] [19317] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$37MFt2IyBe7qZoa5Bz3gbeWMrDWScNp8T6kpwqRBlUyRrwGrhDl9e' email='userrrr@user' id=None
[2023-04-04 17:39:25 +0200] [19317] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 17:39:25 +0200] [19317] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 17:39:25 +0200] [19317] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:39:25 +0200] [19317] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:39:25 +0200] [19317] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database {'id': UUID('929af5b1-0254-43c5-bc53-29f0af35d67e'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$gvoc2xHBBWIM/TcwNTJHjeXckwpYOqInX1IIUPjjjNUGDniTHg/De', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 26, 21, 431233), 'updated_at': datetime.datetime(2023, 4, 4, 15, 26, 21, 431239)}
[2023-04-04 17:39:25 +0200] [19317] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 17:39:25 +0200] [19317] [TRACE] [services.auth_service] AuthService: Create session with user: 929af5b1-0254-43c5-bc53-29f0af35d67e
[2023-04-04 17:39:25 +0200] [19317] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 17:39:25 +0200] [19317] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('929af5b1-0254-43c5-bc53-29f0af35d67e') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 15, 44, 25, 365466) refresh_expire_time=datetime.datetime(2023, 4, 6, 15, 39, 25, 365619) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjMwNjUsInN1YiI6ImFkbWluIn0.WM38B2Q2_93v-ijwia4_MCXLsXDpzNpI-Ae-0ERDG2s' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTU1NjUsInN1YiI6ImFkbWluIn0.EUQWpjxxGHmNTv9NRvYOWATSCEySzOUHS4XUoZSTcU8' blocked=False is_active=True
[2023-04-04 17:39:25 +0200] [19317] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('a6e55371-e76a-4e07-b9e4-615a1b79930f'), 'user_id': UUID('929af5b1-0254-43c5-bc53-29f0af35d67e'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjMwNjUsInN1YiI6ImFkbWluIn0.WM38B2Q2_93v-ijwia4_MCXLsXDpzNpI-Ae-0ERDG2s', 'access_expire_time': datetime.datetime(2023, 4, 4, 15, 44, 25, 365466), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTU1NjUsInN1YiI6ImFkbWluIn0.EUQWpjxxGHmNTv9NRvYOWATSCEySzOUHS4XUoZSTcU8', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 15, 39, 25, 365619), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 39, 25, 367549), 'updated_at': datetime.datetime(2023, 4, 4, 15, 39, 25, 367552)}
[2023-04-04 17:39:28 +0200] [19317] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 17:39:28 +0200] [19317] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: {'lesson_number': '1', 'start_time': '09:00', 'end_time': '10:00'}
[2023-04-04 17:39:28 +0200] [19317] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:39:28 +0200] [19317] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:39:28 +0200] [19317] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database {'id': UUID('929af5b1-0254-43c5-bc53-29f0af35d67e'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$gvoc2xHBBWIM/TcwNTJHjeXckwpYOqInX1IIUPjjjNUGDniTHg/De', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 26, 21, 431233), 'updated_at': datetime.datetime(2023, 4, 4, 15, 26, 21, 431239)}
[2023-04-04 17:39:28 +0200] [19317] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 17:39:28 +0200] [19317] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data lesson_number=<LessonsEnum.ONE: '1'> start_time='09:00' end_time='10:00'
[2023-04-04 17:40:48 +0200] [21164] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 17:40:48 +0200] [21164] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$x3HJbbqR0tniVP3YRZgdZ.FqoHkZibN1cqpEqmvmmFsjlCNG4O55q' email='userrrr@user' id=None
[2023-04-04 17:40:48 +0200] [21164] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('5dcd380c-cef1-401d-a07d-a6cb450b814a'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$x3HJbbqR0tniVP3YRZgdZ.FqoHkZibN1cqpEqmvmmFsjlCNG4O55q', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 40, 48, 210476), 'updated_at': datetime.datetime(2023, 4, 4, 15, 40, 48, 210481)}
[2023-04-04 17:40:49 +0200] [21164] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 17:40:49 +0200] [21164] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 17:40:49 +0200] [21164] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:40:49 +0200] [21164] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:40:49 +0200] [21164] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database {'id': UUID('5dcd380c-cef1-401d-a07d-a6cb450b814a'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$x3HJbbqR0tniVP3YRZgdZ.FqoHkZibN1cqpEqmvmmFsjlCNG4O55q', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 40, 48, 210476), 'updated_at': datetime.datetime(2023, 4, 4, 15, 40, 48, 210481)}
[2023-04-04 17:40:50 +0200] [21164] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 17:40:50 +0200] [21164] [TRACE] [services.auth_service] AuthService: Create session with user: 5dcd380c-cef1-401d-a07d-a6cb450b814a
[2023-04-04 17:40:50 +0200] [21164] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 17:40:50 +0200] [21164] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('5dcd380c-cef1-401d-a07d-a6cb450b814a') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 15, 45, 50, 249715) refresh_expire_time=datetime.datetime(2023, 4, 6, 15, 40, 50, 249875) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjMxNTAsInN1YiI6ImFkbWluIn0.UDplrXIQ9IFQ4QYBfLPrws3UyVM58-u16BA_MkSXHhI' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTU2NTAsInN1YiI6ImFkbWluIn0.xaOcfTR8TU5FeNFX9I2mvBY44yeAbm9wGDG8fcexVEI' blocked=False is_active=True
[2023-04-04 17:40:50 +0200] [21164] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('a2d77ff2-7a32-45b1-a8a4-0a0b8a9b2e50'), 'user_id': UUID('5dcd380c-cef1-401d-a07d-a6cb450b814a'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjMxNTAsInN1YiI6ImFkbWluIn0.UDplrXIQ9IFQ4QYBfLPrws3UyVM58-u16BA_MkSXHhI', 'access_expire_time': datetime.datetime(2023, 4, 4, 15, 45, 50, 249715), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTU2NTAsInN1YiI6ImFkbWluIn0.xaOcfTR8TU5FeNFX9I2mvBY44yeAbm9wGDG8fcexVEI', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 15, 40, 50, 249875), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 40, 50, 252430), 'updated_at': datetime.datetime(2023, 4, 4, 15, 40, 50, 252434)}
[2023-04-04 17:40:53 +0200] [21164] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 17:40:53 +0200] [21164] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: {'lesson_number': '1', 'start_time': '09:00', 'end_time': '10:00'}
[2023-04-04 17:40:53 +0200] [21164] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:40:53 +0200] [21164] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:40:53 +0200] [21164] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database {'id': UUID('5dcd380c-cef1-401d-a07d-a6cb450b814a'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$x3HJbbqR0tniVP3YRZgdZ.FqoHkZibN1cqpEqmvmmFsjlCNG4O55q', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 40, 48, 210476), 'updated_at': datetime.datetime(2023, 4, 4, 15, 40, 48, 210481)}
[2023-04-04 17:40:53 +0200] [21164] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 17:40:53 +0200] [21164] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data lesson_number=<LessonsEnum.ONE: '1'> start_time='09:00' end_time='10:00'
[2023-04-04 17:40:53 +0200] [21164] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 1
[2023-04-04 17:40:53 +0200] [21164] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 17:40:53 +0200] [21164] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-04 17:45:06 +0200] [21482] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 17:45:06 +0200] [21482] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$vjrkJ0c3JSM4lTvCT1anj.z1E0Eru9bk0EwFy5kLIidst3w7T.HKy' email='userrrr@user' id=None
[2023-04-04 17:45:33 +0200] [21576] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 17:45:33 +0200] [21576] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$NgW9ik7UdE9osHipfHZAwe06b3ZF88lA1t3./qAu/pal.qlgdXoYu' email='userrrr@user' id=None
[2023-04-04 17:45:33 +0200] [21576] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('b15153a9-ad83-45e6-bb4f-3d8f4a5cfff3'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$NgW9ik7UdE9osHipfHZAwe06b3ZF88lA1t3./qAu/pal.qlgdXoYu', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 45, 33, 726610), 'updated_at': datetime.datetime(2023, 4, 4, 15, 45, 33, 726615)}
[2023-04-04 17:45:36 +0200] [21576] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 17:45:36 +0200] [21576] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 17:45:36 +0200] [21576] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:45:36 +0200] [21576] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:45:36 +0200] [21576] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database {'id': UUID('b15153a9-ad83-45e6-bb4f-3d8f4a5cfff3'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$NgW9ik7UdE9osHipfHZAwe06b3ZF88lA1t3./qAu/pal.qlgdXoYu', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 45, 33, 726610), 'updated_at': datetime.datetime(2023, 4, 4, 15, 45, 33, 726615)}
[2023-04-04 17:45:36 +0200] [21576] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 17:45:36 +0200] [21576] [TRACE] [services.auth_service] AuthService: Create session with user: b15153a9-ad83-45e6-bb4f-3d8f4a5cfff3
[2023-04-04 17:45:36 +0200] [21576] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 17:45:36 +0200] [21576] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('b15153a9-ad83-45e6-bb4f-3d8f4a5cfff3') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 15, 50, 36, 982155) refresh_expire_time=datetime.datetime(2023, 4, 6, 15, 45, 36, 982311) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjM0MzYsInN1YiI6ImFkbWluIn0.e9LEETYsEJwx_y8f7l1aWEYhq304ggw0JGDMegFrS0Y' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTU5MzYsInN1YiI6ImFkbWluIn0.8Ttj5S0jfBgjGSXIcAsuSszZrYs9jcpFlozThC_KyPo' blocked=False is_active=True
[2023-04-04 17:45:36 +0200] [21576] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('903e4773-f015-4800-9611-51543bba6da5'), 'user_id': UUID('b15153a9-ad83-45e6-bb4f-3d8f4a5cfff3'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjM0MzYsInN1YiI6ImFkbWluIn0.e9LEETYsEJwx_y8f7l1aWEYhq304ggw0JGDMegFrS0Y', 'access_expire_time': datetime.datetime(2023, 4, 4, 15, 50, 36, 982155), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTU5MzYsInN1YiI6ImFkbWluIn0.8Ttj5S0jfBgjGSXIcAsuSszZrYs9jcpFlozThC_KyPo', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 15, 45, 36, 982311), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 45, 36, 984916), 'updated_at': datetime.datetime(2023, 4, 4, 15, 45, 36, 984921)}
[2023-04-04 17:45:40 +0200] [21576] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 17:45:40 +0200] [21576] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: {'lesson_number': '1', 'start_time': '09:00', 'end_time': '10:00'}
[2023-04-04 17:45:40 +0200] [21576] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:45:40 +0200] [21576] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:45:40 +0200] [21576] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database {'id': UUID('b15153a9-ad83-45e6-bb4f-3d8f4a5cfff3'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$NgW9ik7UdE9osHipfHZAwe06b3ZF88lA1t3./qAu/pal.qlgdXoYu', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 45, 33, 726610), 'updated_at': datetime.datetime(2023, 4, 4, 15, 45, 33, 726615)}
[2023-04-04 17:45:40 +0200] [21576] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 17:45:40 +0200] [21576] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data lesson_number=<LessonsEnum.ONE: '1'> start_time='09:00' end_time='10:00'
[2023-04-04 17:45:40 +0200] [21576] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 1
[2023-04-04 17:45:40 +0200] [21576] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 17:45:40 +0200] [21576] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-04 17:45:41 +0200] [21576] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database None
[2023-04-04 17:45:41 +0200] [21576] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 1900-01-01 09:00:00 - 1900-01-01 10:00:00
[2023-04-04 17:45:41 +0200] [21576] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-04 17:45:41 +0200] [21576] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 1900-01-01 09:00:00 - 1900-01-01 10:00:00
[2023-04-04 17:46:26 +0200] [21576] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 17:46:26 +0200] [21576] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: [{'first_name': 'student_1', 'last_name': 'student_1', 'birth_date': '28-02-2002', 'academic_year': '2', 'academic_group': '202'}]
[2023-04-04 17:46:26 +0200] [21576] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:46:26 +0200] [21576] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:46:26 +0200] [21576] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database {'id': UUID('b15153a9-ad83-45e6-bb4f-3d8f4a5cfff3'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$NgW9ik7UdE9osHipfHZAwe06b3ZF88lA1t3./qAu/pal.qlgdXoYu', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 45, 33, 726610), 'updated_at': datetime.datetime(2023, 4, 4, 15, 45, 33, 726615)}
[2023-04-04 17:46:26 +0200] [21576] [INFO] [services.student_service] StudentService: Create students
[2023-04-04 17:46:26 +0200] [21576] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-04 17:46:26 +0200] [21576] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_1' second_name=None last_name='student_1' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-04 17:46:26 +0200] [21576] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-04 17:46:26 +0200] [21576] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-04 17:47:55 +0200] [21870] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 17:47:55 +0200] [21870] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$pKGetymYH2jtFjtltVUsjub8g./jH5bKWCVqopN0tpluNNKCb./mu' email='userrrr@user' id=None
[2023-04-04 17:47:55 +0200] [21870] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('580ab37c-b4e8-4aef-a371-3cd414fcd701'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$pKGetymYH2jtFjtltVUsjub8g./jH5bKWCVqopN0tpluNNKCb./mu', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 47, 55, 71035), 'updated_at': datetime.datetime(2023, 4, 4, 15, 47, 55, 71039)}
[2023-04-04 17:47:57 +0200] [21870] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 17:47:57 +0200] [21870] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 17:47:57 +0200] [21870] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:47:57 +0200] [21870] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:47:57 +0200] [21870] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database {'id': UUID('580ab37c-b4e8-4aef-a371-3cd414fcd701'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$pKGetymYH2jtFjtltVUsjub8g./jH5bKWCVqopN0tpluNNKCb./mu', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 47, 55, 71035), 'updated_at': datetime.datetime(2023, 4, 4, 15, 47, 55, 71039)}
[2023-04-04 17:47:57 +0200] [21870] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 17:47:57 +0200] [21870] [TRACE] [services.auth_service] AuthService: Create session with user: 580ab37c-b4e8-4aef-a371-3cd414fcd701
[2023-04-04 17:47:57 +0200] [21870] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 17:47:57 +0200] [21870] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('580ab37c-b4e8-4aef-a371-3cd414fcd701') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 15, 52, 57, 570660) refresh_expire_time=datetime.datetime(2023, 4, 6, 15, 47, 57, 570863) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjM1NzcsInN1YiI6ImFkbWluIn0.E_98nBSTY35nreAe2fcLvSjQMtaNdpKSUs-3zvc6SAE' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTYwNzcsInN1YiI6ImFkbWluIn0.hmSI538RYVzCxrI3qR0qRMhw9vowaxv4pl9dHcII9zM' blocked=False is_active=True
[2023-04-04 17:47:57 +0200] [21870] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('4a645cff-482a-418c-9267-736d4ba1257b'), 'user_id': UUID('580ab37c-b4e8-4aef-a371-3cd414fcd701'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjM1NzcsInN1YiI6ImFkbWluIn0.E_98nBSTY35nreAe2fcLvSjQMtaNdpKSUs-3zvc6SAE', 'access_expire_time': datetime.datetime(2023, 4, 4, 15, 52, 57, 570660), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTYwNzcsInN1YiI6ImFkbWluIn0.hmSI538RYVzCxrI3qR0qRMhw9vowaxv4pl9dHcII9zM', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 15, 47, 57, 570863), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 47, 57, 573435), 'updated_at': datetime.datetime(2023, 4, 4, 15, 47, 57, 573439)}
[2023-04-04 17:47:59 +0200] [21870] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 17:47:59 +0200] [21870] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: [{'first_name': 'student_1', 'last_name': 'student_1', 'birth_date': '28-02-2002', 'academic_year': '2', 'academic_group': '202'}]
[2023-04-04 17:47:59 +0200] [21870] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:47:59 +0200] [21870] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:47:59 +0200] [21870] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database {'id': UUID('580ab37c-b4e8-4aef-a371-3cd414fcd701'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$pKGetymYH2jtFjtltVUsjub8g./jH5bKWCVqopN0tpluNNKCb./mu', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 47, 55, 71035), 'updated_at': datetime.datetime(2023, 4, 4, 15, 47, 55, 71039)}
[2023-04-04 17:47:59 +0200] [21870] [INFO] [services.student_service] StudentService: Create students
[2023-04-04 17:47:59 +0200] [21870] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-04 17:47:59 +0200] [21870] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_1' second_name=None last_name='student_1' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-04 17:47:59 +0200] [21870] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-04 17:47:59 +0200] [21870] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-04 17:48:00 +0200] [21870] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database <generator object BaseDAO.get_all_by.<locals>.<genexpr> at 0x7fefae0d4820>
[2023-04-04 17:48:00 +0200] [21870] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='qJZbChtOZCaYyg')]
[2023-04-04 17:48:00 +0200] [21870] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-04 17:48:00 +0200] [21870] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='qJZbChtOZCaYyg')]
[2023-04-04 17:48:00 +0200] [21870] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('4fc25d8b-d46c-4a55-acd1-029a326258af'), 'registration_token': 'qJZbChtOZCaYyg', 'registered_user': False, 'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 4, 15, 48, 0, 490100), 'updated_at': datetime.datetime(2023, 4, 4, 15, 48, 0, 490105), 'deleted_at': None}]
[2023-04-04 17:48:00 +0200] [21870] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7fefb0dacc10>]
[2023-04-04 17:48:16 +0200] [21870] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 17:50:03 +0200] [22045] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 17:50:03 +0200] [22045] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$MMiMT1lRX2ohFQLMyXiANOf2l82NIHSvMTN.bPLwhJIrBlqEZQ8cW' email='userrrr@user' id=None
[2023-04-04 17:50:03 +0200] [22045] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('7f38cc94-eadf-4adb-ae36-1b0febb811aa'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$MMiMT1lRX2ohFQLMyXiANOf2l82NIHSvMTN.bPLwhJIrBlqEZQ8cW', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 50, 3, 352320), 'updated_at': datetime.datetime(2023, 4, 4, 15, 50, 3, 352326)}
[2023-04-04 17:50:05 +0200] [22045] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 17:50:05 +0200] [22045] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 17:50:05 +0200] [22045] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:50:05 +0200] [22045] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:50:05 +0200] [22045] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 17:50:06 +0200] [22045] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 17:50:06 +0200] [22045] [TRACE] [services.auth_service] AuthService: Create session with user: 7f38cc94-eadf-4adb-ae36-1b0febb811aa
[2023-04-04 17:50:06 +0200] [22045] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 17:50:06 +0200] [22045] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('7f38cc94-eadf-4adb-ae36-1b0febb811aa') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 15, 55, 6, 216412) refresh_expire_time=datetime.datetime(2023, 4, 6, 15, 50, 6, 216597) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjM3MDYsInN1YiI6ImFkbWluIn0.FLa0UJlLhRnZqqfNFKqa5kCjdRdtfriB_YqA66lhth0' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTYyMDYsInN1YiI6ImFkbWluIn0.IIDfmMEh3HvTayhtfpj84a6DcmfrICVoteglo47dSPU' blocked=False is_active=True
[2023-04-04 17:50:06 +0200] [22045] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('8f311fc5-e8e4-4eb2-a7b7-027b1bb69234'), 'user_id': UUID('7f38cc94-eadf-4adb-ae36-1b0febb811aa'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjM3MDYsInN1YiI6ImFkbWluIn0.FLa0UJlLhRnZqqfNFKqa5kCjdRdtfriB_YqA66lhth0', 'access_expire_time': datetime.datetime(2023, 4, 4, 15, 55, 6, 216412), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTYyMDYsInN1YiI6ImFkbWluIn0.IIDfmMEh3HvTayhtfpj84a6DcmfrICVoteglo47dSPU', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 15, 50, 6, 216597), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 50, 6, 219298), 'updated_at': datetime.datetime(2023, 4, 4, 15, 50, 6, 219304)}
[2023-04-04 17:50:09 +0200] [22045] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 17:50:09 +0200] [22045] [TRACE] [mixins.auth_mixin] AuthMixin: get auth headers from request: [{'first_name': 'student_1', 'last_name': 'student_1', 'birth_date': '28-02-2002', 'academic_year': '2', 'academic_group': '202'}]
[2023-04-04 17:50:09 +0200] [22045] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:50:09 +0200] [22045] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:50:09 +0200] [22045] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 17:50:09 +0200] [22045] [INFO] [services.student_service] StudentService: Create students
[2023-04-04 17:50:09 +0200] [22045] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-04 17:50:09 +0200] [22045] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_1' second_name=None last_name='student_1' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-04 17:50:09 +0200] [22045] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-04 17:50:09 +0200] [22045] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-04 17:50:10 +0200] [22045] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-04 17:50:10 +0200] [22045] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='Oi0X7SVKMnyV4Q')]
[2023-04-04 17:50:10 +0200] [22045] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-04 17:50:10 +0200] [22045] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='Oi0X7SVKMnyV4Q')]
[2023-04-04 17:50:10 +0200] [22045] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('02ebcd48-044c-4cdd-9579-eab68cb8d914'), 'registration_token': 'Oi0X7SVKMnyV4Q', 'registered_user': False, 'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 4, 15, 50, 10, 495647), 'updated_at': datetime.datetime(2023, 4, 4, 15, 50, 10, 495651), 'deleted_at': None}]
[2023-04-04 17:50:10 +0200] [22045] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7f3edb0dd880>]
[2023-04-04 17:50:19 +0200] [22045] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers
[2023-04-04 17:51:43 +0200] [22228] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 17:51:43 +0200] [22228] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$fLaSzXn6EqBBhUydmR/BCO1Yd/Oh69i11r5c0qhgjU3X8NezQAceK' email='userrrr@user' id=None
[2023-04-04 17:51:43 +0200] [22228] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('aadd9780-2e02-4a0e-a06b-8a9dd4811d5e'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$fLaSzXn6EqBBhUydmR/BCO1Yd/Oh69i11r5c0qhgjU3X8NezQAceK', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 51, 43, 889189), 'updated_at': datetime.datetime(2023, 4, 4, 15, 51, 43, 889203)}
[2023-04-04 17:51:46 +0200] [22228] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 17:51:46 +0200] [22228] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 17:51:46 +0200] [22228] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:51:46 +0200] [22228] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:51:46 +0200] [22228] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 17:51:46 +0200] [22228] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 17:51:46 +0200] [22228] [TRACE] [services.auth_service] AuthService: Create session with user: aadd9780-2e02-4a0e-a06b-8a9dd4811d5e
[2023-04-04 17:51:46 +0200] [22228] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 17:51:46 +0200] [22228] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('aadd9780-2e02-4a0e-a06b-8a9dd4811d5e') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 15, 56, 46, 848846) refresh_expire_time=datetime.datetime(2023, 4, 6, 15, 51, 46, 849003) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjM4MDYsInN1YiI6ImFkbWluIn0.4GSNvRFcxSRgEsNW4O7JpMcRzVFfjhVIMJbruS3PBoM' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTYzMDYsInN1YiI6ImFkbWluIn0.DGjxhLH3rYY8SEOijpswABhH8TCmweYnu1MaaaV7YUg' blocked=False is_active=True
[2023-04-04 17:51:46 +0200] [22228] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('a72e0078-f386-4ae9-b6cf-280ff2ee0259'), 'user_id': UUID('aadd9780-2e02-4a0e-a06b-8a9dd4811d5e'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjM4MDYsInN1YiI6ImFkbWluIn0.4GSNvRFcxSRgEsNW4O7JpMcRzVFfjhVIMJbruS3PBoM', 'access_expire_time': datetime.datetime(2023, 4, 4, 15, 56, 46, 848846), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTYzMDYsInN1YiI6ImFkbWluIn0.DGjxhLH3rYY8SEOijpswABhH8TCmweYnu1MaaaV7YUg', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 15, 51, 46, 849003), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 51, 46, 851691), 'updated_at': datetime.datetime(2023, 4, 4, 15, 51, 46, 851696)}
[2023-04-04 17:51:48 +0200] [22228] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 17:51:48 +0200] [22228] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:51:48 +0200] [22228] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:51:48 +0200] [22228] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 17:51:48 +0200] [22228] [INFO] [services.student_service] StudentService: Create students
[2023-04-04 17:51:48 +0200] [22228] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-04 17:51:48 +0200] [22228] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_1' second_name=None last_name='student_1' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-04 17:51:48 +0200] [22228] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-04 17:51:48 +0200] [22228] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-04 17:51:50 +0200] [22228] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-04 17:51:50 +0200] [22228] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='QWCMlVpqDqu2pQ')]
[2023-04-04 17:51:50 +0200] [22228] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-04 17:51:50 +0200] [22228] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='QWCMlVpqDqu2pQ')]
[2023-04-04 17:51:50 +0200] [22228] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('aff16aa8-6b6d-454a-af20-18def09c6593'), 'registration_token': 'QWCMlVpqDqu2pQ', 'registered_user': False, 'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 4, 15, 51, 50, 317162), 'updated_at': datetime.datetime(2023, 4, 4, 15, 51, 50, 317170), 'deleted_at': None}]
[2023-04-04 17:51:50 +0200] [22228] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7f95092c4190>]
[2023-04-04 17:51:58 +0200] [22228] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 17:51:58 +0200] [22228] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:51:58 +0200] [22228] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:51:58 +0200] [22228] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 17:51:58 +0200] [22228] [INFO] [services.student_service] StudentService: Get student by id: aff16aa8-6b6d-454a-af20-18def09c6593
[2023-04-04 17:51:58 +0200] [22228] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by id: aff16aa8-6b6d-454a-af20-18def09c6593
[2023-04-04 17:51:58 +0200] [22228] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-04 17:52:01 +0200] [22228] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 17:52:01 +0200] [22228] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:52:01 +0200] [22228] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:52:01 +0200] [22228] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 17:52:01 +0200] [22228] [INFO] [services.student_service] StudentService: Get all not deleted students with given parameters
[2023-04-04 17:52:01 +0200] [22228] [TRACE] [services.student_service] StudentService: Get all not deleted student with parameters: {'academic_group': <AcademicGroupsEnum.FIRST_3: '301'>}
[2023-04-04 17:52:01 +0200] [22228] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-04 17:52:01 +0200] [22228] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {}
[2023-04-04 17:52:01 +0200] [22228] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-04 17:52:12 +0200] [22228] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 17:52:12 +0200] [22228] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:52:12 +0200] [22228] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:52:12 +0200] [22228] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 17:52:12 +0200] [22228] [INFO] [services.student_service] StudentService: Get all not deleted students with given parameters
[2023-04-04 17:52:12 +0200] [22228] [TRACE] [services.student_service] StudentService: Get all not deleted student with parameters: {'academic_year': <AcademicYearsEnum.THIRD: '3'>}
[2023-04-04 17:52:12 +0200] [22228] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-04 17:52:12 +0200] [22228] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {}
[2023-04-04 17:52:12 +0200] [22228] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-04 17:52:46 +0200] [22318] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 17:52:46 +0200] [22318] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$UaMkvWwn6UYJGo2zSK/CbOEOmeBV4OHu4LyvvBv1wgGdqbQCw7Bvm' email='userrrr@user' id=None
[2023-04-04 17:52:46 +0200] [22318] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('57fa8623-29d0-485b-8994-457f12269e62'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$UaMkvWwn6UYJGo2zSK/CbOEOmeBV4OHu4LyvvBv1wgGdqbQCw7Bvm', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 52, 46, 760602), 'updated_at': datetime.datetime(2023, 4, 4, 15, 52, 46, 760615)}
[2023-04-04 17:52:49 +0200] [22318] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 17:52:49 +0200] [22318] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 17:52:49 +0200] [22318] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:52:49 +0200] [22318] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:52:49 +0200] [22318] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 17:52:49 +0200] [22318] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 17:52:49 +0200] [22318] [TRACE] [services.auth_service] AuthService: Create session with user: 57fa8623-29d0-485b-8994-457f12269e62
[2023-04-04 17:52:49 +0200] [22318] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 17:52:49 +0200] [22318] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('57fa8623-29d0-485b-8994-457f12269e62') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 15, 57, 49, 845817) refresh_expire_time=datetime.datetime(2023, 4, 6, 15, 52, 49, 845966) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjM4NjksInN1YiI6ImFkbWluIn0.HFKQDKAlEmrovhhIKQVBg89VI9BEgYamKN_nRJozJ3o' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTYzNjksInN1YiI6ImFkbWluIn0.n1GKU0s4MQoJVf4BdEKPlDA_Sc2txW6ClguPuFL-JFs' blocked=False is_active=True
[2023-04-04 17:52:49 +0200] [22318] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('90b0e402-8146-40a9-98c7-f3399414f8e2'), 'user_id': UUID('57fa8623-29d0-485b-8994-457f12269e62'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjM4NjksInN1YiI6ImFkbWluIn0.HFKQDKAlEmrovhhIKQVBg89VI9BEgYamKN_nRJozJ3o', 'access_expire_time': datetime.datetime(2023, 4, 4, 15, 57, 49, 845817), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTYzNjksInN1YiI6ImFkbWluIn0.n1GKU0s4MQoJVf4BdEKPlDA_Sc2txW6ClguPuFL-JFs', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 15, 52, 49, 845966), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 52, 49, 848507), 'updated_at': datetime.datetime(2023, 4, 4, 15, 52, 49, 848512)}
[2023-04-04 17:52:51 +0200] [22318] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 17:52:51 +0200] [22318] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:52:51 +0200] [22318] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:52:51 +0200] [22318] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 17:52:51 +0200] [22318] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 17:52:51 +0200] [22318] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data lesson_number=<LessonsEnum.ONE: '1'> start_time='09:00' end_time='10:00'
[2023-04-04 17:52:51 +0200] [22318] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 1
[2023-04-04 17:52:51 +0200] [22318] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 17:52:51 +0200] [22318] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-04 17:52:53 +0200] [22318] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 17:52:53 +0200] [22318] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 1900-01-01 09:00:00 - 1900-01-01 10:00:00
[2023-04-04 17:52:53 +0200] [22318] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-04 17:52:53 +0200] [22318] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 1900-01-01 09:00:00 - 1900-01-01 10:00:00
[2023-04-04 17:54:35 +0200] [22488] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 17:54:35 +0200] [22488] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$h2uW8KKsSdHrzVwuYvGtvenphVrhbDcc2atvj/Z9YE96LLgNGL5FC' email='userrrr@user' id=None
[2023-04-04 17:54:35 +0200] [22488] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('8b3c0231-28e0-4228-982f-5e48824c0229'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$h2uW8KKsSdHrzVwuYvGtvenphVrhbDcc2atvj/Z9YE96LLgNGL5FC', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 54, 35, 369944), 'updated_at': datetime.datetime(2023, 4, 4, 15, 54, 35, 369947)}
[2023-04-04 17:54:37 +0200] [22488] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 17:54:37 +0200] [22488] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 17:54:37 +0200] [22488] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:54:37 +0200] [22488] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:54:37 +0200] [22488] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 17:54:37 +0200] [22488] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 17:54:37 +0200] [22488] [TRACE] [services.auth_service] AuthService: Create session with user: 8b3c0231-28e0-4228-982f-5e48824c0229
[2023-04-04 17:54:37 +0200] [22488] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 17:54:37 +0200] [22488] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('8b3c0231-28e0-4228-982f-5e48824c0229') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 15, 59, 37, 613318) refresh_expire_time=datetime.datetime(2023, 4, 6, 15, 54, 37, 613517) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjM5NzcsInN1YiI6ImFkbWluIn0.HUhG7u51QYkem930PgyEdunbYBO9v18-2wySwFNSd2E' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTY0NzcsInN1YiI6ImFkbWluIn0.R-A6ZOgCrl_vWVipSb0fiFKGyr7fm4rRmybqQZHA-Ak' blocked=False is_active=True
[2023-04-04 17:54:37 +0200] [22488] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('fc67fb6d-9517-4c02-a6d5-fac318b48b9d'), 'user_id': UUID('8b3c0231-28e0-4228-982f-5e48824c0229'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjM5NzcsInN1YiI6ImFkbWluIn0.HUhG7u51QYkem930PgyEdunbYBO9v18-2wySwFNSd2E', 'access_expire_time': datetime.datetime(2023, 4, 4, 15, 59, 37, 613318), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTY0NzcsInN1YiI6ImFkbWluIn0.R-A6ZOgCrl_vWVipSb0fiFKGyr7fm4rRmybqQZHA-Ak', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 15, 54, 37, 613517), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 54, 37, 617201), 'updated_at': datetime.datetime(2023, 4, 4, 15, 54, 37, 617209)}
[2023-04-04 17:54:40 +0200] [22488] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 17:54:40 +0200] [22488] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:54:40 +0200] [22488] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:54:40 +0200] [22488] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 17:54:40 +0200] [22488] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 17:54:40 +0200] [22488] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data lesson_number=<LessonsEnum.ONE: '1'> start_time='09:00' end_time='10:00'
[2023-04-04 17:54:40 +0200] [22488] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 1
[2023-04-04 17:54:40 +0200] [22488] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 17:54:40 +0200] [22488] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-04 17:54:41 +0200] [22488] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 17:54:41 +0200] [22488] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 1900-01-01 09:00:00 - 1900-01-01 10:00:00
[2023-04-04 17:54:41 +0200] [22488] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-04 17:54:41 +0200] [22488] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 1900-01-01 09:00:00 - 1900-01-01 10:00:00
[2023-04-04 17:54:41 +0200] [22488] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database []
[2023-04-04 17:54:41 +0200] [22488] [INFO] [db.dao.base_dao] LessonModel DAO: Create db entry
[2023-04-04 17:54:41 +0200] [22488] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed for creation: lesson_number=<LessonsEnum.ONE: '1'> start_time=datetime.datetime(1900, 1, 1, 9, 0) end_time=datetime.datetime(1900, 1, 1, 10, 0)
[2023-04-04 17:54:41 +0200] [22488] [DEBUG] [db.dao.base_dao] LessonModel DAO: Created entry in database: {'id': UUID('7d99489a-b6a3-4b09-b1f4-6643a348f7a8'), 'lesson_number': <LessonsEnum.ONE: '1'>, 'start_time': datetime.datetime(1900, 1, 1, 9, 0), 'end_time': datetime.datetime(1900, 1, 1, 10, 0)}
[2023-04-04 17:55:57 +0200] [22655] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 17:55:57 +0200] [22655] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$V.Gf3uLSik3r3Djcn5EXiuEgvGfpYXUlDhNeuzlZx3AS9JiJNXaXC' email='userrrr@user' id=None
[2023-04-04 17:55:57 +0200] [22655] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('76d7d192-97aa-4531-b528-930d97a682b1'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$V.Gf3uLSik3r3Djcn5EXiuEgvGfpYXUlDhNeuzlZx3AS9JiJNXaXC', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 55, 57, 574108), 'updated_at': datetime.datetime(2023, 4, 4, 15, 55, 57, 574113)}
[2023-04-04 17:56:00 +0200] [22655] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 17:56:00 +0200] [22655] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 17:56:00 +0200] [22655] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:56:00 +0200] [22655] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:56:00 +0200] [22655] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 17:56:01 +0200] [22655] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 17:56:01 +0200] [22655] [TRACE] [services.auth_service] AuthService: Create session with user: 76d7d192-97aa-4531-b528-930d97a682b1
[2023-04-04 17:56:01 +0200] [22655] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 17:56:01 +0200] [22655] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('76d7d192-97aa-4531-b528-930d97a682b1') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 16, 1, 1, 186967) refresh_expire_time=datetime.datetime(2023, 4, 6, 15, 56, 1, 187144) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjQwNjEsInN1YiI6ImFkbWluIn0.RTwxMwC1VJljXLU9rN0zbvxU8hqCut0x8vLE0q9Udw8' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTY1NjEsInN1YiI6ImFkbWluIn0.WQmz3S6tgch4RJAsHff85Yp4YSLHE7dYMaqdY5N9udU' blocked=False is_active=True
[2023-04-04 17:56:01 +0200] [22655] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('d88e81a5-90f9-47c2-94ce-a81057c1d409'), 'user_id': UUID('76d7d192-97aa-4531-b528-930d97a682b1'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjQwNjEsInN1YiI6ImFkbWluIn0.RTwxMwC1VJljXLU9rN0zbvxU8hqCut0x8vLE0q9Udw8', 'access_expire_time': datetime.datetime(2023, 4, 4, 16, 1, 1, 186967), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTY1NjEsInN1YiI6ImFkbWluIn0.WQmz3S6tgch4RJAsHff85Yp4YSLHE7dYMaqdY5N9udU', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 15, 56, 1, 187144), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 15, 56, 1, 189977), 'updated_at': datetime.datetime(2023, 4, 4, 15, 56, 1, 189982)}
[2023-04-04 17:56:04 +0200] [22655] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 17:56:04 +0200] [22655] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 17:56:04 +0200] [22655] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 17:56:04 +0200] [22655] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 17:56:04 +0200] [22655] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 17:56:04 +0200] [22655] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data lesson_number=<LessonsEnum.ONE: '1'> start_time='09:00' end_time='10:00'
[2023-04-04 17:56:04 +0200] [22655] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 1
[2023-04-04 17:56:04 +0200] [22655] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 17:56:04 +0200] [22655] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-04 17:56:05 +0200] [22655] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 17:56:05 +0200] [22655] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 1900-01-01 09:00:00 - 1900-01-01 10:00:00
[2023-04-04 17:56:05 +0200] [22655] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-04 17:56:05 +0200] [22655] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 1900-01-01 09:00:00 - 1900-01-01 10:00:00
[2023-04-04 17:56:05 +0200] [22655] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database []
[2023-04-04 17:56:05 +0200] [22655] [INFO] [db.dao.base_dao] LessonModel DAO: Create db entry
[2023-04-04 17:56:05 +0200] [22655] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed for creation: lesson_number=<LessonsEnum.ONE: '1'> start_time=datetime.datetime(1900, 1, 1, 9, 0) end_time=datetime.datetime(1900, 1, 1, 10, 0)
[2023-04-04 17:56:05 +0200] [22655] [DEBUG] [db.dao.base_dao] LessonModel DAO: Created entry in database: {'id': UUID('80a8fa09-3a8d-4192-a847-6f473c51c196'), 'lesson_number': <LessonsEnum.ONE: '1'>, 'start_time': datetime.datetime(1900, 1, 1, 9, 0), 'end_time': datetime.datetime(1900, 1, 1, 10, 0)}
[2023-04-04 18:03:59 +0200] [25863] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 18:03:59 +0200] [25863] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$bnT4wzTV0MbASeHg6ZyJx.5S1j8DyF9O27FCJe4KLD58bgax.grDG' email='userrrr@user' id=None
[2023-04-04 18:03:59 +0200] [25863] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('21ae70f6-9737-4a3c-a4af-9900553a682c'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$bnT4wzTV0MbASeHg6ZyJx.5S1j8DyF9O27FCJe4KLD58bgax.grDG', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 16, 3, 59, 507936), 'updated_at': datetime.datetime(2023, 4, 4, 16, 3, 59, 507942)}
[2023-04-04 18:04:02 +0200] [25863] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 18:04:02 +0200] [25863] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 18:04:02 +0200] [25863] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:04:02 +0200] [25863] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:04:02 +0200] [25863] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:04:02 +0200] [25863] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 18:04:02 +0200] [25863] [TRACE] [services.auth_service] AuthService: Create session with user: 21ae70f6-9737-4a3c-a4af-9900553a682c
[2023-04-04 18:04:02 +0200] [25863] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 18:04:02 +0200] [25863] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('21ae70f6-9737-4a3c-a4af-9900553a682c') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 16, 9, 2, 587886) refresh_expire_time=datetime.datetime(2023, 4, 6, 16, 4, 2, 588041) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjQ1NDIsInN1YiI6ImFkbWluIn0.QxPWlGA6dTZW8YdAAbgDOcgaMRghcrP_QzWjuUj8HEg' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTcwNDIsInN1YiI6ImFkbWluIn0.JVLL-wpG8zYz-4FmxyKWsNc_YgyZJ3c1FBbodcXRX1E' blocked=False is_active=True
[2023-04-04 18:04:02 +0200] [25863] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('ecf5a17e-b58d-4550-b09f-d56b63c1181b'), 'user_id': UUID('21ae70f6-9737-4a3c-a4af-9900553a682c'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjQ1NDIsInN1YiI6ImFkbWluIn0.QxPWlGA6dTZW8YdAAbgDOcgaMRghcrP_QzWjuUj8HEg', 'access_expire_time': datetime.datetime(2023, 4, 4, 16, 9, 2, 587886), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTcwNDIsInN1YiI6ImFkbWluIn0.JVLL-wpG8zYz-4FmxyKWsNc_YgyZJ3c1FBbodcXRX1E', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 16, 4, 2, 588041), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 16, 4, 2, 590434), 'updated_at': datetime.datetime(2023, 4, 4, 16, 4, 2, 590438)}
[2023-04-04 18:04:07 +0200] [25863] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:04:07 +0200] [25863] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:04:07 +0200] [25863] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:04:07 +0200] [25863] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:04:07 +0200] [25863] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 18:04:07 +0200] [25863] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data lesson_number=<LessonsEnum.ONE: '1'> start_time='09:00' end_time='10:00'
[2023-04-04 18:04:07 +0200] [25863] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 1
[2023-04-04 18:04:07 +0200] [25863] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 18:04:07 +0200] [25863] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-04 18:04:09 +0200] [25863] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:04:09 +0200] [25863] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 1900-01-01 09:00:00 - 1900-01-01 10:00:00
[2023-04-04 18:04:09 +0200] [25863] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-04 18:04:09 +0200] [25863] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 1900-01-01 09:00:00 - 1900-01-01 10:00:00
[2023-04-04 18:06:10 +0200] [26164] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 18:06:10 +0200] [26164] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$qbQ/a/3sUWltwVOkvAXHOOE25/yBBu1wVSXkPg/6keTIbl6eh39vy' email='userrrr@user' id=None
[2023-04-04 18:06:10 +0200] [26164] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 18:06:10 +0200] [26164] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 18:06:10 +0200] [26164] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:06:10 +0200] [26164] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:06:10 +0200] [26164] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('e7bd29ac-c57f-40eb-9be0-612e095482a1'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$qbQ/a/3sUWltwVOkvAXHOOE25/yBBu1wVSXkPg/6keTIbl6eh39vy', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 16, 6, 10, 205383), 'updated_at': datetime.datetime(2023, 4, 4, 16, 6, 10, 205388)}
[2023-04-04 18:06:10 +0200] [26164] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:06:10 +0200] [26164] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 18:06:10 +0200] [26164] [TRACE] [services.auth_service] AuthService: Create session with user: e7bd29ac-c57f-40eb-9be0-612e095482a1
[2023-04-04 18:06:10 +0200] [26164] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 18:06:10 +0200] [26164] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('e7bd29ac-c57f-40eb-9be0-612e095482a1') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 16, 11, 10, 504099) refresh_expire_time=datetime.datetime(2023, 4, 6, 16, 6, 10, 504332) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjQ2NzAsInN1YiI6ImFkbWluIn0.0xywDvF7drytbX13fh_aMiMtT4zj4QG2tI1scToZIQo' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTcxNzAsInN1YiI6ImFkbWluIn0.56GIg13DMXmB5y6Fc_4-2yR7Xdr9qxQm3h6FW5TID7c' blocked=False is_active=True
[2023-04-04 18:06:10 +0200] [26164] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('d0112e6f-1000-46ed-a17d-1625d9d6229e'), 'user_id': UUID('e7bd29ac-c57f-40eb-9be0-612e095482a1'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjQ2NzAsInN1YiI6ImFkbWluIn0.0xywDvF7drytbX13fh_aMiMtT4zj4QG2tI1scToZIQo', 'access_expire_time': datetime.datetime(2023, 4, 4, 16, 11, 10, 504099), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTcxNzAsInN1YiI6ImFkbWluIn0.56GIg13DMXmB5y6Fc_4-2yR7Xdr9qxQm3h6FW5TID7c', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 16, 6, 10, 504332), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 16, 6, 10, 508721), 'updated_at': datetime.datetime(2023, 4, 4, 16, 6, 10, 508731)}
[2023-04-04 18:06:12 +0200] [26164] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:06:12 +0200] [26164] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:06:12 +0200] [26164] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:06:12 +0200] [26164] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:06:12 +0200] [26164] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 18:06:12 +0200] [26164] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data lesson_number=<LessonsEnum.ONE: '1'> start_time='09:00' end_time='10:00'
[2023-04-04 18:06:12 +0200] [26164] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 1
[2023-04-04 18:06:12 +0200] [26164] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 18:06:12 +0200] [26164] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-04 18:06:13 +0200] [26164] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:06:13 +0200] [26164] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 1900-01-01 09:00:00 - 1900-01-01 10:00:00
[2023-04-04 18:06:13 +0200] [26164] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-04 18:06:13 +0200] [26164] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 1900-01-01 09:00:00 - 1900-01-01 10:00:00
[2023-04-04 18:11:17 +0200] [26871] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 18:11:17 +0200] [26871] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$wKcl1VCC7TPKrYf0Vb82ge.Fb2JgVIM2KNZh9JJOK.3YgJj0ToTKy' email='userrrr@user' id=None
[2023-04-04 18:11:18 +0200] [26871] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('76ae3159-969c-45d9-b89a-31411ab9bff4'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$wKcl1VCC7TPKrYf0Vb82ge.Fb2JgVIM2KNZh9JJOK.3YgJj0ToTKy', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 16, 11, 17, 996101), 'updated_at': datetime.datetime(2023, 4, 4, 16, 11, 17, 996106)}
[2023-04-04 18:11:19 +0200] [26871] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 18:11:19 +0200] [26871] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 18:11:19 +0200] [26871] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:11:19 +0200] [26871] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:11:19 +0200] [26871] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:11:20 +0200] [26871] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 18:11:20 +0200] [26871] [TRACE] [services.auth_service] AuthService: Create session with user: 76ae3159-969c-45d9-b89a-31411ab9bff4
[2023-04-04 18:11:20 +0200] [26871] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 18:11:20 +0200] [26871] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('76ae3159-969c-45d9-b89a-31411ab9bff4') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 16, 16, 20, 168430) refresh_expire_time=datetime.datetime(2023, 4, 6, 16, 11, 20, 168596) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjQ5ODAsInN1YiI6ImFkbWluIn0.5tKHLiZ7hBqcW_yCS9CF1iGUYwwBEexJG8__LoY-pLw' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTc0ODAsInN1YiI6ImFkbWluIn0.TNoX8ZyVgDlXg6m47hJ_Uf_QjISd4GF8fP6UTXw-mJA' blocked=False is_active=True
[2023-04-04 18:11:20 +0200] [26871] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('4b885333-c45b-4da2-a88a-b2451092467d'), 'user_id': UUID('76ae3159-969c-45d9-b89a-31411ab9bff4'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjQ5ODAsInN1YiI6ImFkbWluIn0.5tKHLiZ7hBqcW_yCS9CF1iGUYwwBEexJG8__LoY-pLw', 'access_expire_time': datetime.datetime(2023, 4, 4, 16, 16, 20, 168430), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTc0ODAsInN1YiI6ImFkbWluIn0.TNoX8ZyVgDlXg6m47hJ_Uf_QjISd4GF8fP6UTXw-mJA', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 16, 11, 20, 168596), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 16, 11, 20, 171548), 'updated_at': datetime.datetime(2023, 4, 4, 16, 11, 20, 171553)}
[2023-04-04 18:11:22 +0200] [26871] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:11:22 +0200] [26871] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:11:22 +0200] [26871] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:11:22 +0200] [26871] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:11:22 +0200] [26871] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 18:11:22 +0200] [26871] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data lesson_number=<LessonsEnum.ONE: '1'> start_time='09:00' end_time='10:00'
[2023-04-04 18:13:36 +0200] [27241] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 18:13:36 +0200] [27241] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$ePK6cR0cn377PXMnMWUVi.ErkHPK9IaRZd29b8zsmPqCUvFmpO42m' email='userrrr@user' id=None
[2023-04-04 18:13:36 +0200] [27241] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('c67cfa7a-41d1-4793-89ab-34f4bade9747'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$ePK6cR0cn377PXMnMWUVi.ErkHPK9IaRZd29b8zsmPqCUvFmpO42m', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 16, 13, 36, 254687), 'updated_at': datetime.datetime(2023, 4, 4, 16, 13, 36, 254696)}
[2023-04-04 18:13:38 +0200] [27241] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 18:13:38 +0200] [27241] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 18:13:38 +0200] [27241] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:13:38 +0200] [27241] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:13:38 +0200] [27241] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:13:39 +0200] [27241] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 18:13:39 +0200] [27241] [TRACE] [services.auth_service] AuthService: Create session with user: c67cfa7a-41d1-4793-89ab-34f4bade9747
[2023-04-04 18:13:39 +0200] [27241] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 18:13:39 +0200] [27241] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('c67cfa7a-41d1-4793-89ab-34f4bade9747') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 16, 18, 39, 112577) refresh_expire_time=datetime.datetime(2023, 4, 6, 16, 13, 39, 112739) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjUxMTksInN1YiI6ImFkbWluIn0.J8xSvv1opoMp9Om2T9nrV_I83kgIl4WrJ4Uu0PESzBc' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTc2MTksInN1YiI6ImFkbWluIn0.VpzhCoWAD2q765evBdHblUU6kLUMgTuaO99rDbyw-oA' blocked=False is_active=True
[2023-04-04 18:13:39 +0200] [27241] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('b311aa0e-d0e0-4a09-a649-883f5efcbc3c'), 'user_id': UUID('c67cfa7a-41d1-4793-89ab-34f4bade9747'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjUxMTksInN1YiI6ImFkbWluIn0.J8xSvv1opoMp9Om2T9nrV_I83kgIl4WrJ4Uu0PESzBc', 'access_expire_time': datetime.datetime(2023, 4, 4, 16, 18, 39, 112577), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTc2MTksInN1YiI6ImFkbWluIn0.VpzhCoWAD2q765evBdHblUU6kLUMgTuaO99rDbyw-oA', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 16, 13, 39, 112739), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 16, 13, 39, 115548), 'updated_at': datetime.datetime(2023, 4, 4, 16, 13, 39, 115553)}
[2023-04-04 18:13:40 +0200] [27241] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:13:40 +0200] [27241] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:13:40 +0200] [27241] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:13:40 +0200] [27241] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:13:40 +0200] [27241] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 18:13:40 +0200] [27241] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data lesson_number=<LessonsEnum.ONE: '1'> start_time='09:00' end_time='10:00'
[2023-04-04 18:13:40 +0200] [27241] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 1
[2023-04-04 18:13:40 +0200] [27241] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 18:13:40 +0200] [27241] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-04 18:13:42 +0200] [27241] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:13:42 +0200] [27241] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 09:00 - 10:00
[2023-04-04 18:13:42 +0200] [27241] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-04 18:13:42 +0200] [27241] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 09:00 - 10:00
[2023-04-04 18:14:26 +0200] [27370] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 18:14:26 +0200] [27370] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$j3qDFHSWYNOM2p00Pfpmf.l8VcXwr4ky8woBL.OvBctyEPizdusX6' email='userrrr@user' id=None
[2023-04-04 18:14:26 +0200] [27370] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('27e4ba50-d1e5-4784-9f16-9236829171db'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$j3qDFHSWYNOM2p00Pfpmf.l8VcXwr4ky8woBL.OvBctyEPizdusX6', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 16, 14, 26, 145655), 'updated_at': datetime.datetime(2023, 4, 4, 16, 14, 26, 145662)}
[2023-04-04 18:14:28 +0200] [27370] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 18:14:28 +0200] [27370] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 18:14:28 +0200] [27370] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:14:28 +0200] [27370] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:14:28 +0200] [27370] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:14:28 +0200] [27370] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 18:14:28 +0200] [27370] [TRACE] [services.auth_service] AuthService: Create session with user: 27e4ba50-d1e5-4784-9f16-9236829171db
[2023-04-04 18:14:28 +0200] [27370] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 18:14:28 +0200] [27370] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('27e4ba50-d1e5-4784-9f16-9236829171db') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 16, 19, 28, 595371) refresh_expire_time=datetime.datetime(2023, 4, 6, 16, 14, 28, 595532) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjUxNjgsInN1YiI6ImFkbWluIn0.me8AJCK4lnidAVND9_whYSlsbQ-NixM_rzKtrURorcs' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTc2NjgsInN1YiI6ImFkbWluIn0.MwZOuEZTDu2XJLBCa0mL-zfRJKoEBldDX4oUMoNTH9g' blocked=False is_active=True
[2023-04-04 18:14:28 +0200] [27370] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('8b189401-3a6f-4e02-94ee-338f0571607a'), 'user_id': UUID('27e4ba50-d1e5-4784-9f16-9236829171db'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjUxNjgsInN1YiI6ImFkbWluIn0.me8AJCK4lnidAVND9_whYSlsbQ-NixM_rzKtrURorcs', 'access_expire_time': datetime.datetime(2023, 4, 4, 16, 19, 28, 595371), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTc2NjgsInN1YiI6ImFkbWluIn0.MwZOuEZTDu2XJLBCa0mL-zfRJKoEBldDX4oUMoNTH9g', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 16, 14, 28, 595532), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 16, 14, 28, 598400), 'updated_at': datetime.datetime(2023, 4, 4, 16, 14, 28, 598406)}
[2023-04-04 18:14:31 +0200] [27370] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:14:31 +0200] [27370] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:14:31 +0200] [27370] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:14:31 +0200] [27370] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:14:31 +0200] [27370] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 18:14:31 +0200] [27370] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data lesson_number=<LessonsEnum.ONE: '1'> start_time='09:00' end_time='10:00'
[2023-04-04 18:14:31 +0200] [27370] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 1
[2023-04-04 18:14:31 +0200] [27370] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 18:14:31 +0200] [27370] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-04 18:14:32 +0200] [27370] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:14:32 +0200] [27370] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 09:00:00 - 10:00:00
[2023-04-04 18:14:32 +0200] [27370] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-04 18:14:32 +0200] [27370] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 09:00:00 - 10:00:00
[2023-04-04 18:14:32 +0200] [27370] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database []
[2023-04-04 18:14:32 +0200] [27370] [INFO] [db.dao.base_dao] LessonModel DAO: Create db entry
[2023-04-04 18:14:32 +0200] [27370] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed for creation: lesson_number=<LessonsEnum.ONE: '1'> start_time=datetime.time(9, 0) end_time=datetime.time(10, 0)
[2023-04-04 18:14:32 +0200] [27370] [DEBUG] [db.dao.base_dao] LessonModel DAO: Created entry in database: {'id': UUID('89ccec2d-2cf0-4450-a22c-eaba27a74101'), 'lesson_number': <LessonsEnum.ONE: '1'>, 'start_time': datetime.time(9, 0), 'end_time': datetime.time(10, 0)}
[2023-04-04 18:16:52 +0200] [27677] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 18:16:52 +0200] [27677] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$9P5ZsGUL8NhksJYAvs7MQOt5OzeXE4567syBlWt4.OHyjaaNB29OG' email='userrrr@user' id=None
[2023-04-04 18:16:52 +0200] [27677] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('3b2ad509-23cf-44f3-8e3e-f8a196d7c5c7'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$9P5ZsGUL8NhksJYAvs7MQOt5OzeXE4567syBlWt4.OHyjaaNB29OG', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 16, 16, 52, 46395), 'updated_at': datetime.datetime(2023, 4, 4, 16, 16, 52, 46402)}
[2023-04-04 18:16:55 +0200] [27677] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 18:16:55 +0200] [27677] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 18:16:55 +0200] [27677] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:16:55 +0200] [27677] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:16:55 +0200] [27677] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:16:55 +0200] [27677] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 18:16:55 +0200] [27677] [TRACE] [services.auth_service] AuthService: Create session with user: 3b2ad509-23cf-44f3-8e3e-f8a196d7c5c7
[2023-04-04 18:16:55 +0200] [27677] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 18:16:55 +0200] [27677] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('3b2ad509-23cf-44f3-8e3e-f8a196d7c5c7') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 16, 21, 55, 553501) refresh_expire_time=datetime.datetime(2023, 4, 6, 16, 16, 55, 553670) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjUzMTUsInN1YiI6ImFkbWluIn0.wI8Mz4tLBJdm5UDFIf5-RKPN2LFIoaiGCvtGQTPX2AI' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTc4MTUsInN1YiI6ImFkbWluIn0.ZT5I5hfZJaNgZimjc7f1ZfuNQ4SsoMgRdhmoRXrixy0' blocked=False is_active=True
[2023-04-04 18:16:55 +0200] [27677] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('d2e805ef-d421-4650-baad-1fd4bc3b894b'), 'user_id': UUID('3b2ad509-23cf-44f3-8e3e-f8a196d7c5c7'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjUzMTUsInN1YiI6ImFkbWluIn0.wI8Mz4tLBJdm5UDFIf5-RKPN2LFIoaiGCvtGQTPX2AI', 'access_expire_time': datetime.datetime(2023, 4, 4, 16, 21, 55, 553501), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTc4MTUsInN1YiI6ImFkbWluIn0.ZT5I5hfZJaNgZimjc7f1ZfuNQ4SsoMgRdhmoRXrixy0', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 16, 16, 55, 553670), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 16, 16, 55, 556236), 'updated_at': datetime.datetime(2023, 4, 4, 16, 16, 55, 556242)}
[2023-04-04 18:16:58 +0200] [27677] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:16:58 +0200] [27677] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:16:58 +0200] [27677] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:16:58 +0200] [27677] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:16:58 +0200] [27677] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 18:16:58 +0200] [27677] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data lesson_number=<LessonsEnum.ONE: '1'> start_time='09:00' end_time='10:00'
[2023-04-04 18:16:58 +0200] [27677] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 1
[2023-04-04 18:16:58 +0200] [27677] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 18:16:58 +0200] [27677] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-04 18:16:59 +0200] [27677] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:16:59 +0200] [27677] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 09:00:00 - 10:00:00
[2023-04-04 18:16:59 +0200] [27677] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-04 18:16:59 +0200] [27677] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 09:00:00 - 10:00:00
[2023-04-04 18:16:59 +0200] [27677] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database []
[2023-04-04 18:16:59 +0200] [27677] [INFO] [db.dao.base_dao] LessonModel DAO: Create db entry
[2023-04-04 18:16:59 +0200] [27677] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed for creation: lesson_number=<LessonsEnum.ONE: '1'> start_time=datetime.time(9, 0) end_time=datetime.time(10, 0)
[2023-04-04 18:16:59 +0200] [27677] [DEBUG] [db.dao.base_dao] LessonModel DAO: Created entry in database: {'id': UUID('8d45c101-f72d-4457-8f79-24bec0304f1e'), 'lesson_number': <LessonsEnum.ONE: '1'>, 'start_time': datetime.time(9, 0), 'end_time': datetime.time(10, 0)}
[2023-04-04 18:18:25 +0200] [27930] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 18:18:25 +0200] [27930] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$BIHr0xazUWd4eA.Y7ce1aec1XMQT8YrJGYgk/tKnt61Qo.flFmsDK' email='userrrr@user' id=None
[2023-04-04 18:18:25 +0200] [27930] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('fba8c59f-78a6-4e1f-99f1-5f23372c3bed'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$BIHr0xazUWd4eA.Y7ce1aec1XMQT8YrJGYgk/tKnt61Qo.flFmsDK', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 16, 18, 25, 786987), 'updated_at': datetime.datetime(2023, 4, 4, 16, 18, 25, 786993)}
[2023-04-04 18:18:38 +0200] [27930] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 18:18:38 +0200] [27930] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 18:18:38 +0200] [27930] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:18:38 +0200] [27930] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:18:38 +0200] [27930] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:18:38 +0200] [27930] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 18:18:38 +0200] [27930] [TRACE] [services.auth_service] AuthService: Create session with user: fba8c59f-78a6-4e1f-99f1-5f23372c3bed
[2023-04-04 18:18:38 +0200] [27930] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 18:18:38 +0200] [27930] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('fba8c59f-78a6-4e1f-99f1-5f23372c3bed') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 16, 23, 38, 386159) refresh_expire_time=datetime.datetime(2023, 4, 6, 16, 18, 38, 386303) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjU0MTgsInN1YiI6ImFkbWluIn0.GxDdftGYKsNtec8HuvATn-0HKebABKzw6enYMwJQYJ8' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTc5MTgsInN1YiI6ImFkbWluIn0.OGWVfIV8KLIb3bl-4pN7SFYOYWeQ-sD1LLqizjeCjHE' blocked=False is_active=True
[2023-04-04 18:18:38 +0200] [27930] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('a8044a02-cc72-4571-ae66-46d403d22233'), 'user_id': UUID('fba8c59f-78a6-4e1f-99f1-5f23372c3bed'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjU0MTgsInN1YiI6ImFkbWluIn0.GxDdftGYKsNtec8HuvATn-0HKebABKzw6enYMwJQYJ8', 'access_expire_time': datetime.datetime(2023, 4, 4, 16, 23, 38, 386159), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTc5MTgsInN1YiI6ImFkbWluIn0.OGWVfIV8KLIb3bl-4pN7SFYOYWeQ-sD1LLqizjeCjHE', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 16, 18, 38, 386303), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 16, 18, 38, 388604), 'updated_at': datetime.datetime(2023, 4, 4, 16, 18, 38, 388608)}
[2023-04-04 18:18:41 +0200] [27930] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:18:41 +0200] [27930] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:18:41 +0200] [27930] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:18:41 +0200] [27930] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:18:41 +0200] [27930] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 18:18:41 +0200] [27930] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data lesson_number=<LessonsEnum.ONE: '1'> start_time='09:00' end_time='10:00'
[2023-04-04 18:18:41 +0200] [27930] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 1
[2023-04-04 18:18:41 +0200] [27930] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 18:18:41 +0200] [27930] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-04 18:18:42 +0200] [27930] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:18:42 +0200] [27930] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 09:00:00 - 10:00:00
[2023-04-04 18:18:42 +0200] [27930] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-04 18:18:42 +0200] [27930] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 09:00:00 - 10:00:00
[2023-04-04 18:18:42 +0200] [27930] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database []
[2023-04-04 18:18:42 +0200] [27930] [INFO] [db.dao.base_dao] LessonModel DAO: Create db entry
[2023-04-04 18:18:42 +0200] [27930] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed for creation: lesson_number=<LessonsEnum.ONE: '1'> start_time=datetime.time(9, 0) end_time=datetime.time(10, 0)
[2023-04-04 18:18:42 +0200] [27930] [DEBUG] [db.dao.base_dao] LessonModel DAO: Created entry in database: {'id': UUID('faba7723-e780-488e-b465-3a3ffea5f8ce'), 'lesson_number': <LessonsEnum.ONE: '1'>, 'start_time': datetime.time(9, 0), 'end_time': datetime.time(10, 0)}
[2023-04-04 18:19:02 +0200] [27930] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:19:02 +0200] [27930] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:19:02 +0200] [27930] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:19:02 +0200] [27930] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:19:02 +0200] [27930] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 18:19:02 +0200] [27930] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data lesson_number=<LessonsEnum.ONE: '1'> start_time='11:00' end_time='12:00'
[2023-04-04 18:19:02 +0200] [27930] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 1
[2023-04-04 18:19:02 +0200] [27930] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 18:19:02 +0200] [27930] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-04 18:19:02 +0200] [27930] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:19:02 +0200] [27930] [INFO] [services.lesson_service] LessonService: Got existing lesson from db: {'id': UUID('faba7723-e780-488e-b465-3a3ffea5f8ce'), 'lesson_number': <LessonsEnum.ONE: '1'>, 'start_time': datetime.time(9, 0), 'end_time': datetime.time(10, 0)}
[2023-04-04 18:19:07 +0200] [27930] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:19:07 +0200] [27930] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:19:07 +0200] [27930] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:19:07 +0200] [27930] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:19:07 +0200] [27930] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 18:19:07 +0200] [27930] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data lesson_number=<LessonsEnum.TWO: '2'> start_time='11:00' end_time='12:00'
[2023-04-04 18:19:07 +0200] [27930] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 2
[2023-04-04 18:19:07 +0200] [27930] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 18:19:07 +0200] [27930] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.TWO: '2'>}
[2023-04-04 18:19:07 +0200] [27930] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:19:07 +0200] [27930] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 11:00:00 - 12:00:00
[2023-04-04 18:19:07 +0200] [27930] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-04 18:19:07 +0200] [27930] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 11:00:00 - 12:00:00
[2023-04-04 18:19:07 +0200] [27930] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database []
[2023-04-04 18:19:07 +0200] [27930] [INFO] [db.dao.base_dao] LessonModel DAO: Create db entry
[2023-04-04 18:19:07 +0200] [27930] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed for creation: lesson_number=<LessonsEnum.TWO: '2'> start_time=datetime.time(11, 0) end_time=datetime.time(12, 0)
[2023-04-04 18:19:07 +0200] [27930] [DEBUG] [db.dao.base_dao] LessonModel DAO: Created entry in database: {'id': UUID('54ef8b7b-90b6-4726-91be-c9251916427c'), 'lesson_number': <LessonsEnum.TWO: '2'>, 'start_time': datetime.time(11, 0), 'end_time': datetime.time(12, 0)}
[2023-04-04 18:19:28 +0200] [27930] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:19:28 +0200] [27930] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:19:28 +0200] [27930] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:19:28 +0200] [27930] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:19:28 +0200] [27930] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 18:19:28 +0200] [27930] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data lesson_number=<LessonsEnum.THREE: '3'> start_time='9:30' end_time='10:00'
[2023-04-04 18:19:28 +0200] [27930] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 3
[2023-04-04 18:19:28 +0200] [27930] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 18:19:28 +0200] [27930] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.THREE: '3'>}
[2023-04-04 18:19:28 +0200] [27930] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:19:28 +0200] [27930] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 09:30:00 - 10:00:00
[2023-04-04 18:19:28 +0200] [27930] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-04 18:19:28 +0200] [27930] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 09:30:00 - 10:00:00
[2023-04-04 18:19:28 +0200] [27930] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database [<db.models.LessonModel.LessonModel object at 0x7f0f8c28ddc0>]
[2023-04-04 18:20:35 +0200] [28207] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 18:20:35 +0200] [28207] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$2uQw.4pFvsik0PgOCQyA2.INU9Ex2Ud1yuxH8b6duwGVnQ5fdZgGG' email='userrrr@user' id=None
[2023-04-04 18:20:35 +0200] [28207] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('5106929f-26e8-432a-83f0-dcc38129c1a7'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$2uQw.4pFvsik0PgOCQyA2.INU9Ex2Ud1yuxH8b6duwGVnQ5fdZgGG', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 16, 20, 35, 318791), 'updated_at': datetime.datetime(2023, 4, 4, 16, 20, 35, 318797)}
[2023-04-04 18:20:37 +0200] [28207] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 18:20:37 +0200] [28207] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 18:20:37 +0200] [28207] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:20:37 +0200] [28207] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:20:37 +0200] [28207] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:20:37 +0200] [28207] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 18:20:37 +0200] [28207] [TRACE] [services.auth_service] AuthService: Create session with user: 5106929f-26e8-432a-83f0-dcc38129c1a7
[2023-04-04 18:20:37 +0200] [28207] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 18:20:37 +0200] [28207] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('5106929f-26e8-432a-83f0-dcc38129c1a7') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 16, 25, 37, 519702) refresh_expire_time=datetime.datetime(2023, 4, 6, 16, 20, 37, 519864) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjU1MzcsInN1YiI6ImFkbWluIn0.QJNsXQxSNjhLquNLSueoCheY4SNacEwizRflYWpI0wA' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTgwMzcsInN1YiI6ImFkbWluIn0.VhCNYSYz6ACK8l4Q7GUc1SZW3SP9ZfXLmJ42gcjN_Xc' blocked=False is_active=True
[2023-04-04 18:20:37 +0200] [28207] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('6be65ae0-55e7-4cbd-a805-33942ff94ea6'), 'user_id': UUID('5106929f-26e8-432a-83f0-dcc38129c1a7'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjU1MzcsInN1YiI6ImFkbWluIn0.QJNsXQxSNjhLquNLSueoCheY4SNacEwizRflYWpI0wA', 'access_expire_time': datetime.datetime(2023, 4, 4, 16, 25, 37, 519702), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTgwMzcsInN1YiI6ImFkbWluIn0.VhCNYSYz6ACK8l4Q7GUc1SZW3SP9ZfXLmJ42gcjN_Xc', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 16, 20, 37, 519864), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 16, 20, 37, 522451), 'updated_at': datetime.datetime(2023, 4, 4, 16, 20, 37, 522455)}
[2023-04-04 18:20:41 +0200] [28207] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:20:41 +0200] [28207] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:20:41 +0200] [28207] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:20:41 +0200] [28207] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:20:41 +0200] [28207] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 18:20:41 +0200] [28207] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data lesson_number=<LessonsEnum.THREE: '3'> start_time='9:30' end_time='10:00'
[2023-04-04 18:20:41 +0200] [28207] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 3
[2023-04-04 18:20:41 +0200] [28207] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 18:20:41 +0200] [28207] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.THREE: '3'>}
[2023-04-04 18:20:41 +0200] [28207] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:20:41 +0200] [28207] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 09:30:00 - 10:00:00
[2023-04-04 18:20:41 +0200] [28207] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-04 18:20:41 +0200] [28207] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 09:30:00 - 10:00:00
[2023-04-04 18:20:41 +0200] [28207] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database []
[2023-04-04 18:20:41 +0200] [28207] [INFO] [db.dao.base_dao] LessonModel DAO: Create db entry
[2023-04-04 18:20:41 +0200] [28207] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed for creation: lesson_number=<LessonsEnum.THREE: '3'> start_time=datetime.time(9, 30) end_time=datetime.time(10, 0)
[2023-04-04 18:20:41 +0200] [28207] [DEBUG] [db.dao.base_dao] LessonModel DAO: Created entry in database: {'id': UUID('1bd3f4b7-a3a5-4af2-905c-6354385f20b4'), 'lesson_number': <LessonsEnum.THREE: '3'>, 'start_time': datetime.time(9, 30), 'end_time': datetime.time(10, 0)}
[2023-04-04 18:20:49 +0200] [28207] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:20:49 +0200] [28207] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:20:49 +0200] [28207] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:20:49 +0200] [28207] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:20:49 +0200] [28207] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 18:20:49 +0200] [28207] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data lesson_number=<LessonsEnum.ONE: '1'> start_time='9:00' end_time='10:00'
[2023-04-04 18:20:49 +0200] [28207] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 1
[2023-04-04 18:20:49 +0200] [28207] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 18:20:49 +0200] [28207] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-04 18:20:49 +0200] [28207] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:20:49 +0200] [28207] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 09:00:00 - 10:00:00
[2023-04-04 18:20:49 +0200] [28207] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-04 18:20:49 +0200] [28207] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 09:00:00 - 10:00:00
[2023-04-04 18:20:49 +0200] [28207] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database [<db.models.LessonModel.LessonModel object at 0x7f6e761aa4f0>]
[2023-04-04 18:20:49 +0200] [28207] [INFO] [services.lesson_service] LessonService: Got existing lesson from db: <generator object LessonService.create_lesson.<locals>.<genexpr> at 0x7f6e76254b30>
[2023-04-04 18:20:59 +0200] [28207] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:20:59 +0200] [28207] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:20:59 +0200] [28207] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:20:59 +0200] [28207] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:20:59 +0200] [28207] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 18:20:59 +0200] [28207] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data lesson_number=<LessonsEnum.ONE: '1'> start_time='8:00' end_time='10:00'
[2023-04-04 18:20:59 +0200] [28207] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 1
[2023-04-04 18:20:59 +0200] [28207] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 18:20:59 +0200] [28207] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-04 18:20:59 +0200] [28207] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:20:59 +0200] [28207] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 08:00:00 - 10:00:00
[2023-04-04 18:20:59 +0200] [28207] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-04 18:20:59 +0200] [28207] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 08:00:00 - 10:00:00
[2023-04-04 18:20:59 +0200] [28207] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database [<db.models.LessonModel.LessonModel object at 0x7f6e761aaf70>]
[2023-04-04 18:20:59 +0200] [28207] [INFO] [services.lesson_service] LessonService: Got existing lesson from db: <generator object LessonService.create_lesson.<locals>.<genexpr> at 0x7f6e76254ac0>
[2023-04-04 18:21:10 +0200] [28207] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:21:10 +0200] [28207] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:21:10 +0200] [28207] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:21:10 +0200] [28207] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:21:10 +0200] [28207] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 18:21:10 +0200] [28207] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data lesson_number=<LessonsEnum.ONE: '1'> start_time='10:00' end_time='11:00'
[2023-04-04 18:21:10 +0200] [28207] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 1
[2023-04-04 18:21:10 +0200] [28207] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 18:21:10 +0200] [28207] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-04 18:21:10 +0200] [28207] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:21:10 +0200] [28207] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 10:00:00 - 11:00:00
[2023-04-04 18:21:10 +0200] [28207] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-04 18:21:10 +0200] [28207] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 10:00:00 - 11:00:00
[2023-04-04 18:21:10 +0200] [28207] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database [<db.models.LessonModel.LessonModel object at 0x7f6e761b3a30>]
[2023-04-04 18:21:10 +0200] [28207] [INFO] [services.lesson_service] LessonService: Got existing lesson from db: <generator object LessonService.create_lesson.<locals>.<genexpr> at 0x7f6e76254b30>
[2023-04-04 18:21:15 +0200] [28207] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:21:15 +0200] [28207] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:21:15 +0200] [28207] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:21:15 +0200] [28207] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:21:15 +0200] [28207] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 18:21:15 +0200] [28207] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data lesson_number=<LessonsEnum.ONE: '1'> start_time='10:15' end_time='11:00'
[2023-04-04 18:21:15 +0200] [28207] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 1
[2023-04-04 18:21:15 +0200] [28207] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 18:21:15 +0200] [28207] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-04 18:21:15 +0200] [28207] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:21:15 +0200] [28207] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 10:15:00 - 11:00:00
[2023-04-04 18:21:15 +0200] [28207] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-04 18:21:15 +0200] [28207] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 10:15:00 - 11:00:00
[2023-04-04 18:21:15 +0200] [28207] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database []
[2023-04-04 18:21:15 +0200] [28207] [INFO] [db.dao.base_dao] LessonModel DAO: Create db entry
[2023-04-04 18:21:15 +0200] [28207] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed for creation: lesson_number=<LessonsEnum.ONE: '1'> start_time=datetime.time(10, 15) end_time=datetime.time(11, 0)
[2023-04-04 18:21:15 +0200] [28207] [DEBUG] [db.dao.base_dao] LessonModel DAO: Created entry in database: {'id': UUID('2346531a-1b8e-4462-989f-09fb286dde24'), 'lesson_number': <LessonsEnum.ONE: '1'>, 'start_time': datetime.time(10, 15), 'end_time': datetime.time(11, 0)}
[2023-04-04 18:21:23 +0200] [28207] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:21:23 +0200] [28207] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:21:23 +0200] [28207] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:21:23 +0200] [28207] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:21:23 +0200] [28207] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 18:21:23 +0200] [28207] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data lesson_number=<LessonsEnum.ONE: '1'> start_time='10:15' end_time='11:00'
[2023-04-04 18:21:23 +0200] [28207] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 1
[2023-04-04 18:21:23 +0200] [28207] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 18:21:23 +0200] [28207] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-04 18:21:23 +0200] [28207] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:21:56 +0200] [28387] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 18:21:56 +0200] [28387] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$c25zBufGOAF/wCA6/D3NM.ihmVC/QQm1xW2SedYGiN4mDCQA1hZde' email='userrrr@user' id=None
[2023-04-04 18:21:56 +0200] [28387] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('19e0ce36-fc8f-491f-8755-921f3abb89d9'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$c25zBufGOAF/wCA6/D3NM.ihmVC/QQm1xW2SedYGiN4mDCQA1hZde', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 16, 21, 56, 414053), 'updated_at': datetime.datetime(2023, 4, 4, 16, 21, 56, 414059)}
[2023-04-04 18:21:58 +0200] [28387] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 18:21:58 +0200] [28387] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 18:21:58 +0200] [28387] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:21:58 +0200] [28387] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:21:58 +0200] [28387] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:21:58 +0200] [28387] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 18:21:58 +0200] [28387] [TRACE] [services.auth_service] AuthService: Create session with user: 19e0ce36-fc8f-491f-8755-921f3abb89d9
[2023-04-04 18:21:58 +0200] [28387] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 18:21:58 +0200] [28387] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('19e0ce36-fc8f-491f-8755-921f3abb89d9') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 16, 26, 58, 637502) refresh_expire_time=datetime.datetime(2023, 4, 6, 16, 21, 58, 637707) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjU2MTgsInN1YiI6ImFkbWluIn0.oYPnGhzo7fCObbB36cUhdrYvuWvk8VQ1yfUJ1I8HJyc' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTgxMTgsInN1YiI6ImFkbWluIn0.rj-kwJy5RCesxo0JmPNGbCSJbfdIPLiuTH4Yap6_B84' blocked=False is_active=True
[2023-04-04 18:21:58 +0200] [28387] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('6a3b9ccf-5783-4873-aa09-1a7b0eb9d317'), 'user_id': UUID('19e0ce36-fc8f-491f-8755-921f3abb89d9'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjU2MTgsInN1YiI6ImFkbWluIn0.oYPnGhzo7fCObbB36cUhdrYvuWvk8VQ1yfUJ1I8HJyc', 'access_expire_time': datetime.datetime(2023, 4, 4, 16, 26, 58, 637502), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTgxMTgsInN1YiI6ImFkbWluIn0.rj-kwJy5RCesxo0JmPNGbCSJbfdIPLiuTH4Yap6_B84', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 16, 21, 58, 637707), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 16, 21, 58, 639941), 'updated_at': datetime.datetime(2023, 4, 4, 16, 21, 58, 639945)}
[2023-04-04 18:22:01 +0200] [28387] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:22:01 +0200] [28387] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:22:01 +0200] [28387] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:22:01 +0200] [28387] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:22:01 +0200] [28387] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 18:22:01 +0200] [28387] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data lesson_number=<LessonsEnum.ONE: '1'> start_time='10:15' end_time='11:00'
[2023-04-04 18:22:01 +0200] [28387] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 1
[2023-04-04 18:22:01 +0200] [28387] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 18:22:01 +0200] [28387] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-04 18:22:01 +0200] [28387] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:22:01 +0200] [28387] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 10:15:00 - 11:00:00
[2023-04-04 18:22:01 +0200] [28387] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-04 18:22:01 +0200] [28387] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 10:15:00 - 11:00:00
[2023-04-04 18:22:01 +0200] [28387] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database []
[2023-04-04 18:22:01 +0200] [28387] [INFO] [db.dao.base_dao] LessonModel DAO: Create db entry
[2023-04-04 18:22:01 +0200] [28387] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed for creation: lesson_number=<LessonsEnum.ONE: '1'> start_time=datetime.time(10, 15) end_time=datetime.time(11, 0)
[2023-04-04 18:22:01 +0200] [28387] [DEBUG] [db.dao.base_dao] LessonModel DAO: Created entry in database: {'id': UUID('4d5c3081-572d-4dab-8d6d-58be8a92e024'), 'lesson_number': <LessonsEnum.ONE: '1'>, 'start_time': datetime.time(10, 15), 'end_time': datetime.time(11, 0)}
[2023-04-04 18:22:02 +0200] [28387] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:22:02 +0200] [28387] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:22:02 +0200] [28387] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:22:02 +0200] [28387] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:22:02 +0200] [28387] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 18:22:02 +0200] [28387] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data lesson_number=<LessonsEnum.ONE: '1'> start_time='10:15' end_time='11:00'
[2023-04-04 18:22:02 +0200] [28387] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 1
[2023-04-04 18:22:02 +0200] [28387] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 18:22:02 +0200] [28387] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-04 18:22:02 +0200] [28387] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:22:02 +0200] [28387] [INFO] [services.lesson_service] LessonService: Got existing lesson from db: <db.models.LessonModel.LessonModel object at 0x7fb529103280>
[2023-04-04 18:34:28 +0200] [29264] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 18:34:28 +0200] [29264] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$6DN15Z6Zw442WZv/9QKBqeVxiZ/6nLzfEjcSDZqrRzas9g6KybmDy' email='userrrr@user' id=None
[2023-04-04 18:34:28 +0200] [29264] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('9c02b776-4453-4996-be9b-f02052e0f755'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$6DN15Z6Zw442WZv/9QKBqeVxiZ/6nLzfEjcSDZqrRzas9g6KybmDy', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 16, 34, 28, 858797), 'updated_at': datetime.datetime(2023, 4, 4, 16, 34, 28, 858803)}
[2023-04-04 18:34:30 +0200] [29264] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 18:34:30 +0200] [29264] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 18:34:30 +0200] [29264] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:34:30 +0200] [29264] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:34:30 +0200] [29264] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:34:31 +0200] [29264] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 18:34:31 +0200] [29264] [TRACE] [services.auth_service] AuthService: Create session with user: 9c02b776-4453-4996-be9b-f02052e0f755
[2023-04-04 18:34:31 +0200] [29264] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 18:34:31 +0200] [29264] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('9c02b776-4453-4996-be9b-f02052e0f755') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 16, 39, 31, 159002) refresh_expire_time=datetime.datetime(2023, 4, 6, 16, 34, 31, 159166) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjYzNzEsInN1YiI6ImFkbWluIn0.9kgqMKNs4s4eHWBDscDvlgaL-l8_8unC3Smxxjo2c7o' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTg4NzEsInN1YiI6ImFkbWluIn0.stjHOug0gvm2wXIFEspD54zwcz-PE0_fGnYhO3PQriQ' blocked=False is_active=True
[2023-04-04 18:34:31 +0200] [29264] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('2eefeb64-1063-4624-a54f-a5d583c23ccf'), 'user_id': UUID('9c02b776-4453-4996-be9b-f02052e0f755'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjYzNzEsInN1YiI6ImFkbWluIn0.9kgqMKNs4s4eHWBDscDvlgaL-l8_8unC3Smxxjo2c7o', 'access_expire_time': datetime.datetime(2023, 4, 4, 16, 39, 31, 159002), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTg4NzEsInN1YiI6ImFkbWluIn0.stjHOug0gvm2wXIFEspD54zwcz-PE0_fGnYhO3PQriQ', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 16, 34, 31, 159166), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 16, 34, 31, 161713), 'updated_at': datetime.datetime(2023, 4, 4, 16, 34, 31, 161718)}
[2023-04-04 18:34:33 +0200] [29264] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:34:33 +0200] [29264] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:34:33 +0200] [29264] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:34:33 +0200] [29264] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:34:33 +0200] [29264] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 18:34:33 +0200] [29264] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data lesson_number=<LessonsEnum.ONE: '1'> start_time='10:15' end_time='11:00'
[2023-04-04 18:34:33 +0200] [29264] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 1
[2023-04-04 18:34:33 +0200] [29264] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 18:34:33 +0200] [29264] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-04 18:34:33 +0200] [29264] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:34:33 +0200] [29264] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 10:15:00 - 11:00:00
[2023-04-04 18:34:33 +0200] [29264] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-04 18:34:33 +0200] [29264] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 10:15:00 - 11:00:00
[2023-04-04 18:34:33 +0200] [29264] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database []
[2023-04-04 18:34:33 +0200] [29264] [INFO] [db.dao.base_dao] LessonModel DAO: Create db entry
[2023-04-04 18:34:33 +0200] [29264] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed for creation: lesson_number=<LessonsEnum.ONE: '1'> start_time=datetime.time(10, 15) end_time=datetime.time(11, 0)
[2023-04-04 18:34:33 +0200] [29264] [DEBUG] [db.dao.base_dao] LessonModel DAO: Created entry in database: {'id': UUID('9e77afde-6249-4ca7-93db-625579a09fcf'), 'lesson_number': <LessonsEnum.ONE: '1'>, 'start_time': datetime.time(10, 15), 'end_time': datetime.time(11, 0)}
[2023-04-04 18:34:41 +0200] [29264] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:34:41 +0200] [29264] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:34:41 +0200] [29264] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:34:41 +0200] [29264] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:34:41 +0200] [29264] [INFO] [services.lesson_service] LessonService: Get all lessons
[2023-04-04 18:35:03 +0200] [29431] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 18:35:03 +0200] [29431] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$47STFE11GXDivoqEpE/fc.LIkKv5l9jYCRztWtBgybqcbjKZ9px2W' email='userrrr@user' id=None
[2023-04-04 18:35:03 +0200] [29431] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('92c2b3ae-c873-4725-83d5-1315c5d3fcc6'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$47STFE11GXDivoqEpE/fc.LIkKv5l9jYCRztWtBgybqcbjKZ9px2W', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 16, 35, 3, 148168), 'updated_at': datetime.datetime(2023, 4, 4, 16, 35, 3, 148174)}
[2023-04-04 18:35:05 +0200] [29431] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 18:35:05 +0200] [29431] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 18:35:05 +0200] [29431] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:35:05 +0200] [29431] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:35:05 +0200] [29431] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:35:05 +0200] [29431] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 18:35:05 +0200] [29431] [TRACE] [services.auth_service] AuthService: Create session with user: 92c2b3ae-c873-4725-83d5-1315c5d3fcc6
[2023-04-04 18:35:05 +0200] [29431] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 18:35:05 +0200] [29431] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('92c2b3ae-c873-4725-83d5-1315c5d3fcc6') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 16, 40, 5, 297303) refresh_expire_time=datetime.datetime(2023, 4, 6, 16, 35, 5, 297463) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjY0MDUsInN1YiI6ImFkbWluIn0.ercvrY4IJO6ZS3sRZ62MNsZltK12xQ79F4WROpOQ5zs' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTg5MDUsInN1YiI6ImFkbWluIn0.r2as4qh8vkTx8Up1VQncBaQ8ddPXNa_lgpPadA311qQ' blocked=False is_active=True
[2023-04-04 18:35:05 +0200] [29431] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('8e87964a-ecb8-4683-8d33-e95e967a6e24'), 'user_id': UUID('92c2b3ae-c873-4725-83d5-1315c5d3fcc6'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjY0MDUsInN1YiI6ImFkbWluIn0.ercvrY4IJO6ZS3sRZ62MNsZltK12xQ79F4WROpOQ5zs', 'access_expire_time': datetime.datetime(2023, 4, 4, 16, 40, 5, 297303), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTg5MDUsInN1YiI6ImFkbWluIn0.r2as4qh8vkTx8Up1VQncBaQ8ddPXNa_lgpPadA311qQ', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 16, 35, 5, 297463), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 16, 35, 5, 300102), 'updated_at': datetime.datetime(2023, 4, 4, 16, 35, 5, 300107)}
[2023-04-04 18:35:06 +0200] [29431] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:35:06 +0200] [29431] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:35:06 +0200] [29431] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:35:06 +0200] [29431] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:35:06 +0200] [29431] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 18:35:06 +0200] [29431] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data lesson_number=<LessonsEnum.ONE: '1'> start_time='10:15' end_time='11:00'
[2023-04-04 18:35:06 +0200] [29431] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 1
[2023-04-04 18:35:06 +0200] [29431] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 18:35:06 +0200] [29431] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-04 18:35:06 +0200] [29431] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:35:06 +0200] [29431] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 10:15:00 - 11:00:00
[2023-04-04 18:35:06 +0200] [29431] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-04 18:35:06 +0200] [29431] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 10:15:00 - 11:00:00
[2023-04-04 18:35:06 +0200] [29431] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database []
[2023-04-04 18:35:06 +0200] [29431] [INFO] [db.dao.base_dao] LessonModel DAO: Create db entry
[2023-04-04 18:35:06 +0200] [29431] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed for creation: lesson_number=<LessonsEnum.ONE: '1'> start_time=datetime.time(10, 15) end_time=datetime.time(11, 0)
[2023-04-04 18:35:06 +0200] [29431] [DEBUG] [db.dao.base_dao] LessonModel DAO: Created entry in database: {'id': UUID('de0f1301-6180-45f7-a199-be30fd6df413'), 'lesson_number': <LessonsEnum.ONE: '1'>, 'start_time': datetime.time(10, 15), 'end_time': datetime.time(11, 0)}
[2023-04-04 18:35:08 +0200] [29431] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:35:08 +0200] [29431] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:35:08 +0200] [29431] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:35:08 +0200] [29431] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:35:08 +0200] [29431] [INFO] [services.lesson_service] LessonService: Get all lessons
[2023-04-04 18:35:08 +0200] [29431] [INFO] [db.dao.base_dao] LessonModel DAO: Get all db entries by parameters
[2023-04-04 18:35:08 +0200] [29431] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: skip: 0, limit: None, params: {}
[2023-04-04 18:35:08 +0200] [29431] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:35:21 +0200] [29431] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:35:21 +0200] [29431] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:35:21 +0200] [29431] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:35:21 +0200] [29431] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:35:21 +0200] [29431] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 18:35:21 +0200] [29431] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data lesson_number=<LessonsEnum.TWO: '2'> start_time='12:15' end_time='13:00'
[2023-04-04 18:35:21 +0200] [29431] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 2
[2023-04-04 18:35:21 +0200] [29431] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 18:35:21 +0200] [29431] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.TWO: '2'>}
[2023-04-04 18:35:21 +0200] [29431] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:35:21 +0200] [29431] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 12:15:00 - 13:00:00
[2023-04-04 18:35:21 +0200] [29431] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-04 18:35:21 +0200] [29431] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 12:15:00 - 13:00:00
[2023-04-04 18:35:21 +0200] [29431] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database []
[2023-04-04 18:35:21 +0200] [29431] [INFO] [db.dao.base_dao] LessonModel DAO: Create db entry
[2023-04-04 18:35:21 +0200] [29431] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed for creation: lesson_number=<LessonsEnum.TWO: '2'> start_time=datetime.time(12, 15) end_time=datetime.time(13, 0)
[2023-04-04 18:35:21 +0200] [29431] [DEBUG] [db.dao.base_dao] LessonModel DAO: Created entry in database: {'id': UUID('c3f697d4-e566-458b-bba2-fcaa3110ba29'), 'lesson_number': <LessonsEnum.TWO: '2'>, 'start_time': datetime.time(12, 15), 'end_time': datetime.time(13, 0)}
[2023-04-04 18:35:25 +0200] [29431] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:35:25 +0200] [29431] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:35:25 +0200] [29431] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:35:25 +0200] [29431] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:35:25 +0200] [29431] [INFO] [services.lesson_service] LessonService: Get all lessons
[2023-04-04 18:35:25 +0200] [29431] [INFO] [db.dao.base_dao] LessonModel DAO: Get all db entries by parameters
[2023-04-04 18:35:25 +0200] [29431] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: skip: 0, limit: None, params: {}
[2023-04-04 18:35:25 +0200] [29431] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:41:11 +0200] [29819] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 18:41:11 +0200] [29819] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$xXT.3W6GUvh3bJZt0rkjSuNv8FKIYfAwuaAA9QtBt/DAUl54MWKai' email='userrrr@user' id=None
[2023-04-04 18:41:11 +0200] [29819] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('08cf42ed-3987-4eb6-836d-b39c3849bd21'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$xXT.3W6GUvh3bJZt0rkjSuNv8FKIYfAwuaAA9QtBt/DAUl54MWKai', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 16, 41, 11, 295236), 'updated_at': datetime.datetime(2023, 4, 4, 16, 41, 11, 295241)}
[2023-04-04 18:41:12 +0200] [29819] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 18:41:12 +0200] [29819] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 18:41:12 +0200] [29819] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:41:12 +0200] [29819] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:41:13 +0200] [29819] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:41:13 +0200] [29819] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 18:41:13 +0200] [29819] [TRACE] [services.auth_service] AuthService: Create session with user: 08cf42ed-3987-4eb6-836d-b39c3849bd21
[2023-04-04 18:41:13 +0200] [29819] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 18:41:13 +0200] [29819] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('08cf42ed-3987-4eb6-836d-b39c3849bd21') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 16, 46, 13, 248810) refresh_expire_time=datetime.datetime(2023, 4, 6, 16, 41, 13, 248967) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjY3NzMsInN1YiI6ImFkbWluIn0.j6LdtDULNa2dt76SHJ3AJQoccFPdhR7TZIhKXJMWg1A' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTkyNzMsInN1YiI6ImFkbWluIn0.d-5_ctrpOQ91qfUgQSepkmqWdKBcGuyB44VMJFMr2x8' blocked=False is_active=True
[2023-04-04 18:41:13 +0200] [29819] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('6f4f7db8-686b-42d1-8b34-a374b539fda5'), 'user_id': UUID('08cf42ed-3987-4eb6-836d-b39c3849bd21'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjY3NzMsInN1YiI6ImFkbWluIn0.j6LdtDULNa2dt76SHJ3AJQoccFPdhR7TZIhKXJMWg1A', 'access_expire_time': datetime.datetime(2023, 4, 4, 16, 46, 13, 248810), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTkyNzMsInN1YiI6ImFkbWluIn0.d-5_ctrpOQ91qfUgQSepkmqWdKBcGuyB44VMJFMr2x8', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 16, 41, 13, 248967), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 16, 41, 13, 251631), 'updated_at': datetime.datetime(2023, 4, 4, 16, 41, 13, 251635)}
[2023-04-04 18:41:16 +0200] [29819] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:41:16 +0200] [29819] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:41:16 +0200] [29819] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:41:16 +0200] [29819] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:41:16 +0200] [29819] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 18:41:16 +0200] [29819] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data lesson_number=<LessonsEnum.TWO: '2'> start_time='12:15' end_time='13:00'
[2023-04-04 18:41:16 +0200] [29819] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 2
[2023-04-04 18:41:16 +0200] [29819] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 18:41:16 +0200] [29819] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.TWO: '2'>}
[2023-04-04 18:41:16 +0200] [29819] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:41:16 +0200] [29819] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 12:15:00 - 13:00:00
[2023-04-04 18:41:16 +0200] [29819] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-04 18:41:16 +0200] [29819] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 12:15:00 - 13:00:00
[2023-04-04 18:41:16 +0200] [29819] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database []
[2023-04-04 18:41:16 +0200] [29819] [INFO] [db.dao.base_dao] LessonModel DAO: Create db entry
[2023-04-04 18:41:16 +0200] [29819] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed for creation: lesson_number=<LessonsEnum.TWO: '2'> start_time=datetime.time(12, 15) end_time=datetime.time(13, 0)
[2023-04-04 18:41:16 +0200] [29819] [DEBUG] [db.dao.base_dao] LessonModel DAO: Created entry in database: {'id': UUID('f9b8dfc1-c15b-459d-a928-eb060d60b7a0'), 'lesson_number': <LessonsEnum.TWO: '2'>, 'start_time': datetime.time(12, 15), 'end_time': datetime.time(13, 0)}
[2023-04-04 18:41:21 +0200] [29819] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:41:21 +0200] [29819] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:41:21 +0200] [29819] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:41:21 +0200] [29819] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:41:21 +0200] [29819] [INFO] [services.lesson_service] LessonService: Get lesson by number
[2023-04-04 18:41:21 +0200] [29819] [TRACE] [services.lesson_service] LessonService: Get lesson by number: 2
[2023-04-04 18:41:21 +0200] [29819] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 18:41:21 +0200] [29819] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.TWO: '2'>}
[2023-04-04 18:41:21 +0200] [29819] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:41:30 +0200] [29819] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:41:30 +0200] [29819] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:41:30 +0200] [29819] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:41:30 +0200] [29819] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:41:30 +0200] [29819] [INFO] [services.lesson_service] LessonService: Get lesson by number
[2023-04-04 18:41:30 +0200] [29819] [TRACE] [services.lesson_service] LessonService: Get lesson by number: 1
[2023-04-04 18:41:30 +0200] [29819] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 18:41:30 +0200] [29819] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.ONE: '1'>}
[2023-04-04 18:41:30 +0200] [29819] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:47:42 +0200] [30194] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 18:47:42 +0200] [30194] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$pNOafKATGlbdPHordRx8seucBuzE8mAEBJBd73r7XhpTy1/xhGkWK' email='userrrr@user' id=None
[2023-04-04 18:47:42 +0200] [30194] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('1aed74f4-6b59-4ed2-853c-e991f17731eb'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$pNOafKATGlbdPHordRx8seucBuzE8mAEBJBd73r7XhpTy1/xhGkWK', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 16, 47, 42, 307230), 'updated_at': datetime.datetime(2023, 4, 4, 16, 47, 42, 307235)}
[2023-04-04 18:47:44 +0200] [30194] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 18:47:44 +0200] [30194] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 18:47:44 +0200] [30194] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:47:44 +0200] [30194] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:47:44 +0200] [30194] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:47:44 +0200] [30194] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 18:47:44 +0200] [30194] [TRACE] [services.auth_service] AuthService: Create session with user: 1aed74f4-6b59-4ed2-853c-e991f17731eb
[2023-04-04 18:47:44 +0200] [30194] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 18:47:44 +0200] [30194] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('1aed74f4-6b59-4ed2-853c-e991f17731eb') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 16, 52, 44, 274284) refresh_expire_time=datetime.datetime(2023, 4, 6, 16, 47, 44, 274446) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjcxNjQsInN1YiI6ImFkbWluIn0.vTdmH8Eh6DN6Xz5AwfQjR8A8h6T1rrkCp2wkzrshMig' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTk2NjQsInN1YiI6ImFkbWluIn0.j0E-zqshQjHqwwg8GZVG44nRuZMixZOREkKDbbZnA1U' blocked=False is_active=True
[2023-04-04 18:47:44 +0200] [30194] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('65de072f-ee8d-4f61-81ee-b9935fcd99b2'), 'user_id': UUID('1aed74f4-6b59-4ed2-853c-e991f17731eb'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MjcxNjQsInN1YiI6ImFkbWluIn0.vTdmH8Eh6DN6Xz5AwfQjR8A8h6T1rrkCp2wkzrshMig', 'access_expire_time': datetime.datetime(2023, 4, 4, 16, 52, 44, 274284), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3OTk2NjQsInN1YiI6ImFkbWluIn0.j0E-zqshQjHqwwg8GZVG44nRuZMixZOREkKDbbZnA1U', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 16, 47, 44, 274446), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 16, 47, 44, 276817), 'updated_at': datetime.datetime(2023, 4, 4, 16, 47, 44, 276821)}
[2023-04-04 18:47:46 +0200] [30194] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:47:46 +0200] [30194] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:47:46 +0200] [30194] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:47:46 +0200] [30194] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:47:46 +0200] [30194] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 18:47:46 +0200] [30194] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data lesson_number=<LessonsEnum.TWO: '2'> start_time='12:15' end_time='13:00'
[2023-04-04 18:47:46 +0200] [30194] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 2
[2023-04-04 18:47:46 +0200] [30194] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 18:47:46 +0200] [30194] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.TWO: '2'>}
[2023-04-04 18:47:46 +0200] [30194] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:47:46 +0200] [30194] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 12:15:00 - 13:00:00
[2023-04-04 18:47:46 +0200] [30194] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-04 18:47:46 +0200] [30194] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 12:15:00 - 13:00:00
[2023-04-04 18:47:46 +0200] [30194] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database []
[2023-04-04 18:47:46 +0200] [30194] [INFO] [db.dao.base_dao] LessonModel DAO: Create db entry
[2023-04-04 18:47:46 +0200] [30194] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed for creation: lesson_number=<LessonsEnum.TWO: '2'> start_time=datetime.time(12, 15) end_time=datetime.time(13, 0)
[2023-04-04 18:47:46 +0200] [30194] [DEBUG] [db.dao.base_dao] LessonModel DAO: Created entry in database: {'id': UUID('e17123f5-49f4-4d89-acb6-e3b3599df909'), 'lesson_number': <LessonsEnum.TWO: '2'>, 'start_time': datetime.time(12, 15), 'end_time': datetime.time(13, 0)}
[2023-04-04 18:47:51 +0200] [30194] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:47:51 +0200] [30194] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:47:51 +0200] [30194] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:47:51 +0200] [30194] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:47:51 +0200] [30194] [INFO] [services.lesson_service] LessonService: Get lesson by number
[2023-04-04 18:47:51 +0200] [30194] [TRACE] [services.lesson_service] LessonService: Get lesson by number: 2
[2023-04-04 18:47:51 +0200] [30194] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 18:47:51 +0200] [30194] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.TWO: '2'>}
[2023-04-04 18:47:51 +0200] [30194] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:57:03 +0200] [30733] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 18:57:03 +0200] [30733] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$TsAIOSA2mGVadAz0IW1/q.R3ExYv/CXVY4qk4jkaabEnmo2Ub1vZO' email='userrrr@user' id=None
[2023-04-04 18:57:03 +0200] [30733] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('f7ec9b84-e680-47ad-9cbf-4bc834b86f66'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$TsAIOSA2mGVadAz0IW1/q.R3ExYv/CXVY4qk4jkaabEnmo2Ub1vZO', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 16, 57, 3, 138099), 'updated_at': datetime.datetime(2023, 4, 4, 16, 57, 3, 138104)}
[2023-04-04 18:57:05 +0200] [30733] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 18:57:05 +0200] [30733] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 18:57:05 +0200] [30733] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:57:05 +0200] [30733] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:57:05 +0200] [30733] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:57:05 +0200] [30733] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 18:57:05 +0200] [30733] [TRACE] [services.auth_service] AuthService: Create session with user: f7ec9b84-e680-47ad-9cbf-4bc834b86f66
[2023-04-04 18:57:05 +0200] [30733] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 18:57:05 +0200] [30733] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('f7ec9b84-e680-47ad-9cbf-4bc834b86f66') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 17, 2, 5, 821556) refresh_expire_time=datetime.datetime(2023, 4, 6, 16, 57, 5, 821720) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2Mjc3MjUsInN1YiI6ImFkbWluIn0.AghWieopdzM_vDmVnhDnn1ZLaiqNySMYrnSuy1ZVh74' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MDAyMjUsInN1YiI6ImFkbWluIn0._W7EA9S8Y2j357rHUPoKOWla8O7bfpNCyeQtv683IuQ' blocked=False is_active=True
[2023-04-04 18:57:05 +0200] [30733] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('d9d2145f-1d52-4dda-85bc-b837c19f6693'), 'user_id': UUID('f7ec9b84-e680-47ad-9cbf-4bc834b86f66'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2Mjc3MjUsInN1YiI6ImFkbWluIn0.AghWieopdzM_vDmVnhDnn1ZLaiqNySMYrnSuy1ZVh74', 'access_expire_time': datetime.datetime(2023, 4, 4, 17, 2, 5, 821556), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MDAyMjUsInN1YiI6ImFkbWluIn0._W7EA9S8Y2j357rHUPoKOWla8O7bfpNCyeQtv683IuQ', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 16, 57, 5, 821720), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 16, 57, 5, 824051), 'updated_at': datetime.datetime(2023, 4, 4, 16, 57, 5, 824055)}
[2023-04-04 18:57:08 +0200] [30733] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:57:08 +0200] [30733] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:57:08 +0200] [30733] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:57:08 +0200] [30733] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:57:08 +0200] [30733] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 18:57:08 +0200] [30733] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data lesson_number=<LessonsEnum.TWO: '2'> start_time='12:15' end_time='13:00'
[2023-04-04 18:57:08 +0200] [30733] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 2
[2023-04-04 18:57:08 +0200] [30733] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 18:57:08 +0200] [30733] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.TWO: '2'>}
[2023-04-04 18:57:08 +0200] [30733] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:57:08 +0200] [30733] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 12:15:00 - 13:00:00
[2023-04-04 18:57:08 +0200] [30733] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-04 18:57:08 +0200] [30733] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 12:15:00 - 13:00:00
[2023-04-04 18:57:08 +0200] [30733] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database []
[2023-04-04 18:57:08 +0200] [30733] [INFO] [db.dao.base_dao] LessonModel DAO: Create db entry
[2023-04-04 18:57:08 +0200] [30733] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed for creation: lesson_number=<LessonsEnum.TWO: '2'> start_time=datetime.time(12, 15) end_time=datetime.time(13, 0)
[2023-04-04 18:57:08 +0200] [30733] [DEBUG] [db.dao.base_dao] LessonModel DAO: Created entry in database: {'id': UUID('b90efde4-7fc1-441b-9afb-274a79ff5788'), 'lesson_number': <LessonsEnum.TWO: '2'>, 'start_time': datetime.time(12, 15), 'end_time': datetime.time(13, 0)}
[2023-04-04 18:57:10 +0200] [30733] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:57:10 +0200] [30733] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:57:10 +0200] [30733] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:57:10 +0200] [30733] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:57:10 +0200] [30733] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 18:57:10 +0200] [30733] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data lesson_number=<LessonsEnum.TWO: '2'> start_time='12:15' end_time='13:00'
[2023-04-04 18:57:10 +0200] [30733] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 2
[2023-04-04 18:57:10 +0200] [30733] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 18:57:10 +0200] [30733] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.TWO: '2'>}
[2023-04-04 18:57:10 +0200] [30733] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:57:10 +0200] [30733] [INFO] [services.lesson_service] LessonService: Got existing lesson from db: <db.models.LessonModel.LessonModel object at 0x7f64d4792160>
[2023-04-04 18:57:15 +0200] [30733] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:57:15 +0200] [30733] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:57:15 +0200] [30733] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:57:15 +0200] [30733] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:57:15 +0200] [30733] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 18:57:15 +0200] [30733] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data lesson_number=<LessonsEnum.THREE: '3'> start_time='12:15' end_time='13:00'
[2023-04-04 18:57:15 +0200] [30733] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 3
[2023-04-04 18:57:15 +0200] [30733] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 18:57:15 +0200] [30733] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.THREE: '3'>}
[2023-04-04 18:57:15 +0200] [30733] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:57:15 +0200] [30733] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 12:15:00 - 13:00:00
[2023-04-04 18:57:15 +0200] [30733] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-04 18:57:15 +0200] [30733] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 12:15:00 - 13:00:00
[2023-04-04 18:57:15 +0200] [30733] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database [<db.models.LessonModel.LessonModel object at 0x7f64d4792df0>]
[2023-04-04 18:57:15 +0200] [30733] [INFO] [services.lesson_service] LessonService: Got existing lesson from db: <generator object LessonService.__check_lesson_time.<locals>.<genexpr> at 0x7f64d4889c80>
[2023-04-04 18:57:18 +0200] [30733] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:57:18 +0200] [30733] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:57:18 +0200] [30733] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:57:18 +0200] [30733] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:57:18 +0200] [30733] [INFO] [services.lesson_service] LessonService: Get all lessons
[2023-04-04 18:57:18 +0200] [30733] [INFO] [db.dao.base_dao] LessonModel DAO: Get all db entries by parameters
[2023-04-04 18:57:18 +0200] [30733] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: skip: 0, limit: None, params: {}
[2023-04-04 18:57:18 +0200] [30733] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:57:22 +0200] [30733] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:57:22 +0200] [30733] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:57:22 +0200] [30733] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:57:22 +0200] [30733] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:57:22 +0200] [30733] [INFO] [services.lesson_service] LessonService: Get lesson by number
[2023-04-04 18:57:22 +0200] [30733] [TRACE] [services.lesson_service] LessonService: Get lesson by number: 2
[2023-04-04 18:57:22 +0200] [30733] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 18:57:22 +0200] [30733] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.TWO: '2'>}
[2023-04-04 18:57:22 +0200] [30733] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:57:42 +0200] [30733] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:57:42 +0200] [30733] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:57:42 +0200] [30733] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:57:42 +0200] [30733] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:59:31 +0200] [30889] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 18:59:31 +0200] [30889] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$iRf.SFgSUAnZBu2MV9fXLeEPeHvZ0cQYLG9kTSgs/3NN7DcoIoPC.' email='userrrr@user' id=None
[2023-04-04 18:59:31 +0200] [30889] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('835510bf-16d7-4873-9cd0-bac8045acc1b'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$iRf.SFgSUAnZBu2MV9fXLeEPeHvZ0cQYLG9kTSgs/3NN7DcoIoPC.', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 16, 59, 31, 712821), 'updated_at': datetime.datetime(2023, 4, 4, 16, 59, 31, 712826)}
[2023-04-04 18:59:33 +0200] [30889] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 18:59:33 +0200] [30889] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 18:59:33 +0200] [30889] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:59:33 +0200] [30889] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:59:33 +0200] [30889] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:59:33 +0200] [30889] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 18:59:33 +0200] [30889] [TRACE] [services.auth_service] AuthService: Create session with user: 835510bf-16d7-4873-9cd0-bac8045acc1b
[2023-04-04 18:59:33 +0200] [30889] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 18:59:33 +0200] [30889] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('835510bf-16d7-4873-9cd0-bac8045acc1b') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 17, 4, 33, 873105) refresh_expire_time=datetime.datetime(2023, 4, 6, 16, 59, 33, 873265) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2Mjc4NzMsInN1YiI6ImFkbWluIn0.YLzwldx5eGXC9-zJo-AfHX1bhxkHsziqYImcGesY65Y' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MDAzNzMsInN1YiI6ImFkbWluIn0.u6O2feGPK32uLQ30PNacugMXKeOVo0PUCg03w46kekA' blocked=False is_active=True
[2023-04-04 18:59:33 +0200] [30889] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('3733b087-82cf-4d28-9f39-7d9937c06ccb'), 'user_id': UUID('835510bf-16d7-4873-9cd0-bac8045acc1b'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2Mjc4NzMsInN1YiI6ImFkbWluIn0.YLzwldx5eGXC9-zJo-AfHX1bhxkHsziqYImcGesY65Y', 'access_expire_time': datetime.datetime(2023, 4, 4, 17, 4, 33, 873105), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MDAzNzMsInN1YiI6ImFkbWluIn0.u6O2feGPK32uLQ30PNacugMXKeOVo0PUCg03w46kekA', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 16, 59, 33, 873265), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 16, 59, 33, 875696), 'updated_at': datetime.datetime(2023, 4, 4, 16, 59, 33, 875703)}
[2023-04-04 18:59:35 +0200] [30889] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:59:35 +0200] [30889] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:59:35 +0200] [30889] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:59:35 +0200] [30889] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:59:35 +0200] [30889] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 18:59:35 +0200] [30889] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data start_time='12:15' end_time='13:00' lesson_number=<LessonsEnum.THREE: '3'>
[2023-04-04 18:59:35 +0200] [30889] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 3
[2023-04-04 18:59:35 +0200] [30889] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 18:59:35 +0200] [30889] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.THREE: '3'>}
[2023-04-04 18:59:35 +0200] [30889] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:59:35 +0200] [30889] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 12:15:00 - 13:00:00
[2023-04-04 18:59:35 +0200] [30889] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-04 18:59:35 +0200] [30889] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 12:15:00 - 13:00:00
[2023-04-04 18:59:35 +0200] [30889] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database []
[2023-04-04 18:59:35 +0200] [30889] [INFO] [db.dao.base_dao] LessonModel DAO: Create db entry
[2023-04-04 18:59:35 +0200] [30889] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed for creation: start_time=datetime.time(12, 15) end_time=datetime.time(13, 0) lesson_number=<LessonsEnum.THREE: '3'>
[2023-04-04 18:59:35 +0200] [30889] [DEBUG] [db.dao.base_dao] LessonModel DAO: Created entry in database: {'id': UUID('52bea161-086b-43b5-9e13-8ba5e83c4f62'), 'lesson_number': <LessonsEnum.THREE: '3'>, 'start_time': datetime.time(12, 15), 'end_time': datetime.time(13, 0)}
[2023-04-04 18:59:38 +0200] [30889] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:59:38 +0200] [30889] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:59:38 +0200] [30889] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:59:38 +0200] [30889] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:59:38 +0200] [30889] [INFO] [services.lesson_service] LessonService: Get all lessons
[2023-04-04 18:59:38 +0200] [30889] [INFO] [db.dao.base_dao] LessonModel DAO: Get all db entries by parameters
[2023-04-04 18:59:38 +0200] [30889] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: skip: 0, limit: None, params: {}
[2023-04-04 18:59:38 +0200] [30889] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 18:59:48 +0200] [30889] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 18:59:48 +0200] [30889] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 18:59:48 +0200] [30889] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 18:59:48 +0200] [30889] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 18:59:48 +0200] [30889] [INFO] [services.lesson_service] LessonService: Get lesson by number
[2023-04-04 18:59:48 +0200] [30889] [TRACE] [services.lesson_service] LessonService: Get lesson by number: 3
[2023-04-04 18:59:48 +0200] [30889] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 18:59:48 +0200] [30889] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.THREE: '3'>}
[2023-04-04 18:59:48 +0200] [30889] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 19:00:04 +0200] [30889] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 19:00:04 +0200] [30889] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 19:00:04 +0200] [30889] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 19:00:04 +0200] [30889] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 19:00:04 +0200] [30889] [INFO] [services.lesson_service] LessonService: Patch lesson
[2023-04-04 19:00:04 +0200] [30889] [TRACE] [services.lesson_service] LessonService: Patch lesson number: 3 with following data: start_time='12:00' end_time='12:30'
[2023-04-04 19:00:04 +0200] [30889] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 12:00:00 - 12:30:00
[2023-04-04 19:00:04 +0200] [30889] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-04 19:00:04 +0200] [30889] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 12:00:00 - 12:30:00
[2023-04-04 19:00:04 +0200] [30889] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database [<db.models.LessonModel.LessonModel object at 0x7f4c3e3556a0>]
[2023-04-04 19:00:04 +0200] [30889] [INFO] [services.lesson_service] LessonService: Got existing lesson from db: <generator object LessonService.__check_lesson_time.<locals>.<genexpr> at 0x7f4c3e431cf0>
[2023-04-04 19:00:13 +0200] [30889] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 19:00:13 +0200] [30889] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 19:00:13 +0200] [30889] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 19:00:13 +0200] [30889] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 19:00:13 +0200] [30889] [INFO] [services.lesson_service] LessonService: Patch lesson
[2023-04-04 19:00:13 +0200] [30889] [TRACE] [services.lesson_service] LessonService: Patch lesson number: 3 with following data: start_time='10:00' end_time='11:30'
[2023-04-04 19:00:13 +0200] [30889] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 10:00:00 - 11:30:00
[2023-04-04 19:00:13 +0200] [30889] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-04 19:00:13 +0200] [30889] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 10:00:00 - 11:30:00
[2023-04-04 19:00:13 +0200] [30889] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database []
[2023-04-04 19:00:13 +0200] [30889] [INFO] [services.lesson_service] LessonService: Get lesson by number
[2023-04-04 19:00:13 +0200] [30889] [TRACE] [services.lesson_service] LessonService: Get lesson by number: 3
[2023-04-04 19:00:13 +0200] [30889] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 19:00:13 +0200] [30889] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.THREE: '3'>}
[2023-04-04 19:00:13 +0200] [30889] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 19:00:13 +0200] [30889] [INFO] [db.dao.base_dao] LessonModel DAO: Update db entry
[2023-04-04 19:00:13 +0200] [30889] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed for update: item_id: 52bea161-086b-43b5-9e13-8ba5e83c4f62, patch_data: start_time=datetime.time(10, 0) end_time=datetime.time(11, 30)
[2023-04-04 19:00:13 +0200] [30889] [DEBUG] [db.dao.base_dao] LessonModel DAO: Received updated entry from the database
[2023-04-04 19:00:16 +0200] [30889] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 19:00:16 +0200] [30889] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 19:00:16 +0200] [30889] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 19:00:16 +0200] [30889] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 19:00:16 +0200] [30889] [INFO] [services.lesson_service] LessonService: Get all lessons
[2023-04-04 19:00:16 +0200] [30889] [INFO] [db.dao.base_dao] LessonModel DAO: Get all db entries by parameters
[2023-04-04 19:00:16 +0200] [30889] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: skip: 0, limit: None, params: {}
[2023-04-04 19:00:16 +0200] [30889] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 19:09:21 +0200] [31402] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 19:09:21 +0200] [31402] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$yun8aGn7dBMX0ErpSJzb8eapGPQCrkXUKssNAK652jOn.b.ua4IyO' email='userrrr@user' id=None
[2023-04-04 19:09:21 +0200] [31402] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('96159351-c3b6-401e-81fb-3602de464f57'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$yun8aGn7dBMX0ErpSJzb8eapGPQCrkXUKssNAK652jOn.b.ua4IyO', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 17, 9, 21, 898971), 'updated_at': datetime.datetime(2023, 4, 4, 17, 9, 21, 898975)}
[2023-04-04 19:09:24 +0200] [31402] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 19:09:24 +0200] [31402] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 19:09:24 +0200] [31402] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 19:09:24 +0200] [31402] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 19:09:24 +0200] [31402] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 19:09:24 +0200] [31402] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 19:09:24 +0200] [31402] [TRACE] [services.auth_service] AuthService: Create session with user: 96159351-c3b6-401e-81fb-3602de464f57
[2023-04-04 19:09:24 +0200] [31402] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 19:09:24 +0200] [31402] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('96159351-c3b6-401e-81fb-3602de464f57') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 17, 14, 24, 748220) refresh_expire_time=datetime.datetime(2023, 4, 6, 17, 9, 24, 748368) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2Mjg0NjQsInN1YiI6ImFkbWluIn0.hnPsdWrtUsP1hFa5CuYiMG86iiS3Mlf42h7aKSZnyrQ' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MDA5NjQsInN1YiI6ImFkbWluIn0.In3SPptn0dZiSDghtSHfKxpZmmDGjRFypnsDvf3St4I' blocked=False is_active=True
[2023-04-04 19:09:24 +0200] [31402] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('9ae2214a-354a-4275-baec-ef353037ef31'), 'user_id': UUID('96159351-c3b6-401e-81fb-3602de464f57'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2Mjg0NjQsInN1YiI6ImFkbWluIn0.hnPsdWrtUsP1hFa5CuYiMG86iiS3Mlf42h7aKSZnyrQ', 'access_expire_time': datetime.datetime(2023, 4, 4, 17, 14, 24, 748220), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MDA5NjQsInN1YiI6ImFkbWluIn0.In3SPptn0dZiSDghtSHfKxpZmmDGjRFypnsDvf3St4I', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 17, 9, 24, 748368), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 17, 9, 24, 750824), 'updated_at': datetime.datetime(2023, 4, 4, 17, 9, 24, 750829)}
[2023-04-04 19:09:29 +0200] [31402] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 19:09:29 +0200] [31402] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 19:09:29 +0200] [31402] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 19:09:29 +0200] [31402] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 19:09:29 +0200] [31402] [INFO] [services.lesson_service] LessonService: Get all lessons
[2023-04-04 19:09:29 +0200] [31402] [INFO] [db.dao.base_dao] LessonModel DAO: Get all db entries by parameters
[2023-04-04 19:09:29 +0200] [31402] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: skip: 0, limit: None, params: {}
[2023-04-04 19:09:30 +0200] [31402] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 19:09:33 +0200] [31402] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 19:09:33 +0200] [31402] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 19:09:33 +0200] [31402] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 19:09:33 +0200] [31402] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 19:09:33 +0200] [31402] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 19:09:33 +0200] [31402] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data start_time='12:15' end_time='13:00' lesson_number=<LessonsEnum.THREE: '3'>
[2023-04-04 19:09:33 +0200] [31402] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 3
[2023-04-04 19:09:33 +0200] [31402] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 19:09:33 +0200] [31402] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.THREE: '3'>}
[2023-04-04 19:09:33 +0200] [31402] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 19:09:33 +0200] [31402] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 12:15:00 - 13:00:00
[2023-04-04 19:09:33 +0200] [31402] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-04 19:09:33 +0200] [31402] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 12:15:00 - 13:00:00
[2023-04-04 19:09:33 +0200] [31402] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database []
[2023-04-04 19:09:33 +0200] [31402] [INFO] [db.dao.base_dao] LessonModel DAO: Create db entry
[2023-04-04 19:09:33 +0200] [31402] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed for creation: start_time=datetime.time(12, 15) end_time=datetime.time(13, 0) lesson_number=<LessonsEnum.THREE: '3'>
[2023-04-04 19:09:33 +0200] [31402] [DEBUG] [db.dao.base_dao] LessonModel DAO: Created entry in database: {'id': UUID('57cba08c-9047-4d83-9221-48ba50a91b56'), 'lesson_number': <LessonsEnum.THREE: '3'>, 'start_time': datetime.time(12, 15), 'end_time': datetime.time(13, 0)}
[2023-04-04 19:09:38 +0200] [31402] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 19:09:38 +0200] [31402] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 19:09:38 +0200] [31402] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 19:09:38 +0200] [31402] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 19:09:38 +0200] [31402] [INFO] [services.lesson_service] LessonService: Get lesson by number
[2023-04-04 19:09:38 +0200] [31402] [TRACE] [services.lesson_service] LessonService: Get lesson by number: 3
[2023-04-04 19:09:38 +0200] [31402] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 19:09:38 +0200] [31402] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.THREE: '3'>}
[2023-04-04 19:09:38 +0200] [31402] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 19:09:48 +0200] [31402] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 19:09:48 +0200] [31402] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 19:09:48 +0200] [31402] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 19:09:48 +0200] [31402] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 19:09:48 +0200] [31402] [INFO] [services.lesson_service] LessonService: Get lesson by number
[2023-04-04 19:09:48 +0200] [31402] [TRACE] [services.lesson_service] LessonService: Get lesson by number: 3
[2023-04-04 19:09:48 +0200] [31402] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 19:09:48 +0200] [31402] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.THREE: '3'>}
[2023-04-04 19:09:48 +0200] [31402] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 19:10:20 +0200] [31534] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 19:10:20 +0200] [31534] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$7a5nq22Wuk786L25xJa93uzhaDuOmZwOOID1yPisDuHfikGvQg2gC' email='userrrr@user' id=None
[2023-04-04 19:10:20 +0200] [31534] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('c04f5855-ae46-4943-9867-0f3d1b569b79'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$7a5nq22Wuk786L25xJa93uzhaDuOmZwOOID1yPisDuHfikGvQg2gC', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 17, 10, 20, 907414), 'updated_at': datetime.datetime(2023, 4, 4, 17, 10, 20, 907420)}
[2023-04-04 19:10:23 +0200] [31534] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 19:10:23 +0200] [31534] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 19:10:23 +0200] [31534] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 19:10:23 +0200] [31534] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 19:10:23 +0200] [31534] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 19:10:23 +0200] [31534] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 19:10:23 +0200] [31534] [TRACE] [services.auth_service] AuthService: Create session with user: c04f5855-ae46-4943-9867-0f3d1b569b79
[2023-04-04 19:10:23 +0200] [31534] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 19:10:23 +0200] [31534] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('c04f5855-ae46-4943-9867-0f3d1b569b79') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 17, 15, 23, 733970) refresh_expire_time=datetime.datetime(2023, 4, 6, 17, 10, 23, 734126) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2Mjg1MjMsInN1YiI6ImFkbWluIn0.WcXXxVbZXGqgdwKHmkj4AgdKpreRw0m7PZRNhaNOySQ' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MDEwMjMsInN1YiI6ImFkbWluIn0.lHnAHZ9L5CI7qr-mN-YPh7ziRuYKsqzfbJsRzapiRIk' blocked=False is_active=True
[2023-04-04 19:10:23 +0200] [31534] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('4738bba4-4936-4a76-a771-189031c1175c'), 'user_id': UUID('c04f5855-ae46-4943-9867-0f3d1b569b79'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2Mjg1MjMsInN1YiI6ImFkbWluIn0.WcXXxVbZXGqgdwKHmkj4AgdKpreRw0m7PZRNhaNOySQ', 'access_expire_time': datetime.datetime(2023, 4, 4, 17, 15, 23, 733970), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MDEwMjMsInN1YiI6ImFkbWluIn0.lHnAHZ9L5CI7qr-mN-YPh7ziRuYKsqzfbJsRzapiRIk', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 17, 10, 23, 734126), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 17, 10, 23, 736769), 'updated_at': datetime.datetime(2023, 4, 4, 17, 10, 23, 736774)}
[2023-04-04 19:10:25 +0200] [31534] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 19:10:25 +0200] [31534] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 19:10:25 +0200] [31534] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 19:10:25 +0200] [31534] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 19:10:25 +0200] [31534] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 19:10:25 +0200] [31534] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data start_time='12:15' end_time='13:00' lesson_number=<LessonsEnum.THREE: '3'>
[2023-04-04 19:10:25 +0200] [31534] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 3
[2023-04-04 19:10:25 +0200] [31534] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 19:10:25 +0200] [31534] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.THREE: '3'>}
[2023-04-04 19:10:26 +0200] [31534] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 19:10:26 +0200] [31534] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 12:15:00 - 13:00:00
[2023-04-04 19:10:26 +0200] [31534] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-04 19:10:26 +0200] [31534] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 12:15:00 - 13:00:00
[2023-04-04 19:10:26 +0200] [31534] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database []
[2023-04-04 19:10:26 +0200] [31534] [INFO] [db.dao.base_dao] LessonModel DAO: Create db entry
[2023-04-04 19:10:26 +0200] [31534] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed for creation: start_time=datetime.time(12, 15) end_time=datetime.time(13, 0) lesson_number=<LessonsEnum.THREE: '3'>
[2023-04-04 19:10:26 +0200] [31534] [DEBUG] [db.dao.base_dao] LessonModel DAO: Created entry in database: {'id': UUID('0dbdec94-dfce-4676-a664-a2833336871f'), 'lesson_number': <LessonsEnum.THREE: '3'>, 'start_time': datetime.time(12, 15), 'end_time': datetime.time(13, 0)}
[2023-04-04 19:10:29 +0200] [31534] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 19:10:29 +0200] [31534] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 19:10:29 +0200] [31534] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 19:10:29 +0200] [31534] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 19:10:29 +0200] [31534] [INFO] [services.lesson_service] LessonService: Get all lessons
[2023-04-04 19:10:29 +0200] [31534] [INFO] [db.dao.base_dao] LessonModel DAO: Get all db entries by parameters
[2023-04-04 19:10:29 +0200] [31534] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: skip: 0, limit: None, params: {}
[2023-04-04 19:10:29 +0200] [31534] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 19:10:30 +0200] [31534] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 19:10:30 +0200] [31534] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 19:10:30 +0200] [31534] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 19:10:30 +0200] [31534] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 19:10:30 +0200] [31534] [INFO] [services.lesson_service] LessonService: Get lesson by number
[2023-04-04 19:10:30 +0200] [31534] [TRACE] [services.lesson_service] LessonService: Get lesson by number: 3
[2023-04-04 19:10:30 +0200] [31534] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 19:10:30 +0200] [31534] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.THREE: '3'>}
[2023-04-04 19:10:30 +0200] [31534] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 19:10:34 +0200] [31534] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 19:10:34 +0200] [31534] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 19:10:34 +0200] [31534] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 19:10:34 +0200] [31534] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 19:10:34 +0200] [31534] [INFO] [services.lesson_service] LessonService: Get lesson by number
[2023-04-04 19:10:34 +0200] [31534] [TRACE] [services.lesson_service] LessonService: Get lesson by number: 3
[2023-04-04 19:10:34 +0200] [31534] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 19:10:34 +0200] [31534] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.THREE: '3'>}
[2023-04-04 19:10:34 +0200] [31534] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 19:10:40 +0200] [31534] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 19:10:40 +0200] [31534] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 19:10:40 +0200] [31534] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 19:10:40 +0200] [31534] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 19:10:40 +0200] [31534] [INFO] [services.lesson_service] LessonService: Get lesson by number
[2023-04-04 19:10:40 +0200] [31534] [TRACE] [services.lesson_service] LessonService: Get lesson by number: 3
[2023-04-04 19:10:40 +0200] [31534] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 19:10:40 +0200] [31534] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.THREE: '3'>}
[2023-04-04 19:10:40 +0200] [31534] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 19:11:26 +0200] [31596] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 19:11:26 +0200] [31596] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$b2cPaK38m8cmbcLcz2BnXeAL1F4Jr02n4SW0ySEmWHLYN6EyJCcFO' email='userrrr@user' id=None
[2023-04-04 19:11:26 +0200] [31596] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('be53f512-1dfd-4f7d-ad37-854f3dc28d51'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$b2cPaK38m8cmbcLcz2BnXeAL1F4Jr02n4SW0ySEmWHLYN6EyJCcFO', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 17, 11, 26, 812803), 'updated_at': datetime.datetime(2023, 4, 4, 17, 11, 26, 812808)}
[2023-04-04 19:11:29 +0200] [31596] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 19:11:29 +0200] [31596] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 19:11:29 +0200] [31596] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 19:11:29 +0200] [31596] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 19:11:29 +0200] [31596] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 19:11:29 +0200] [31596] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 19:11:29 +0200] [31596] [TRACE] [services.auth_service] AuthService: Create session with user: be53f512-1dfd-4f7d-ad37-854f3dc28d51
[2023-04-04 19:11:29 +0200] [31596] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 19:11:29 +0200] [31596] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('be53f512-1dfd-4f7d-ad37-854f3dc28d51') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 17, 16, 29, 442979) refresh_expire_time=datetime.datetime(2023, 4, 6, 17, 11, 29, 443127) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2Mjg1ODksInN1YiI6ImFkbWluIn0.4RmjYbicE0POyExFC456PWvcmxAxPcOWNOBqWN4OsJs' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MDEwODksInN1YiI6ImFkbWluIn0.d7xU5qrfWXNCO4kN9XGtzt1Ceq6c6mdAO2qOROiwGCw' blocked=False is_active=True
[2023-04-04 19:11:29 +0200] [31596] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('dc782bd9-8b05-48d4-a9bb-3c44a6d29923'), 'user_id': UUID('be53f512-1dfd-4f7d-ad37-854f3dc28d51'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2Mjg1ODksInN1YiI6ImFkbWluIn0.4RmjYbicE0POyExFC456PWvcmxAxPcOWNOBqWN4OsJs', 'access_expire_time': datetime.datetime(2023, 4, 4, 17, 16, 29, 442979), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MDEwODksInN1YiI6ImFkbWluIn0.d7xU5qrfWXNCO4kN9XGtzt1Ceq6c6mdAO2qOROiwGCw', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 17, 11, 29, 443127), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 17, 11, 29, 445639), 'updated_at': datetime.datetime(2023, 4, 4, 17, 11, 29, 445644)}
[2023-04-04 19:11:31 +0200] [31596] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 19:11:31 +0200] [31596] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 19:11:31 +0200] [31596] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 19:11:31 +0200] [31596] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 19:11:31 +0200] [31596] [INFO] [services.lesson_service] LessonService: Create lesson
[2023-04-04 19:11:31 +0200] [31596] [TRACE] [services.lesson_service] LessonService: Create lesson with passed data start_time='12:15' end_time='13:00' lesson_number=<LessonsEnum.THREE: '3'>
[2023-04-04 19:11:31 +0200] [31596] [DEBUG] [services.lesson_service] LessonService: Check if lesson with same number exists: 3
[2023-04-04 19:11:31 +0200] [31596] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 19:11:31 +0200] [31596] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.THREE: '3'>}
[2023-04-04 19:11:32 +0200] [31596] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 19:11:32 +0200] [31596] [DEBUG] [services.lesson_service] LessonService: Check if lesson within provided time scopes exists: 12:15:00 - 13:00:00
[2023-04-04 19:11:32 +0200] [31596] [INFO] [db.dao.lesson_dao] LessonDAO: Get lessons within same time scopes
[2023-04-04 19:11:32 +0200] [31596] [TRACE] [db.dao.lesson_dao] LessonDAO: Get db entries within provided time scopes: 12:15:00 - 13:00:00
[2023-04-04 19:11:32 +0200] [31596] [DEBUG] [db.dao.lesson_dao] LessonDAO: received a response from the database []
[2023-04-04 19:11:32 +0200] [31596] [INFO] [db.dao.base_dao] LessonModel DAO: Create db entry
[2023-04-04 19:11:32 +0200] [31596] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed for creation: start_time=datetime.time(12, 15) end_time=datetime.time(13, 0) lesson_number=<LessonsEnum.THREE: '3'>
[2023-04-04 19:11:32 +0200] [31596] [DEBUG] [db.dao.base_dao] LessonModel DAO: Created entry in database: {'id': UUID('7eb66d38-bb91-4b82-936f-845ff9cb32a7'), 'lesson_number': <LessonsEnum.THREE: '3'>, 'start_time': datetime.time(12, 15), 'end_time': datetime.time(13, 0)}
[2023-04-04 19:11:33 +0200] [31596] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 19:11:33 +0200] [31596] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 19:11:33 +0200] [31596] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 19:11:33 +0200] [31596] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 19:11:33 +0200] [31596] [INFO] [services.lesson_service] LessonService: Get all lessons
[2023-04-04 19:11:33 +0200] [31596] [INFO] [db.dao.base_dao] LessonModel DAO: Get all db entries by parameters
[2023-04-04 19:11:33 +0200] [31596] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: skip: 0, limit: None, params: {}
[2023-04-04 19:11:33 +0200] [31596] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 19:11:35 +0200] [31596] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 19:11:35 +0200] [31596] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 19:11:35 +0200] [31596] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 19:11:35 +0200] [31596] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 19:11:35 +0200] [31596] [INFO] [services.lesson_service] LessonService: Get lesson by number
[2023-04-04 19:11:35 +0200] [31596] [TRACE] [services.lesson_service] LessonService: Get lesson by number: 3
[2023-04-04 19:11:35 +0200] [31596] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 19:11:35 +0200] [31596] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.THREE: '3'>}
[2023-04-04 19:11:35 +0200] [31596] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 19:11:38 +0200] [31596] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 19:11:38 +0200] [31596] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 19:11:38 +0200] [31596] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 19:11:38 +0200] [31596] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 19:11:38 +0200] [31596] [INFO] [services.lesson_service] LessonService: Get lesson by number
[2023-04-04 19:11:38 +0200] [31596] [TRACE] [services.lesson_service] LessonService: Get lesson by number: 3
[2023-04-04 19:11:38 +0200] [31596] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 19:11:38 +0200] [31596] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.THREE: '3'>}
[2023-04-04 19:11:38 +0200] [31596] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 19:11:42 +0200] [31596] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 19:11:42 +0200] [31596] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 19:11:42 +0200] [31596] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 19:11:42 +0200] [31596] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 19:11:42 +0200] [31596] [INFO] [services.lesson_service] LessonService: Get lesson by number
[2023-04-04 19:11:42 +0200] [31596] [TRACE] [services.lesson_service] LessonService: Get lesson by number: 3
[2023-04-04 19:11:42 +0200] [31596] [INFO] [db.dao.base_dao] LessonModel DAO: Get db entry by parameters
[2023-04-04 19:11:42 +0200] [31596] [TRACE] [db.dao.base_dao] LessonModel DAO: Data passed to filter: params: {'lesson_number': <LessonsEnum.THREE: '3'>}
[2023-04-04 19:11:42 +0200] [31596] [DEBUG] [db.dao.base_dao] LessonModel DAO: received a response from the database
[2023-04-04 19:13:31 +0200] [31745] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 19:13:31 +0200] [31745] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$BsWQK9XNLqyzo6hw1JWunOZMQhjnDtsP94HJoAOMxmBWhgZ6FaYxG' email='userrrr@user' id=None
[2023-04-04 19:13:31 +0200] [31745] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('f5d6c989-7afa-4851-a649-19a451092108'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$BsWQK9XNLqyzo6hw1JWunOZMQhjnDtsP94HJoAOMxmBWhgZ6FaYxG', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 17, 13, 31, 249104), 'updated_at': datetime.datetime(2023, 4, 4, 17, 13, 31, 249109)}
[2023-04-04 19:13:32 +0200] [31745] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 19:13:32 +0200] [31745] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 19:13:32 +0200] [31745] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 19:13:32 +0200] [31745] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 19:13:32 +0200] [31745] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 19:13:33 +0200] [31745] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 19:13:33 +0200] [31745] [TRACE] [services.auth_service] AuthService: Create session with user: f5d6c989-7afa-4851-a649-19a451092108
[2023-04-04 19:13:33 +0200] [31745] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 19:13:33 +0200] [31745] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('f5d6c989-7afa-4851-a649-19a451092108') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 17, 18, 33, 103841) refresh_expire_time=datetime.datetime(2023, 4, 6, 17, 13, 33, 104073) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2Mjg3MTMsInN1YiI6ImFkbWluIn0.M6mcckXfb6o8rp2MJcdNb8e8ep0swl6FRFhHSI0iF20' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MDEyMTMsInN1YiI6ImFkbWluIn0.YTcEIZUFR57nkKIKBE60doY62iODm4rasaduVi1ZY64' blocked=False is_active=True
[2023-04-04 19:13:33 +0200] [31745] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('9cd1fe61-c74a-4286-bdc1-5e371e0bb97d'), 'user_id': UUID('f5d6c989-7afa-4851-a649-19a451092108'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2Mjg3MTMsInN1YiI6ImFkbWluIn0.M6mcckXfb6o8rp2MJcdNb8e8ep0swl6FRFhHSI0iF20', 'access_expire_time': datetime.datetime(2023, 4, 4, 17, 18, 33, 103841), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MDEyMTMsInN1YiI6ImFkbWluIn0.YTcEIZUFR57nkKIKBE60doY62iODm4rasaduVi1ZY64', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 17, 13, 33, 104073), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 17, 13, 33, 106519), 'updated_at': datetime.datetime(2023, 4, 4, 17, 13, 33, 106523)}
[2023-04-04 19:13:34 +0200] [31745] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 19:13:34 +0200] [31745] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 19:13:34 +0200] [31745] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 19:13:34 +0200] [31745] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 19:13:34 +0200] [31745] [INFO] [services.student_service] StudentService: Create students
[2023-04-04 19:13:34 +0200] [31745] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-04 19:13:34 +0200] [31745] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_1' second_name=None last_name='student_1' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-04 19:13:34 +0200] [31745] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-04 19:13:34 +0200] [31745] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-04 19:13:35 +0200] [31745] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-04 19:13:35 +0200] [31745] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='5r15sTVus3sOVw')]
[2023-04-04 19:13:35 +0200] [31745] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-04 19:13:35 +0200] [31745] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='5r15sTVus3sOVw')]
[2023-04-04 19:13:36 +0200] [31745] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('64db78a8-3f32-43a7-8c46-7424f11c2edc'), 'registration_token': '5r15sTVus3sOVw', 'registered_user': False, 'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 4, 17, 13, 35, 989093), 'updated_at': datetime.datetime(2023, 4, 4, 17, 13, 35, 989101), 'deleted_at': None}]
[2023-04-04 19:13:36 +0200] [31745] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7f65aef64e80>]
[2023-04-04 19:13:38 +0200] [31745] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 19:13:38 +0200] [31745] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 19:13:38 +0200] [31745] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 19:13:38 +0200] [31745] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 19:13:38 +0200] [31745] [INFO] [services.student_service] StudentService: Get student by id: aff16aa8-6b6d-454a-af20-18def09c6593
[2023-04-04 19:13:38 +0200] [31745] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by id: aff16aa8-6b6d-454a-af20-18def09c6593
[2023-04-04 19:13:38 +0200] [31745] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-04 19:14:01 +0200] [31820] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 19:14:01 +0200] [31820] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$K6I0vIseHDO1NBLG9E.6HevAkzk3LGEF6DYJCGGkSpGw7nz7M2Vii' email='userrrr@user' id=None
[2023-04-04 19:14:01 +0200] [31820] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('561b369f-4b6a-41bb-9258-3201d65f514e'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$K6I0vIseHDO1NBLG9E.6HevAkzk3LGEF6DYJCGGkSpGw7nz7M2Vii', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 17, 14, 1, 637965), 'updated_at': datetime.datetime(2023, 4, 4, 17, 14, 1, 637970)}
[2023-04-04 19:14:05 +0200] [31820] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 19:14:05 +0200] [31820] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 19:14:05 +0200] [31820] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 19:14:05 +0200] [31820] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 19:14:05 +0200] [31820] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 19:14:06 +0200] [31820] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 19:14:06 +0200] [31820] [TRACE] [services.auth_service] AuthService: Create session with user: 561b369f-4b6a-41bb-9258-3201d65f514e
[2023-04-04 19:14:06 +0200] [31820] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 19:14:06 +0200] [31820] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('561b369f-4b6a-41bb-9258-3201d65f514e') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 17, 19, 6, 36090) refresh_expire_time=datetime.datetime(2023, 4, 6, 17, 14, 6, 36251) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2Mjg3NDYsInN1YiI6ImFkbWluIn0.WYtPbHUQFE-ROOZJgavtkaI5uEzWrqLBtKHAa-SNOdk' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MDEyNDYsInN1YiI6ImFkbWluIn0._lXxEU6tVXyDElbNNgJDZ-nVDC_7pe_n_L1WIpxgFDc' blocked=False is_active=True
[2023-04-04 19:14:06 +0200] [31820] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('96f2d2ae-34f6-459c-8772-74636d16bf73'), 'user_id': UUID('561b369f-4b6a-41bb-9258-3201d65f514e'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2Mjg3NDYsInN1YiI6ImFkbWluIn0.WYtPbHUQFE-ROOZJgavtkaI5uEzWrqLBtKHAa-SNOdk', 'access_expire_time': datetime.datetime(2023, 4, 4, 17, 19, 6, 36090), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MDEyNDYsInN1YiI6ImFkbWluIn0._lXxEU6tVXyDElbNNgJDZ-nVDC_7pe_n_L1WIpxgFDc', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 17, 14, 6, 36251), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 17, 14, 6, 38737), 'updated_at': datetime.datetime(2023, 4, 4, 17, 14, 6, 38741)}
[2023-04-04 19:14:07 +0200] [31820] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 19:14:07 +0200] [31820] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 19:14:07 +0200] [31820] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 19:14:07 +0200] [31820] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 19:14:07 +0200] [31820] [INFO] [services.student_service] StudentService: Create students
[2023-04-04 19:14:07 +0200] [31820] [TRACE] [services.student_service] StudentService: Register students with passed data [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date='28-02-2002', academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>)]
[2023-04-04 19:14:07 +0200] [31820] [DEBUG] [services.student_service] StudentService: Check if student already exists in db and is not deleted: first_name='student_1' second_name=None last_name='student_1' birth_date='28-02-2002' academic_year=<AcademicYearsEnum.SECOND: '2'> academic_group=<AcademicGroupsEnum.SECOND_2: '202'>
[2023-04-04 19:14:07 +0200] [31820] [INFO] [db.dao.base_dao] StudentModel DAO: Get all db entries by parameters
[2023-04-04 19:14:07 +0200] [31820] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>}
[2023-04-04 19:14:09 +0200] [31820] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-04 19:14:09 +0200] [31820] [DEBUG] [services.student_service] StudentService: Students to be registered after check: [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='J-DfFiRf_cm9Yw')]
[2023-04-04 19:14:09 +0200] [31820] [INFO] [db.dao.base_dao] StudentModel DAO: Create db entry
[2023-04-04 19:14:09 +0200] [31820] [TRACE] [db.dao.base_dao] StudentModel DAO: Data passed for creation: [StudentCreateDTO(first_name='student_1', second_name=None, last_name='student_1', birth_date=datetime.datetime(2002, 2, 28, 0, 0), academic_year=<AcademicYearsEnum.SECOND: '2'>, academic_group=<AcademicGroupsEnum.SECOND_2: '202'>, registration_token='J-DfFiRf_cm9Yw')]
[2023-04-04 19:14:09 +0200] [31820] [DEBUG] [db.dao.base_dao] StudentModel DAO: Created entries in database: [{'id': UUID('0f0bc822-0ba0-4233-83ae-1f44aa653591'), 'registration_token': 'J-DfFiRf_cm9Yw', 'registered_user': False, 'first_name': 'student_1', 'second_name': None, 'last_name': 'student_1', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'academic_year': <AcademicYearsEnum.SECOND: '2'>, 'academic_group': <AcademicGroupsEnum.SECOND_2: '202'>, 'created_at': datetime.datetime(2023, 4, 4, 17, 14, 9, 181142), 'updated_at': datetime.datetime(2023, 4, 4, 17, 14, 9, 181146), 'deleted_at': None}]
[2023-04-04 19:14:09 +0200] [31820] [DEBUG] [services.student_service] StudentService: Received the answer from database: [<db.models.StudentModel.StudentModel object at 0x7f0e284a9ca0>]
[2023-04-04 19:14:11 +0200] [31820] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 19:14:11 +0200] [31820] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 19:14:11 +0200] [31820] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 19:14:11 +0200] [31820] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 19:14:11 +0200] [31820] [INFO] [services.student_service] StudentService: Get student by id: aff16aa8-6b6d-454a-af20-18def09c6593
[2023-04-04 19:14:11 +0200] [31820] [INFO] [db.dao.base_dao] StudentModel DAO: Get db entry by id: aff16aa8-6b6d-454a-af20-18def09c6593
[2023-04-04 19:14:11 +0200] [31820] [DEBUG] [db.dao.base_dao] StudentModel DAO: received a response from the database
[2023-04-04 20:25:58 +0200] [36607] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 20:25:58 +0200] [36607] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$FNsz15x3TMxdf1/JI.wcHugGd6qRUjOy4GoAjI9M32tXn5Ezowi1.' email='userrrr@user' id=None
[2023-04-04 20:25:58 +0200] [36607] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('312513fb-66e0-4d8c-8b7d-ba05077d7a0f'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$FNsz15x3TMxdf1/JI.wcHugGd6qRUjOy4GoAjI9M32tXn5Ezowi1.', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 18, 25, 58, 87630), 'updated_at': datetime.datetime(2023, 4, 4, 18, 25, 58, 87635)}
[2023-04-04 20:26:02 +0200] [36607] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 20:26:02 +0200] [36607] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 20:26:02 +0200] [36607] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 20:26:02 +0200] [36607] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 20:26:02 +0200] [36607] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 20:26:02 +0200] [36607] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 20:26:02 +0200] [36607] [TRACE] [services.auth_service] AuthService: Create session with user: 312513fb-66e0-4d8c-8b7d-ba05077d7a0f
[2023-04-04 20:26:02 +0200] [36607] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 20:26:02 +0200] [36607] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('312513fb-66e0-4d8c-8b7d-ba05077d7a0f') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 18, 31, 2, 363111) refresh_expire_time=datetime.datetime(2023, 4, 6, 18, 26, 2, 363274) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MzMwNjIsInN1YiI6ImFkbWluIn0.VZbrU_gC7UzHru083MsHH3K2EF0OamlBp64gZ5kJ0dw' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MDU1NjIsInN1YiI6ImFkbWluIn0.vZqiXVHMbejyqpbQDP3dquvSJbZWagXWw96Ge1RqG-w' blocked=False is_active=True
[2023-04-04 20:26:02 +0200] [36607] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('591e9883-a5c0-4068-b649-e549de2a20e2'), 'user_id': UUID('312513fb-66e0-4d8c-8b7d-ba05077d7a0f'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MzMwNjIsInN1YiI6ImFkbWluIn0.VZbrU_gC7UzHru083MsHH3K2EF0OamlBp64gZ5kJ0dw', 'access_expire_time': datetime.datetime(2023, 4, 4, 18, 31, 2, 363111), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MDU1NjIsInN1YiI6ImFkbWluIn0.vZqiXVHMbejyqpbQDP3dquvSJbZWagXWw96Ge1RqG-w', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 18, 26, 2, 363274), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 18, 26, 2, 365470), 'updated_at': datetime.datetime(2023, 4, 4, 18, 26, 2, 365473)}
[2023-04-04 20:26:04 +0200] [36607] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 20:26:04 +0200] [36607] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 20:26:04 +0200] [36607] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 20:26:04 +0200] [36607] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 20:26:04 +0200] [36607] [INFO] [services.room_service] RoomService: Create room
[2023-04-04 20:26:04 +0200] [36607] [TRACE] [services.room_service] RoomService: Create room with passed data room_number=101 class_type=<ClassTypesEnum.LABORATORY: 'laboratory'>
[2023-04-04 20:26:04 +0200] [36607] [DEBUG] [services.room_service] RoomService: Check if room with same number exists: 101
[2023-04-04 20:26:04 +0200] [36607] [INFO] [db.dao.base_dao] RoomModel DAO: Get db entry by parameters
[2023-04-04 20:26:04 +0200] [36607] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: params: {'room_number': 101}
[2023-04-04 20:26:04 +0200] [36607] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-04 20:26:04 +0200] [36607] [INFO] [db.dao.base_dao] RoomModel DAO: Create db entry
[2023-04-04 20:26:04 +0200] [36607] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed for creation: room_number=101 class_type=<ClassTypesEnum.LABORATORY: 'laboratory'>
[2023-04-04 20:26:04 +0200] [36607] [DEBUG] [db.dao.base_dao] RoomModel DAO: Created entry in database: {'id': UUID('e32f2b28-40bb-483d-923c-6c325a200227'), 'room_number': 101, 'class_type': <ClassTypesEnum.LABORATORY: 'laboratory'>}
[2023-04-04 20:26:14 +0200] [36607] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 20:26:14 +0200] [36607] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 20:26:14 +0200] [36607] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 20:26:14 +0200] [36607] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 20:26:14 +0200] [36607] [INFO] [services.room_service] RoomService: Get all rooms
[2023-04-04 20:27:18 +0200] [36765] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 20:27:18 +0200] [36765] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$QDkWLcHEQMaWB9Ofe0puGu7Kvf/.LSvD8yZspQ5vTAF2aqSjLLSf.' email='userrrr@user' id=None
[2023-04-04 20:27:18 +0200] [36765] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('6d16f80f-dafa-4aa5-accb-017ca0a18614'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$QDkWLcHEQMaWB9Ofe0puGu7Kvf/.LSvD8yZspQ5vTAF2aqSjLLSf.', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 18, 27, 18, 239258), 'updated_at': datetime.datetime(2023, 4, 4, 18, 27, 18, 239263)}
[2023-04-04 20:27:20 +0200] [36765] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 20:27:20 +0200] [36765] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 20:27:20 +0200] [36765] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 20:27:20 +0200] [36765] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 20:27:20 +0200] [36765] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 20:27:20 +0200] [36765] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 20:27:20 +0200] [36765] [TRACE] [services.auth_service] AuthService: Create session with user: 6d16f80f-dafa-4aa5-accb-017ca0a18614
[2023-04-04 20:27:20 +0200] [36765] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 20:27:20 +0200] [36765] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('6d16f80f-dafa-4aa5-accb-017ca0a18614') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 18, 32, 20, 550241) refresh_expire_time=datetime.datetime(2023, 4, 6, 18, 27, 20, 550390) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MzMxNDAsInN1YiI6ImFkbWluIn0.pvMVyvppqgkCBu0lpHzgvpYKENSKM8_agoRlwSCViQY' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MDU2NDAsInN1YiI6ImFkbWluIn0.syoDoF_MyeTzU8lDZy5Nb7TMNduOt0bJeZ0r3YQlelg' blocked=False is_active=True
[2023-04-04 20:27:20 +0200] [36765] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('20faeb40-cea1-4b42-adfd-08293dab1d8a'), 'user_id': UUID('6d16f80f-dafa-4aa5-accb-017ca0a18614'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MzMxNDAsInN1YiI6ImFkbWluIn0.pvMVyvppqgkCBu0lpHzgvpYKENSKM8_agoRlwSCViQY', 'access_expire_time': datetime.datetime(2023, 4, 4, 18, 32, 20, 550241), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MDU2NDAsInN1YiI6ImFkbWluIn0.syoDoF_MyeTzU8lDZy5Nb7TMNduOt0bJeZ0r3YQlelg', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 18, 27, 20, 550390), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 18, 27, 20, 552991), 'updated_at': datetime.datetime(2023, 4, 4, 18, 27, 20, 552996)}
[2023-04-04 20:27:22 +0200] [36765] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 20:27:22 +0200] [36765] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 20:27:22 +0200] [36765] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 20:27:22 +0200] [36765] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 20:27:22 +0200] [36765] [INFO] [services.room_service] RoomService: Create room
[2023-04-04 20:27:22 +0200] [36765] [TRACE] [services.room_service] RoomService: Create room with passed data room_number=101 class_type=<ClassTypesEnum.LABORATORY: 'laboratory'>
[2023-04-04 20:27:22 +0200] [36765] [DEBUG] [services.room_service] RoomService: Check if room with same number exists: 101
[2023-04-04 20:27:22 +0200] [36765] [INFO] [db.dao.base_dao] RoomModel DAO: Get db entry by parameters
[2023-04-04 20:27:22 +0200] [36765] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: params: {'room_number': 101}
[2023-04-04 20:27:22 +0200] [36765] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-04 20:27:22 +0200] [36765] [INFO] [db.dao.base_dao] RoomModel DAO: Create db entry
[2023-04-04 20:27:22 +0200] [36765] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed for creation: room_number=101 class_type=<ClassTypesEnum.LABORATORY: 'laboratory'>
[2023-04-04 20:27:22 +0200] [36765] [DEBUG] [db.dao.base_dao] RoomModel DAO: Created entry in database: {'id': UUID('36e00674-2191-4cbd-b066-965f55e52aa2'), 'room_number': 101, 'class_type': <ClassTypesEnum.LABORATORY: 'laboratory'>}
[2023-04-04 20:27:25 +0200] [36765] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 20:27:25 +0200] [36765] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 20:27:25 +0200] [36765] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 20:27:25 +0200] [36765] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 20:27:25 +0200] [36765] [INFO] [services.room_service] RoomService: Get all rooms
[2023-04-04 20:27:25 +0200] [36765] [INFO] [db.dao.base_dao] RoomModel DAO: Get all db entries by parameters
[2023-04-04 20:27:25 +0200] [36765] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: skip: 0, limit: None, params: {}
[2023-04-04 20:27:25 +0200] [36765] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-04 20:27:34 +0200] [36765] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 20:27:34 +0200] [36765] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 20:27:34 +0200] [36765] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 20:27:34 +0200] [36765] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 20:27:34 +0200] [36765] [INFO] [services.room_service] RoomService: Create room
[2023-04-04 20:27:34 +0200] [36765] [TRACE] [services.room_service] RoomService: Create room with passed data room_number=101 class_type=<ClassTypesEnum.LABORATORY: 'laboratory'>
[2023-04-04 20:27:34 +0200] [36765] [DEBUG] [services.room_service] RoomService: Check if room with same number exists: 101
[2023-04-04 20:27:34 +0200] [36765] [INFO] [db.dao.base_dao] RoomModel DAO: Get db entry by parameters
[2023-04-04 20:27:34 +0200] [36765] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: params: {'room_number': 101}
[2023-04-04 20:27:34 +0200] [36765] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-04 20:27:34 +0200] [36765] [INFO] [services.room_service] RoomService: Got existing room from db: <db.models.RoomModel.RoomModel object at 0x7fe706f53850>
[2023-04-04 20:27:38 +0200] [36765] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 20:27:38 +0200] [36765] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 20:27:38 +0200] [36765] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 20:27:38 +0200] [36765] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 20:27:38 +0200] [36765] [INFO] [services.room_service] RoomService: Create room
[2023-04-04 20:27:38 +0200] [36765] [TRACE] [services.room_service] RoomService: Create room with passed data room_number=102 class_type=<ClassTypesEnum.LABORATORY: 'laboratory'>
[2023-04-04 20:27:38 +0200] [36765] [DEBUG] [services.room_service] RoomService: Check if room with same number exists: 102
[2023-04-04 20:27:38 +0200] [36765] [INFO] [db.dao.base_dao] RoomModel DAO: Get db entry by parameters
[2023-04-04 20:27:38 +0200] [36765] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: params: {'room_number': 102}
[2023-04-04 20:27:38 +0200] [36765] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-04 20:27:38 +0200] [36765] [INFO] [db.dao.base_dao] RoomModel DAO: Create db entry
[2023-04-04 20:27:38 +0200] [36765] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed for creation: room_number=102 class_type=<ClassTypesEnum.LABORATORY: 'laboratory'>
[2023-04-04 20:27:38 +0200] [36765] [DEBUG] [db.dao.base_dao] RoomModel DAO: Created entry in database: {'id': UUID('e5153cc5-87d1-4624-a423-ad84d4ba510b'), 'room_number': 102, 'class_type': <ClassTypesEnum.LABORATORY: 'laboratory'>}
[2023-04-04 20:27:43 +0200] [36765] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 20:27:43 +0200] [36765] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 20:27:43 +0200] [36765] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 20:27:43 +0200] [36765] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 20:27:43 +0200] [36765] [INFO] [services.room_service] RoomService: Get all rooms
[2023-04-04 20:27:43 +0200] [36765] [INFO] [db.dao.base_dao] RoomModel DAO: Get all db entries by parameters
[2023-04-04 20:27:43 +0200] [36765] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: skip: 0, limit: None, params: {}
[2023-04-04 20:27:43 +0200] [36765] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-04 20:27:50 +0200] [36765] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 20:27:50 +0200] [36765] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 20:27:50 +0200] [36765] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 20:27:50 +0200] [36765] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 20:27:50 +0200] [36765] [INFO] [services.room_service] RoomService: Get room by number
[2023-04-04 20:27:50 +0200] [36765] [TRACE] [services.room_service] RoomService: Get room by number: 101
[2023-04-04 20:27:50 +0200] [36765] [INFO] [db.dao.base_dao] RoomModel DAO: Get db entry by parameters
[2023-04-04 20:27:50 +0200] [36765] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: params: {'room_number': 101}
[2023-04-04 20:27:50 +0200] [36765] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-04 20:27:58 +0200] [36765] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 20:27:58 +0200] [36765] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 20:27:58 +0200] [36765] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 20:27:58 +0200] [36765] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 20:27:58 +0200] [36765] [INFO] [services.room_service] RoomService: Patch room
[2023-04-04 20:27:58 +0200] [36765] [TRACE] [services.room_service] RoomService: Patch room number: 101 with following data: class_type=<ClassTypesEnum.LECTURE: 'lecture'>
[2023-04-04 20:27:58 +0200] [36765] [INFO] [services.room_service] RoomService: Get room by number
[2023-04-04 20:27:58 +0200] [36765] [TRACE] [services.room_service] RoomService: Get room by number: 101
[2023-04-04 20:27:58 +0200] [36765] [INFO] [db.dao.base_dao] RoomModel DAO: Get db entry by parameters
[2023-04-04 20:27:58 +0200] [36765] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: params: {'room_number': 101}
[2023-04-04 20:27:58 +0200] [36765] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-04 20:27:58 +0200] [36765] [INFO] [db.dao.base_dao] RoomModel DAO: Update db entry
[2023-04-04 20:27:58 +0200] [36765] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed for update: item_id: 36e00674-2191-4cbd-b066-965f55e52aa2, patch_data: class_type=<ClassTypesEnum.LECTURE: 'lecture'>
[2023-04-04 20:27:58 +0200] [36765] [DEBUG] [db.dao.base_dao] RoomModel DAO: Received updated entry from the database
[2023-04-04 20:28:02 +0200] [36765] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 20:28:02 +0200] [36765] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 20:28:02 +0200] [36765] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 20:28:02 +0200] [36765] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 20:28:02 +0200] [36765] [INFO] [services.room_service] RoomService: Get room by number
[2023-04-04 20:28:02 +0200] [36765] [TRACE] [services.room_service] RoomService: Get room by number: 101
[2023-04-04 20:28:02 +0200] [36765] [INFO] [db.dao.base_dao] RoomModel DAO: Get db entry by parameters
[2023-04-04 20:28:02 +0200] [36765] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: params: {'room_number': 101}
[2023-04-04 20:28:02 +0200] [36765] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-04 20:28:05 +0200] [36765] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 20:28:05 +0200] [36765] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 20:28:05 +0200] [36765] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 20:28:05 +0200] [36765] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 20:28:05 +0200] [36765] [INFO] [services.room_service] RoomService: Get all rooms
[2023-04-04 20:28:05 +0200] [36765] [INFO] [db.dao.base_dao] RoomModel DAO: Get all db entries by parameters
[2023-04-04 20:28:05 +0200] [36765] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: skip: 0, limit: None, params: {}
[2023-04-04 20:28:05 +0200] [36765] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-04 20:28:13 +0200] [36765] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 20:28:13 +0200] [36765] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 20:28:13 +0200] [36765] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 20:28:13 +0200] [36765] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 20:28:13 +0200] [36765] [INFO] [services.room_service] RoomService: Delete room
[2023-04-04 20:28:13 +0200] [36765] [INFO] [services.room_service] RoomService: Get room by number
[2023-04-04 20:28:13 +0200] [36765] [TRACE] [services.room_service] RoomService: Get room by number: 101
[2023-04-04 20:28:13 +0200] [36765] [INFO] [db.dao.base_dao] RoomModel DAO: Get db entry by parameters
[2023-04-04 20:28:13 +0200] [36765] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: params: {'room_number': 101}
[2023-04-04 20:28:13 +0200] [36765] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-04 20:28:23 +0200] [36765] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 20:28:23 +0200] [36765] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 20:28:23 +0200] [36765] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 20:28:23 +0200] [36765] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 20:28:23 +0200] [36765] [INFO] [services.room_service] RoomService: Get room by number
[2023-04-04 20:28:23 +0200] [36765] [TRACE] [services.room_service] RoomService: Get room by number: 101
[2023-04-04 20:28:23 +0200] [36765] [INFO] [db.dao.base_dao] RoomModel DAO: Get db entry by parameters
[2023-04-04 20:28:23 +0200] [36765] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: params: {'room_number': 101}
[2023-04-04 20:28:23 +0200] [36765] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-04 20:28:26 +0200] [36765] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 20:28:26 +0200] [36765] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 20:28:26 +0200] [36765] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 20:28:26 +0200] [36765] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 20:28:26 +0200] [36765] [INFO] [services.room_service] RoomService: Get all rooms
[2023-04-04 20:28:26 +0200] [36765] [INFO] [db.dao.base_dao] RoomModel DAO: Get all db entries by parameters
[2023-04-04 20:28:26 +0200] [36765] [TRACE] [db.dao.base_dao] RoomModel DAO: Data passed to filter: skip: 0, limit: None, params: {}
[2023-04-04 20:28:26 +0200] [36765] [DEBUG] [db.dao.base_dao] RoomModel DAO: received a response from the database
[2023-04-04 21:53:11 +0200] [41165] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 21:53:11 +0200] [41165] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$FoD1fRjPj/UIKWcAmpEDlureA20R2bna.X0MFDsBM50hYkRHI5uRS' email='userrrr@user' id=None
[2023-04-04 21:53:11 +0200] [41165] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('49882ff6-3156-472c-96fa-65e5836357f3'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$FoD1fRjPj/UIKWcAmpEDlureA20R2bna.X0MFDsBM50hYkRHI5uRS', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 19, 53, 11, 629349), 'updated_at': datetime.datetime(2023, 4, 4, 19, 53, 11, 629354)}
[2023-04-04 21:54:02 +0200] [41191] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 21:54:02 +0200] [41191] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$EV6BR2d10UxBW7.HtRCPn.A5TpIvzBoJEgjldkU4CE.1FHAKHFamG' email='userrrr@user' id=None
[2023-04-04 21:54:02 +0200] [41191] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('b06455c7-fe70-4049-8c70-d6caec5cf6da'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$EV6BR2d10UxBW7.HtRCPn.A5TpIvzBoJEgjldkU4CE.1FHAKHFamG', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 19, 54, 2, 917878), 'updated_at': datetime.datetime(2023, 4, 4, 19, 54, 2, 917884)}
[2023-04-04 21:54:05 +0200] [41191] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 21:54:05 +0200] [41191] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 21:54:05 +0200] [41191] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 21:54:05 +0200] [41191] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 21:54:05 +0200] [41191] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 21:54:05 +0200] [41191] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 21:54:05 +0200] [41191] [TRACE] [services.auth_service] AuthService: Create session with user: b06455c7-fe70-4049-8c70-d6caec5cf6da
[2023-04-04 21:54:05 +0200] [41191] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 21:54:05 +0200] [41191] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('b06455c7-fe70-4049-8c70-d6caec5cf6da') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 19, 59, 5, 836037) refresh_expire_time=datetime.datetime(2023, 4, 6, 19, 54, 5, 836193) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MzgzNDUsInN1YiI6ImFkbWluIn0.dHwDtvpejPI2P-uMN7kx5AkCRZZGx28gujDz4yuLkAk' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTA4NDUsInN1YiI6ImFkbWluIn0.sT9zAxeqqfNMf8nzvtrvcdTUYp4Aoas1rIWhYyQXluk' blocked=False is_active=True
[2023-04-04 21:54:05 +0200] [41191] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('eb25fe21-8747-42e2-a77f-9917ea9190f5'), 'user_id': UUID('b06455c7-fe70-4049-8c70-d6caec5cf6da'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MzgzNDUsInN1YiI6ImFkbWluIn0.dHwDtvpejPI2P-uMN7kx5AkCRZZGx28gujDz4yuLkAk', 'access_expire_time': datetime.datetime(2023, 4, 4, 19, 59, 5, 836037), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTA4NDUsInN1YiI6ImFkbWluIn0.sT9zAxeqqfNMf8nzvtrvcdTUYp4Aoas1rIWhYyQXluk', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 19, 54, 5, 836193), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 19, 54, 5, 839061), 'updated_at': datetime.datetime(2023, 4, 4, 19, 54, 5, 839066)}
[2023-04-04 21:54:09 +0200] [41191] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 21:54:09 +0200] [41191] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 21:54:09 +0200] [41191] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 21:54:09 +0200] [41191] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 21:54:09 +0200] [41191] [INFO] [services.module_service] ModuleService: Create module
[2023-04-04 21:54:09 +0200] [41191] [TRACE] [services.module_service] ModuleService: Create module with passed data module_name='module_1' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-04 21:54:09 +0200] [41191] [INFO] [services.module_service] ModuleService: Check if module with same parameters exists.
[2023-04-04 21:54:09 +0200] [41191] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-04 21:54:09 +0200] [41191] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'module_name': 'module_1', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-04 21:54:10 +0200] [41191] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-04 21:54:10 +0200] [41191] [INFO] [db.dao.base_dao] ModuleModel DAO: Create db entry
[2023-04-04 21:54:10 +0200] [41191] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed for creation: module_name='module_1' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-04 21:54:11 +0200] [41191] [DEBUG] [db.dao.base_dao] ModuleModel DAO: Created entry in database: {'id': UUID('088a64ac-2007-4c3e-a15b-49ff2ce659a7'), 'module_name': 'module_1', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-04 21:54:34 +0200] [41191] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 21:54:34 +0200] [41191] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 21:54:34 +0200] [41191] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 21:54:34 +0200] [41191] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 21:54:34 +0200] [41191] [INFO] [services.module_service] ModuleService: Create module
[2023-04-04 21:54:34 +0200] [41191] [TRACE] [services.module_service] ModuleService: Create module with passed data module_name='module_1' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-04 21:54:34 +0200] [41191] [INFO] [services.module_service] ModuleService: Check if module with same parameters exists.
[2023-04-04 21:54:34 +0200] [41191] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-04 21:54:34 +0200] [41191] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'module_name': 'module_1', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-04 21:54:34 +0200] [41191] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-04 21:54:34 +0200] [41191] [INFO] [services.module_service] ModuleService: Got existing module from db: <db.models.ModuleModel.ModuleModel object at 0x7f21b022dac0>
[2023-04-04 21:55:06 +0200] [41269] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 21:55:06 +0200] [41269] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$hF4OPFfQUoUgJUpraP2JU.Nfem.QEi8phEmLffqSVnNpYCH1gwO0K' email='userrrr@user' id=None
[2023-04-04 21:55:06 +0200] [41269] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('48bf5069-ba89-46ec-9692-18a6655ef28e'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$hF4OPFfQUoUgJUpraP2JU.Nfem.QEi8phEmLffqSVnNpYCH1gwO0K', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 19, 55, 6, 478378), 'updated_at': datetime.datetime(2023, 4, 4, 19, 55, 6, 478382)}
[2023-04-04 21:55:08 +0200] [41269] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 21:55:08 +0200] [41269] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 21:55:08 +0200] [41269] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 21:55:08 +0200] [41269] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 21:55:08 +0200] [41269] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 21:55:08 +0200] [41269] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 21:55:08 +0200] [41269] [TRACE] [services.auth_service] AuthService: Create session with user: 48bf5069-ba89-46ec-9692-18a6655ef28e
[2023-04-04 21:55:08 +0200] [41269] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 21:55:08 +0200] [41269] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('48bf5069-ba89-46ec-9692-18a6655ef28e') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 20, 0, 8, 979841) refresh_expire_time=datetime.datetime(2023, 4, 6, 19, 55, 8, 980001) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2Mzg0MDgsInN1YiI6ImFkbWluIn0.IJYmnIkrIg4SuAdeNqDoJz3Q9cuDsGm2TzwUn4QnYvQ' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTA5MDgsInN1YiI6ImFkbWluIn0.G031Guu0j1I0dfiliEWe6CZEkTwr_Fz1t5oAkwOa0_M' blocked=False is_active=True
[2023-04-04 21:55:08 +0200] [41269] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('fb45d352-5eaf-49ac-af5d-dacf22366d83'), 'user_id': UUID('48bf5069-ba89-46ec-9692-18a6655ef28e'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2Mzg0MDgsInN1YiI6ImFkbWluIn0.IJYmnIkrIg4SuAdeNqDoJz3Q9cuDsGm2TzwUn4QnYvQ', 'access_expire_time': datetime.datetime(2023, 4, 4, 20, 0, 8, 979841), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTA5MDgsInN1YiI6ImFkbWluIn0.G031Guu0j1I0dfiliEWe6CZEkTwr_Fz1t5oAkwOa0_M', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 19, 55, 8, 980001), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 19, 55, 8, 982619), 'updated_at': datetime.datetime(2023, 4, 4, 19, 55, 8, 982625)}
[2023-04-04 21:55:11 +0200] [41269] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 21:55:11 +0200] [41269] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 21:55:11 +0200] [41269] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 21:55:11 +0200] [41269] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 21:55:11 +0200] [41269] [INFO] [services.module_service] ModuleService: Create module
[2023-04-04 21:55:11 +0200] [41269] [TRACE] [services.module_service] ModuleService: Create module with passed data module_name='module_1' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-04 21:55:11 +0200] [41269] [INFO] [services.module_service] ModuleService: Check if module with same parameters exists.
[2023-04-04 21:55:11 +0200] [41269] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-04 21:55:11 +0200] [41269] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'module_name': 'module_1', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-04 21:55:12 +0200] [41269] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-04 21:55:12 +0200] [41269] [INFO] [db.dao.base_dao] ModuleModel DAO: Create db entry
[2023-04-04 21:55:12 +0200] [41269] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed for creation: module_name='module_1' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-04 21:55:13 +0200] [41269] [DEBUG] [db.dao.base_dao] ModuleModel DAO: Created entry in database: {'id': UUID('cb14eeae-fdda-4748-810d-6ce777657093'), 'module_name': 'module_1', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-04 21:55:16 +0200] [41269] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 21:55:16 +0200] [41269] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 21:55:16 +0200] [41269] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 21:55:16 +0200] [41269] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 21:55:16 +0200] [41269] [INFO] [services.module_service] ModuleService: Create module
[2023-04-04 21:55:16 +0200] [41269] [TRACE] [services.module_service] ModuleService: Create module with passed data module_name='module_1' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-04 21:55:16 +0200] [41269] [INFO] [services.module_service] ModuleService: Check if module with same parameters exists.
[2023-04-04 21:55:16 +0200] [41269] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-04 21:55:16 +0200] [41269] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'module_name': 'module_1', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-04 21:55:16 +0200] [41269] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-04 21:55:16 +0200] [41269] [INFO] [services.module_service] ModuleService: Got existing module from db: <db.models.ModuleModel.ModuleModel object at 0x7fd78129acd0>
[2023-04-04 21:55:29 +0200] [41269] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 21:55:29 +0200] [41269] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 21:55:29 +0200] [41269] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 21:55:29 +0200] [41269] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 21:55:29 +0200] [41269] [INFO] [services.module_service] ModuleService: Get all modules
[2023-04-04 21:55:29 +0200] [41269] [INFO] [db.dao.base_dao] ModuleModel DAO: Get all db entries by parameters
[2023-04-04 21:55:29 +0200] [41269] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: skip: 0, limit: None, params: {}
[2023-04-04 21:55:29 +0200] [41269] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-04 21:55:38 +0200] [41269] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 21:55:38 +0200] [41269] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 21:55:38 +0200] [41269] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 21:55:38 +0200] [41269] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 21:55:38 +0200] [41269] [INFO] [services.module_service] ModuleService: Create module
[2023-04-04 21:55:38 +0200] [41269] [TRACE] [services.module_service] ModuleService: Create module with passed data module_name='module_2' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-04 21:55:38 +0200] [41269] [INFO] [services.module_service] ModuleService: Check if module with same parameters exists.
[2023-04-04 21:55:38 +0200] [41269] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-04 21:55:38 +0200] [41269] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'module_name': 'module_2', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-04 21:55:38 +0200] [41269] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-04 21:55:38 +0200] [41269] [INFO] [db.dao.base_dao] ModuleModel DAO: Create db entry
[2023-04-04 21:55:38 +0200] [41269] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed for creation: module_name='module_2' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-04 21:55:38 +0200] [41269] [DEBUG] [db.dao.base_dao] ModuleModel DAO: Created entry in database: {'id': UUID('0df3730f-cb3c-4100-8b14-ed03d064905f'), 'module_name': 'module_2', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-04 21:55:49 +0200] [41269] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 21:55:49 +0200] [41269] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 21:55:49 +0200] [41269] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 21:55:49 +0200] [41269] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 21:55:49 +0200] [41269] [INFO] [services.module_service] ModuleService: Get all modules
[2023-04-04 21:55:49 +0200] [41269] [INFO] [db.dao.base_dao] ModuleModel DAO: Get all db entries by parameters
[2023-04-04 21:55:49 +0200] [41269] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: skip: 0, limit: None, params: {}
[2023-04-04 21:55:49 +0200] [41269] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-04 21:56:08 +0200] [41269] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 21:56:08 +0200] [41269] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 21:56:08 +0200] [41269] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 21:56:08 +0200] [41269] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 21:56:08 +0200] [41269] [INFO] [services.module_service] ModuleService: Get module by id: 0df3730f-cb3c-4100-8b14-ed03d064905f
[2023-04-04 21:56:08 +0200] [41269] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by id: 0df3730f-cb3c-4100-8b14-ed03d064905f
[2023-04-04 21:57:13 +0200] [41427] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 21:57:13 +0200] [41427] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$EO3d/oeZbjRt8MXtgwG0ju1Oy1URyd6A0g9Sm6nPWmda6G7MXqJlK' email='userrrr@user' id=None
[2023-04-04 21:57:13 +0200] [41427] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('c4f83252-f5fb-4f8c-856f-80d3ce14c5d2'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$EO3d/oeZbjRt8MXtgwG0ju1Oy1URyd6A0g9Sm6nPWmda6G7MXqJlK', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 19, 57, 13, 725236), 'updated_at': datetime.datetime(2023, 4, 4, 19, 57, 13, 725240)}
[2023-04-04 21:57:15 +0200] [41427] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 21:57:15 +0200] [41427] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 21:57:15 +0200] [41427] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 21:57:15 +0200] [41427] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 21:57:15 +0200] [41427] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 21:57:16 +0200] [41427] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 21:57:16 +0200] [41427] [TRACE] [services.auth_service] AuthService: Create session with user: c4f83252-f5fb-4f8c-856f-80d3ce14c5d2
[2023-04-04 21:57:16 +0200] [41427] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 21:57:16 +0200] [41427] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('c4f83252-f5fb-4f8c-856f-80d3ce14c5d2') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 20, 2, 16, 160916) refresh_expire_time=datetime.datetime(2023, 4, 6, 19, 57, 16, 161107) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2Mzg1MzYsInN1YiI6ImFkbWluIn0.LjypSL5SjAJu1frWdLznXnVL11qxS40gVn9ZF0AU6-w' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTEwMzYsInN1YiI6ImFkbWluIn0.Rvn8zg8mGfk7F0jCVBvuAMyIrRIdxzx7h50Y-AEklhM' blocked=False is_active=True
[2023-04-04 21:57:16 +0200] [41427] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('4d51ac40-69db-4647-8c81-cd77106afc28'), 'user_id': UUID('c4f83252-f5fb-4f8c-856f-80d3ce14c5d2'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2Mzg1MzYsInN1YiI6ImFkbWluIn0.LjypSL5SjAJu1frWdLznXnVL11qxS40gVn9ZF0AU6-w', 'access_expire_time': datetime.datetime(2023, 4, 4, 20, 2, 16, 160916), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTEwMzYsInN1YiI6ImFkbWluIn0.Rvn8zg8mGfk7F0jCVBvuAMyIrRIdxzx7h50Y-AEklhM', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 19, 57, 16, 161107), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 19, 57, 16, 168673), 'updated_at': datetime.datetime(2023, 4, 4, 19, 57, 16, 168681)}
[2023-04-04 21:57:19 +0200] [41427] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 21:57:19 +0200] [41427] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 21:57:19 +0200] [41427] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 21:57:19 +0200] [41427] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 21:57:19 +0200] [41427] [INFO] [services.module_service] ModuleService: Create module
[2023-04-04 21:57:19 +0200] [41427] [TRACE] [services.module_service] ModuleService: Create module with passed data module_name='module_2' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-04 21:57:19 +0200] [41427] [INFO] [services.module_service] ModuleService: Check if module with same parameters exists.
[2023-04-04 21:57:19 +0200] [41427] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-04 21:57:19 +0200] [41427] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'module_name': 'module_2', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-04 21:57:20 +0200] [41427] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-04 21:57:20 +0200] [41427] [INFO] [db.dao.base_dao] ModuleModel DAO: Create db entry
[2023-04-04 21:57:20 +0200] [41427] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed for creation: module_name='module_2' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-04 21:57:21 +0200] [41427] [DEBUG] [db.dao.base_dao] ModuleModel DAO: Created entry in database: {'id': UUID('ac0609c4-6421-4610-82d0-5fecd1b7fb73'), 'module_name': 'module_2', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-04 21:57:31 +0200] [41427] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 21:57:31 +0200] [41427] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 21:57:31 +0200] [41427] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 21:57:31 +0200] [41427] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 21:57:31 +0200] [41427] [INFO] [services.module_service] ModuleService: Get module by id: ac0609c4-6421-4610-82d0-5fecd1b7fb73
[2023-04-04 21:57:31 +0200] [41427] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-04 21:57:31 +0200] [41427] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': 'ac0609c4-6421-4610-82d0-5fecd1b7fb73'}
[2023-04-04 21:57:31 +0200] [41427] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-04 21:58:24 +0200] [41489] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 21:58:24 +0200] [41489] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 21:58:24 +0200] [41489] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 21:58:24 +0200] [41489] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 21:58:59 +0200] [41489] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 21:58:59 +0200] [41489] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 21:58:59 +0200] [41489] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 21:58:59 +0200] [41489] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 21:59:05 +0200] [41489] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 21:59:05 +0200] [41489] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$QZ2ObiGLY81eJLmw1VsIr.fcyKptdDQbbI0SPRwKvUr9k8aXTh1Wm' email='userrrr@user' id=None
[2023-04-04 21:59:05 +0200] [41489] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('5ace6f25-78c9-4aca-9311-1a6603c99bb5'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$QZ2ObiGLY81eJLmw1VsIr.fcyKptdDQbbI0SPRwKvUr9k8aXTh1Wm', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 19, 59, 5, 533591), 'updated_at': datetime.datetime(2023, 4, 4, 19, 59, 5, 533595)}
[2023-04-04 21:59:07 +0200] [41489] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 21:59:07 +0200] [41489] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 21:59:07 +0200] [41489] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 21:59:07 +0200] [41489] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 21:59:07 +0200] [41489] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 21:59:07 +0200] [41489] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 21:59:07 +0200] [41489] [TRACE] [services.auth_service] AuthService: Create session with user: 5ace6f25-78c9-4aca-9311-1a6603c99bb5
[2023-04-04 21:59:07 +0200] [41489] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 21:59:07 +0200] [41489] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('5ace6f25-78c9-4aca-9311-1a6603c99bb5') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 20, 4, 7, 842326) refresh_expire_time=datetime.datetime(2023, 4, 6, 19, 59, 7, 842467) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2Mzg2NDcsInN1YiI6ImFkbWluIn0.hU9Ox-gJXgimfZkQ8oz_lRFsLToNqvTF5RW0heHzkUI' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTExNDcsInN1YiI6ImFkbWluIn0.I_ttzt9wtH65Xy3N0WYZQ8wedA2huNepHenBGlq-2SI' blocked=False is_active=True
[2023-04-04 21:59:07 +0200] [41489] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('86328400-fedb-4ec4-924d-2a10fdf78b3d'), 'user_id': UUID('5ace6f25-78c9-4aca-9311-1a6603c99bb5'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2Mzg2NDcsInN1YiI6ImFkbWluIn0.hU9Ox-gJXgimfZkQ8oz_lRFsLToNqvTF5RW0heHzkUI', 'access_expire_time': datetime.datetime(2023, 4, 4, 20, 4, 7, 842326), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTExNDcsInN1YiI6ImFkbWluIn0.I_ttzt9wtH65Xy3N0WYZQ8wedA2huNepHenBGlq-2SI', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 19, 59, 7, 842467), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 19, 59, 7, 845010), 'updated_at': datetime.datetime(2023, 4, 4, 19, 59, 7, 845015)}
[2023-04-04 21:59:12 +0200] [41489] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 21:59:12 +0200] [41489] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 21:59:12 +0200] [41489] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 21:59:12 +0200] [41489] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 21:59:12 +0200] [41489] [INFO] [services.module_service] ModuleService: Create module
[2023-04-04 21:59:12 +0200] [41489] [TRACE] [services.module_service] ModuleService: Create module with passed data module_name='module_2' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-04 21:59:12 +0200] [41489] [INFO] [services.module_service] ModuleService: Check if module with same parameters exists.
[2023-04-04 21:59:12 +0200] [41489] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-04 21:59:12 +0200] [41489] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'module_name': 'module_2', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-04 21:59:13 +0200] [41489] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-04 21:59:13 +0200] [41489] [INFO] [db.dao.base_dao] ModuleModel DAO: Create db entry
[2023-04-04 21:59:13 +0200] [41489] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed for creation: module_name='module_2' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-04 21:59:14 +0200] [41489] [DEBUG] [db.dao.base_dao] ModuleModel DAO: Created entry in database: {'id': UUID('5424c018-0b3f-4a9e-9765-97b3626c0cfe'), 'module_name': 'module_2', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-04 21:59:23 +0200] [41489] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 21:59:23 +0200] [41489] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 21:59:23 +0200] [41489] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 21:59:23 +0200] [41489] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 21:59:23 +0200] [41489] [INFO] [services.module_service] ModuleService: Get module by id: 5424c018-0b3f-4a9e-9765-97b3626c0cfe
[2023-04-04 21:59:23 +0200] [41489] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-04 21:59:23 +0200] [41489] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': '5424c018-0b3f-4a9e-9765-97b3626c0cfe'}
[2023-04-04 21:59:23 +0200] [41489] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-04 21:59:30 +0200] [41489] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 21:59:30 +0200] [41489] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 21:59:30 +0200] [41489] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 21:59:30 +0200] [41489] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 21:59:30 +0200] [41489] [INFO] [services.module_service] ModuleService: Delete module
[2023-04-04 21:59:42 +0200] [41489] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 21:59:42 +0200] [41489] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 21:59:42 +0200] [41489] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 21:59:42 +0200] [41489] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 21:59:42 +0200] [41489] [INFO] [services.module_service] ModuleService: Get module by id: 5424c018-0b3f-4a9e-9765-97b3626c0cfe
[2023-04-04 21:59:42 +0200] [41489] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-04 21:59:42 +0200] [41489] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': '5424c018-0b3f-4a9e-9765-97b3626c0cfe'}
[2023-04-04 21:59:42 +0200] [41489] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-04 22:02:55 +0200] [41489] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 22:02:55 +0200] [41489] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$vch8z2P8wvgTrHj6UYUC2.BGTr0DeFUY0qWpUqFnnwSzxgzV6Pf6m' email='userrrr@user' id=None
[2023-04-04 22:02:57 +0200] [41489] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 22:02:57 +0200] [41489] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 22:02:57 +0200] [41489] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 22:02:57 +0200] [41489] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 22:02:57 +0200] [41489] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 22:02:57 +0200] [41489] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 22:02:57 +0200] [41489] [TRACE] [services.auth_service] AuthService: Create session with user: 5ace6f25-78c9-4aca-9311-1a6603c99bb5
[2023-04-04 22:02:57 +0200] [41489] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 22:02:57 +0200] [41489] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('5ace6f25-78c9-4aca-9311-1a6603c99bb5') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 20, 7, 57, 504304) refresh_expire_time=datetime.datetime(2023, 4, 6, 20, 2, 57, 504486) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2Mzg4NzcsInN1YiI6ImFkbWluIn0.F0AW9z5krQ-ceB3_-20QV7g2N1j1XfNRAcqY5EOjz9Y' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTEzNzcsInN1YiI6ImFkbWluIn0.algccLOySWHoZix3ibxXWXAVPdKMwmf81-V4Gg5fiDk' blocked=False is_active=True
[2023-04-04 22:02:57 +0200] [41489] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('739a02c0-0b03-412e-a755-f65188a8f9eb'), 'user_id': UUID('5ace6f25-78c9-4aca-9311-1a6603c99bb5'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2Mzg4NzcsInN1YiI6ImFkbWluIn0.F0AW9z5krQ-ceB3_-20QV7g2N1j1XfNRAcqY5EOjz9Y', 'access_expire_time': datetime.datetime(2023, 4, 4, 20, 7, 57, 504304), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTEzNzcsInN1YiI6ImFkbWluIn0.algccLOySWHoZix3ibxXWXAVPdKMwmf81-V4Gg5fiDk', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 20, 2, 57, 504486), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 20, 2, 57, 507612), 'updated_at': datetime.datetime(2023, 4, 4, 20, 2, 57, 507623)}
[2023-04-04 22:03:06 +0200] [41489] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 22:03:06 +0200] [41489] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 22:03:06 +0200] [41489] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 22:03:06 +0200] [41489] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 22:03:28 +0200] [41734] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 22:03:28 +0200] [41734] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$b0FroqYFajaklB3SQjPdjOb1yxPiN9n01S29MrEWYjdpHfy/IVG9i' email='userrrr@user' id=None
[2023-04-04 22:03:28 +0200] [41734] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('14e87249-ffcc-404e-9e54-b18a02ee6a19'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$b0FroqYFajaklB3SQjPdjOb1yxPiN9n01S29MrEWYjdpHfy/IVG9i', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 20, 3, 28, 106975), 'updated_at': datetime.datetime(2023, 4, 4, 20, 3, 28, 106981)}
[2023-04-04 22:03:30 +0200] [41734] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 22:03:30 +0200] [41734] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 22:03:30 +0200] [41734] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 22:03:30 +0200] [41734] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 22:03:30 +0200] [41734] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 22:03:30 +0200] [41734] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 22:03:30 +0200] [41734] [TRACE] [services.auth_service] AuthService: Create session with user: 14e87249-ffcc-404e-9e54-b18a02ee6a19
[2023-04-04 22:03:30 +0200] [41734] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 22:03:30 +0200] [41734] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('14e87249-ffcc-404e-9e54-b18a02ee6a19') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 20, 8, 30, 293776) refresh_expire_time=datetime.datetime(2023, 4, 6, 20, 3, 30, 293940) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2Mzg5MTAsInN1YiI6ImFkbWluIn0.JJuJWBS8RV-cm7pcK3Ndc9k80Ywv1o3qa8Hb5QoV3Ss' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTE0MTAsInN1YiI6ImFkbWluIn0.zjscQ1_pqlrllVR97kqOp9VGjqcyRL7uGKRExeICuhU' blocked=False is_active=True
[2023-04-04 22:03:30 +0200] [41734] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('bf678224-ead1-42c1-bdb9-bd68fb6765e2'), 'user_id': UUID('14e87249-ffcc-404e-9e54-b18a02ee6a19'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2Mzg5MTAsInN1YiI6ImFkbWluIn0.JJuJWBS8RV-cm7pcK3Ndc9k80Ywv1o3qa8Hb5QoV3Ss', 'access_expire_time': datetime.datetime(2023, 4, 4, 20, 8, 30, 293776), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTE0MTAsInN1YiI6ImFkbWluIn0.zjscQ1_pqlrllVR97kqOp9VGjqcyRL7uGKRExeICuhU', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 20, 3, 30, 293940), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 20, 3, 30, 296324), 'updated_at': datetime.datetime(2023, 4, 4, 20, 3, 30, 296328)}
[2023-04-04 22:03:32 +0200] [41734] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 22:03:32 +0200] [41734] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 22:03:32 +0200] [41734] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 22:03:32 +0200] [41734] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 22:03:32 +0200] [41734] [INFO] [services.module_service] ModuleService: Get module by id: 5424c018-0b3f-4a9e-9765-97b3626c0cfe
[2023-04-04 22:03:32 +0200] [41734] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-04 22:03:32 +0200] [41734] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': '5424c018-0b3f-4a9e-9765-97b3626c0cfe'}
[2023-04-04 22:03:34 +0200] [41734] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-04 22:03:45 +0200] [41734] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 22:03:45 +0200] [41734] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 22:03:45 +0200] [41734] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 22:03:45 +0200] [41734] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 22:03:45 +0200] [41734] [INFO] [services.module_service] ModuleService: Create module
[2023-04-04 22:03:45 +0200] [41734] [TRACE] [services.module_service] ModuleService: Create module with passed data module_name='module_2' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-04 22:03:45 +0200] [41734] [INFO] [services.module_service] ModuleService: Check if module with same parameters exists.
[2023-04-04 22:03:45 +0200] [41734] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-04 22:03:45 +0200] [41734] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'module_name': 'module_2', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-04 22:03:45 +0200] [41734] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-04 22:03:45 +0200] [41734] [INFO] [db.dao.base_dao] ModuleModel DAO: Create db entry
[2023-04-04 22:03:45 +0200] [41734] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed for creation: module_name='module_2' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-04 22:03:46 +0200] [41734] [DEBUG] [db.dao.base_dao] ModuleModel DAO: Created entry in database: {'id': UUID('01db8337-a196-4a35-a50c-a9ad50fa3d1e'), 'module_name': 'module_2', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-04 22:03:56 +0200] [41734] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 22:03:56 +0200] [41734] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 22:03:56 +0200] [41734] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 22:03:56 +0200] [41734] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 22:03:56 +0200] [41734] [INFO] [services.module_service] ModuleService: Get module by id: 01db8337-a196-4a35-a50c-a9ad50fa3d1e
[2023-04-04 22:03:56 +0200] [41734] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-04 22:03:56 +0200] [41734] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': '01db8337-a196-4a35-a50c-a9ad50fa3d1e'}
[2023-04-04 22:03:56 +0200] [41734] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-04 22:04:17 +0200] [41794] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 22:04:17 +0200] [41794] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$H/V/MIrrroehc6DCbSt0W.F73alUe8i1JG6tuGeC0H.tslCGjM9xG' email='userrrr@user' id=None
[2023-04-04 22:04:17 +0200] [41794] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('e18d2a3e-4f06-45ea-ab2e-cd9c2fe654d9'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$H/V/MIrrroehc6DCbSt0W.F73alUe8i1JG6tuGeC0H.tslCGjM9xG', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 20, 4, 17, 568922), 'updated_at': datetime.datetime(2023, 4, 4, 20, 4, 17, 568928)}
[2023-04-04 22:04:20 +0200] [41794] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 22:04:20 +0200] [41794] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 22:04:20 +0200] [41794] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 22:04:20 +0200] [41794] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 22:04:20 +0200] [41794] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 22:04:20 +0200] [41794] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 22:04:20 +0200] [41794] [TRACE] [services.auth_service] AuthService: Create session with user: e18d2a3e-4f06-45ea-ab2e-cd9c2fe654d9
[2023-04-04 22:04:20 +0200] [41794] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 22:04:20 +0200] [41794] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('e18d2a3e-4f06-45ea-ab2e-cd9c2fe654d9') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 20, 9, 20, 299865) refresh_expire_time=datetime.datetime(2023, 4, 6, 20, 4, 20, 300086) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2Mzg5NjAsInN1YiI6ImFkbWluIn0.zOaBXUacwJ7dX1pHYNJC4vCqq4Tgfhr-RfkK2XwMY1Y' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTE0NjAsInN1YiI6ImFkbWluIn0.RGnncifk7xs12PZd0K9rijNk21R_a1HuPATMdDgmB8c' blocked=False is_active=True
[2023-04-04 22:04:20 +0200] [41794] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('564d319f-6e67-42ac-bb5a-da0d3dcf6c44'), 'user_id': UUID('e18d2a3e-4f06-45ea-ab2e-cd9c2fe654d9'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2Mzg5NjAsInN1YiI6ImFkbWluIn0.zOaBXUacwJ7dX1pHYNJC4vCqq4Tgfhr-RfkK2XwMY1Y', 'access_expire_time': datetime.datetime(2023, 4, 4, 20, 9, 20, 299865), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTE0NjAsInN1YiI6ImFkbWluIn0.RGnncifk7xs12PZd0K9rijNk21R_a1HuPATMdDgmB8c', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 20, 4, 20, 300086), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 20, 4, 20, 303492), 'updated_at': datetime.datetime(2023, 4, 4, 20, 4, 20, 303500)}
[2023-04-04 22:04:23 +0200] [41794] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 22:04:23 +0200] [41794] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 22:04:23 +0200] [41794] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 22:04:23 +0200] [41794] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 22:04:23 +0200] [41794] [INFO] [services.module_service] ModuleService: Create module
[2023-04-04 22:04:23 +0200] [41794] [TRACE] [services.module_service] ModuleService: Create module with passed data module_name='module_2' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-04 22:04:23 +0200] [41794] [INFO] [services.module_service] ModuleService: Check if module with same parameters exists.
[2023-04-04 22:04:23 +0200] [41794] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-04 22:04:23 +0200] [41794] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'module_name': 'module_2', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-04 22:04:24 +0200] [41794] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-04 22:04:24 +0200] [41794] [INFO] [db.dao.base_dao] ModuleModel DAO: Create db entry
[2023-04-04 22:04:24 +0200] [41794] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed for creation: module_name='module_2' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-04 22:04:25 +0200] [41794] [DEBUG] [db.dao.base_dao] ModuleModel DAO: Created entry in database: {'id': UUID('6a227203-9a2e-4e20-8309-dd453e92411d'), 'module_name': 'module_2', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-04 22:04:56 +0200] [41794] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 22:04:56 +0200] [41794] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 22:04:56 +0200] [41794] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 22:04:56 +0200] [41794] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 22:04:56 +0200] [41794] [INFO] [services.module_service] ModuleService: Get module by id: 6a227203-9a2e-4e20-8309-dd453e92411d
[2023-04-04 22:04:56 +0200] [41794] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-04 22:04:56 +0200] [41794] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': '6a227203-9a2e-4e20-8309-dd453e92411d'}
[2023-04-04 22:04:56 +0200] [41794] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-04 22:10:02 +0200] [41794] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 22:10:02 +0200] [41794] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$MTh2ud.reNzIBzW8zWYdkOcny.nF8NG69MuEQ3p6IIvaE0kqoZEz6' email='userrrr@user' id=None
[2023-04-04 22:10:18 +0200] [41794] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 22:10:18 +0200] [41794] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 22:10:18 +0200] [41794] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 22:10:18 +0200] [41794] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 22:10:18 +0200] [41794] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 22:10:18 +0200] [41794] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 22:10:18 +0200] [41794] [TRACE] [services.auth_service] AuthService: Create session with user: e18d2a3e-4f06-45ea-ab2e-cd9c2fe654d9
[2023-04-04 22:10:18 +0200] [41794] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 22:10:18 +0200] [41794] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('e18d2a3e-4f06-45ea-ab2e-cd9c2fe654d9') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 20, 15, 18, 656866) refresh_expire_time=datetime.datetime(2023, 4, 6, 20, 10, 18, 657006) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MzkzMTgsInN1YiI6ImFkbWluIn0.RO3SDtEiOp47AP34Gl-tZMBoVC3LpECvqB31glAuPLM' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTE4MTgsInN1YiI6ImFkbWluIn0.zSdPX9V5JiwzR_rUbjakIluKw-EQvYBP4DrBlguWygQ' blocked=False is_active=True
[2023-04-04 22:10:18 +0200] [41794] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('b6c0ab60-b994-4e01-8b99-63133c37f627'), 'user_id': UUID('e18d2a3e-4f06-45ea-ab2e-cd9c2fe654d9'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2MzkzMTgsInN1YiI6ImFkbWluIn0.RO3SDtEiOp47AP34Gl-tZMBoVC3LpECvqB31glAuPLM', 'access_expire_time': datetime.datetime(2023, 4, 4, 20, 15, 18, 656866), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTE4MTgsInN1YiI6ImFkbWluIn0.zSdPX9V5JiwzR_rUbjakIluKw-EQvYBP4DrBlguWygQ', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 20, 10, 18, 657006), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 20, 10, 18, 658770), 'updated_at': datetime.datetime(2023, 4, 4, 20, 10, 18, 658773)}
[2023-04-04 22:10:31 +0200] [41794] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 22:10:31 +0200] [41794] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 22:10:31 +0200] [41794] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 22:10:31 +0200] [41794] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 22:10:31 +0200] [41794] [INFO] [services.teacher_service] TeacherService: Create teachers
[2023-04-04 22:10:31 +0200] [41794] [TRACE] [services.teacher_service] TeacherService: Register teachers with passed data [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date='28-02-2002'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date='28-02-2002')]
[2023-04-04 22:10:31 +0200] [41794] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string1' second_name='string1' last_name='string' birth_date='28-02-2002'
[2023-04-04 22:10:31 +0200] [41794] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 22:10:31 +0200] [41794] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 22:10:31 +0200] [41794] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-04 22:10:31 +0200] [41794] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string3' second_name=None last_name='string3' birth_date='28-02-2002'
[2023-04-04 22:10:31 +0200] [41794] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 22:10:31 +0200] [41794] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 22:10:31 +0200] [41794] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-04 22:10:31 +0200] [41794] [DEBUG] [services.teacher_service] TeacherService: Teachers to be registered after check: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='OAynyY5NRI97Lw'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='EQjoR58b4MsiSQ')]
[2023-04-04 22:10:31 +0200] [41794] [INFO] [db.dao.base_dao] TeacherModel DAO: Create db entry
[2023-04-04 22:10:31 +0200] [41794] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed for creation: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='OAynyY5NRI97Lw'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='EQjoR58b4MsiSQ')]
[2023-04-04 22:10:31 +0200] [41794] [DEBUG] [db.dao.base_dao] TeacherModel DAO: Created entries in database: [{'id': UUID('c2d63ade-e62b-4a7a-87be-7e397a612f55'), 'registration_token': 'OAynyY5NRI97Lw', 'registered_user': False, 'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 20, 10, 31, 533719), 'updated_at': datetime.datetime(2023, 4, 4, 20, 10, 31, 533725), 'deleted_at': None}, {'id': UUID('f8890b5d-75e6-40df-a4ba-ecd076c3fd6c'), 'registration_token': 'EQjoR58b4MsiSQ', 'registered_user': False, 'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 20, 10, 31, 552209), 'updated_at': datetime.datetime(2023, 4, 4, 20, 10, 31, 552215), 'deleted_at': None}]
[2023-04-04 22:10:31 +0200] [41794] [DEBUG] [services.teacher_service] TeacherService: Received the answer from database: [<db.models.TeacherModel.TeacherModel object at 0x7fada8925370>, <db.models.TeacherModel.TeacherModel object at 0x7fada5c62dc0>]
[2023-04-04 22:10:46 +0200] [41794] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 22:10:46 +0200] [41794] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 22:10:46 +0200] [41794] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 22:10:46 +0200] [41794] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 22:10:46 +0200] [41794] [INFO] [services.module_service] ModuleService: Get all modules
[2023-04-04 22:10:46 +0200] [41794] [INFO] [db.dao.base_dao] ModuleModel DAO: Get all db entries by parameters
[2023-04-04 22:10:46 +0200] [41794] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: skip: 0, limit: None, params: {}
[2023-04-04 22:10:46 +0200] [41794] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-04 22:11:13 +0200] [41794] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 22:11:13 +0200] [41794] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 22:11:13 +0200] [41794] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 22:11:13 +0200] [41794] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 22:12:01 +0200] [42255] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-04 22:12:01 +0200] [42255] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$L4ucH3Idx51aplFgZYLoCelwMezQO8r3W6W0oiSJyff5ry.5JsGfi' email='userrrr@user' id=None
[2023-04-04 22:12:01 +0200] [42255] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('1eeb84fc-e396-4e60-8f53-b2d392b8cdd5'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$L4ucH3Idx51aplFgZYLoCelwMezQO8r3W6W0oiSJyff5ry.5JsGfi', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 20, 12, 1, 117211), 'updated_at': datetime.datetime(2023, 4, 4, 20, 12, 1, 117216)}
[2023-04-04 22:12:03 +0200] [42255] [INFO] [services.auth_service] AuthService: Login user
[2023-04-04 22:12:03 +0200] [42255] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-04 22:12:03 +0200] [42255] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 22:12:03 +0200] [42255] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 22:12:03 +0200] [42255] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 22:12:03 +0200] [42255] [INFO] [services.auth_service] AuthService: Create session
[2023-04-04 22:12:03 +0200] [42255] [TRACE] [services.auth_service] AuthService: Create session with user: 1eeb84fc-e396-4e60-8f53-b2d392b8cdd5
[2023-04-04 22:12:03 +0200] [42255] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-04 22:12:03 +0200] [42255] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('1eeb84fc-e396-4e60-8f53-b2d392b8cdd5') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 4, 20, 17, 3, 557404) refresh_expire_time=datetime.datetime(2023, 4, 6, 20, 12, 3, 557558) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2Mzk0MjMsInN1YiI6ImFkbWluIn0.dEVJIK7BCcAh9nwG0TGL2XeNQ4ZgQiEWRBuiK5xtI-4' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTE5MjMsInN1YiI6ImFkbWluIn0.eCDhYX3SUPv2OsLiko5lfXclJTSretNsZhwllv14etg' blocked=False is_active=True
[2023-04-04 22:12:03 +0200] [42255] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('cf1519d3-8527-4d7b-9c6c-f2da01bfa1b8'), 'user_id': UUID('1eeb84fc-e396-4e60-8f53-b2d392b8cdd5'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2Mzk0MjMsInN1YiI6ImFkbWluIn0.dEVJIK7BCcAh9nwG0TGL2XeNQ4ZgQiEWRBuiK5xtI-4', 'access_expire_time': datetime.datetime(2023, 4, 4, 20, 17, 3, 557404), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4MTE5MjMsInN1YiI6ImFkbWluIn0.eCDhYX3SUPv2OsLiko5lfXclJTSretNsZhwllv14etg', 'refresh_expire_time': datetime.datetime(2023, 4, 6, 20, 12, 3, 557558), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 4, 20, 12, 3, 560285), 'updated_at': datetime.datetime(2023, 4, 4, 20, 12, 3, 560289)}
[2023-04-04 22:12:08 +0200] [42255] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 22:12:08 +0200] [42255] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 22:12:08 +0200] [42255] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 22:12:08 +0200] [42255] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 22:12:08 +0200] [42255] [INFO] [services.teacher_service] TeacherService: Create teachers
[2023-04-04 22:12:08 +0200] [42255] [TRACE] [services.teacher_service] TeacherService: Register teachers with passed data [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date='28-02-2002'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date='28-02-2002')]
[2023-04-04 22:12:08 +0200] [42255] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string1' second_name='string1' last_name='string' birth_date='28-02-2002'
[2023-04-04 22:12:08 +0200] [42255] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 22:12:08 +0200] [42255] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 22:12:08 +0200] [42255] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-04 22:12:08 +0200] [42255] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string3' second_name=None last_name='string3' birth_date='28-02-2002'
[2023-04-04 22:12:08 +0200] [42255] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-04 22:12:08 +0200] [42255] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-04 22:12:08 +0200] [42255] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-04 22:12:08 +0200] [42255] [DEBUG] [services.teacher_service] TeacherService: Teachers to be registered after check: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='CpbBnMMO48nfEQ'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='rsykBzLi8vEkFQ')]
[2023-04-04 22:12:08 +0200] [42255] [INFO] [db.dao.base_dao] TeacherModel DAO: Create db entry
[2023-04-04 22:12:08 +0200] [42255] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed for creation: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='CpbBnMMO48nfEQ'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='rsykBzLi8vEkFQ')]
[2023-04-04 22:12:11 +0200] [42255] [DEBUG] [db.dao.base_dao] TeacherModel DAO: Created entries in database: [{'id': UUID('91f7db07-5542-440a-a9f2-8c0e0ac62443'), 'registration_token': 'CpbBnMMO48nfEQ', 'registered_user': False, 'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 20, 12, 8, 837915), 'updated_at': datetime.datetime(2023, 4, 4, 20, 12, 8, 837919), 'deleted_at': None}, {'id': UUID('eb153a8c-bea5-4ba5-83ae-854f705d274e'), 'registration_token': 'rsykBzLi8vEkFQ', 'registered_user': False, 'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 4, 20, 12, 11, 365571), 'updated_at': datetime.datetime(2023, 4, 4, 20, 12, 11, 365578), 'deleted_at': None}]
[2023-04-04 22:12:11 +0200] [42255] [DEBUG] [services.teacher_service] TeacherService: Received the answer from database: [<db.models.TeacherModel.TeacherModel object at 0x7fc085130be0>, <db.models.TeacherModel.TeacherModel object at 0x7fc0851095e0>]
[2023-04-04 22:12:28 +0200] [42255] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 22:12:28 +0200] [42255] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 22:12:28 +0200] [42255] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 22:12:28 +0200] [42255] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 22:12:28 +0200] [42255] [INFO] [services.module_service] ModuleService: Create module
[2023-04-04 22:12:28 +0200] [42255] [TRACE] [services.module_service] ModuleService: Create module with passed data module_name='module_2' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-04 22:12:28 +0200] [42255] [INFO] [services.module_service] ModuleService: Check if module with same parameters exists.
[2023-04-04 22:12:28 +0200] [42255] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-04 22:12:28 +0200] [42255] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'module_name': 'module_2', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-04 22:12:28 +0200] [42255] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-04 22:12:28 +0200] [42255] [INFO] [db.dao.base_dao] ModuleModel DAO: Create db entry
[2023-04-04 22:12:28 +0200] [42255] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed for creation: module_name='module_2' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-04 22:12:28 +0200] [42255] [DEBUG] [db.dao.base_dao] ModuleModel DAO: Created entry in database: {'id': UUID('cd3d4161-5d42-40b8-9abd-17b146f5884e'), 'module_name': 'module_2', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-04 22:12:39 +0200] [42255] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-04 22:12:39 +0200] [42255] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-04 22:12:39 +0200] [42255] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-04 22:12:39 +0200] [42255] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-04 22:12:39 +0200] [42255] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-04 22:12:39 +0200] [42255] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: 91f7db07-5542-440a-a9f2-8c0e0ac62443 - modules: modules_id=['cd3d4161-5d42-40b8-9abd-17b146f5884e']
[2023-04-04 22:12:39 +0200] [42255] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-04 22:12:39 +0200] [42255] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: modules_id=['cd3d4161-5d42-40b8-9abd-17b146f5884e']
[2023-04-05 13:52:07 +0200] [13439] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-05 13:52:07 +0200] [13439] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$gwanZhNBAJvmJSJ1VRzNkeFt8koCh7gzWeiOMR012TmDzI5Jz03Vu' email='userrrr@user' id=None
[2023-04-05 13:52:07 +0200] [13439] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('223836b5-ef2f-4c19-95e5-64a0c09d6c55'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$gwanZhNBAJvmJSJ1VRzNkeFt8koCh7gzWeiOMR012TmDzI5Jz03Vu', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 5, 11, 52, 7, 37901), 'updated_at': datetime.datetime(2023, 4, 5, 11, 52, 7, 37908)}
[2023-04-05 13:52:10 +0200] [13439] [INFO] [services.auth_service] AuthService: Login user
[2023-04-05 13:52:10 +0200] [13439] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-05 13:52:10 +0200] [13439] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 13:52:10 +0200] [13439] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 13:52:10 +0200] [13439] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 13:52:10 +0200] [13439] [INFO] [services.auth_service] AuthService: Create session
[2023-04-05 13:52:10 +0200] [13439] [TRACE] [services.auth_service] AuthService: Create session with user: 223836b5-ef2f-4c19-95e5-64a0c09d6c55
[2023-04-05 13:52:10 +0200] [13439] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-05 13:52:10 +0200] [13439] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('223836b5-ef2f-4c19-95e5-64a0c09d6c55') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 5, 11, 57, 10, 393864) refresh_expire_time=datetime.datetime(2023, 4, 7, 11, 52, 10, 394075) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2OTU4MzAsInN1YiI6ImFkbWluIn0.kLQyt8IF0MsD732n454XGWxl8IGRODjJB_CpKLPk07g' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NjgzMzAsInN1YiI6ImFkbWluIn0.fjrn-WexLRREGFLqbaQ6krEjZwPAdSBBwYdgF4Rb-S4' blocked=False is_active=True
[2023-04-05 13:52:10 +0200] [13439] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('c562d657-1ebc-41cf-8985-bb4ecbd7a970'), 'user_id': UUID('223836b5-ef2f-4c19-95e5-64a0c09d6c55'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2OTU4MzAsInN1YiI6ImFkbWluIn0.kLQyt8IF0MsD732n454XGWxl8IGRODjJB_CpKLPk07g', 'access_expire_time': datetime.datetime(2023, 4, 5, 11, 57, 10, 393864), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NjgzMzAsInN1YiI6ImFkbWluIn0.fjrn-WexLRREGFLqbaQ6krEjZwPAdSBBwYdgF4Rb-S4', 'refresh_expire_time': datetime.datetime(2023, 4, 7, 11, 52, 10, 394075), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 5, 11, 52, 10, 396672), 'updated_at': datetime.datetime(2023, 4, 5, 11, 52, 10, 396678)}
[2023-04-05 13:52:14 +0200] [13439] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 13:52:14 +0200] [13439] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 13:52:14 +0200] [13439] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 13:52:14 +0200] [13439] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 13:52:14 +0200] [13439] [INFO] [services.teacher_service] TeacherService: Create teachers
[2023-04-05 13:52:14 +0200] [13439] [TRACE] [services.teacher_service] TeacherService: Register teachers with passed data [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date='28-02-2002'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date='28-02-2002')]
[2023-04-05 13:52:14 +0200] [13439] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string1' second_name='string1' last_name='string' birth_date='28-02-2002'
[2023-04-05 13:52:14 +0200] [13439] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-05 13:52:14 +0200] [13439] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-05 13:52:14 +0200] [13439] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-05 13:52:14 +0200] [13439] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string3' second_name=None last_name='string3' birth_date='28-02-2002'
[2023-04-05 13:52:14 +0200] [13439] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-05 13:52:14 +0200] [13439] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-05 13:52:14 +0200] [13439] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-05 13:52:14 +0200] [13439] [DEBUG] [services.teacher_service] TeacherService: Teachers to be registered after check: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='baINER7yDNa6Eg'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='Nk8rRMSeT6yy4g')]
[2023-04-05 13:52:14 +0200] [13439] [INFO] [db.dao.base_dao] TeacherModel DAO: Create db entry
[2023-04-05 13:52:14 +0200] [13439] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed for creation: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='baINER7yDNa6Eg'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='Nk8rRMSeT6yy4g')]
[2023-04-05 13:52:17 +0200] [13439] [DEBUG] [db.dao.base_dao] TeacherModel DAO: Created entries in database: [{'id': UUID('aa20d483-7d35-4ac4-aec5-45aad2ab7de0'), 'registration_token': 'baINER7yDNa6Eg', 'registered_user': False, 'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 5, 11, 52, 14, 384246), 'updated_at': datetime.datetime(2023, 4, 5, 11, 52, 14, 384250), 'deleted_at': None}, {'id': UUID('4579294f-952a-4ac8-b39c-ebd77c8e1f4b'), 'registration_token': 'Nk8rRMSeT6yy4g', 'registered_user': False, 'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 5, 11, 52, 17, 4112), 'updated_at': datetime.datetime(2023, 4, 5, 11, 52, 17, 4118), 'deleted_at': None}]
[2023-04-05 13:52:17 +0200] [13439] [DEBUG] [services.teacher_service] TeacherService: Received the answer from database: [<db.models.TeacherModel.TeacherModel object at 0x7f5e5d174340>, <db.models.TeacherModel.TeacherModel object at 0x7f5e5d144280>]
[2023-04-05 13:52:36 +0200] [13439] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 13:52:36 +0200] [13439] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 13:52:36 +0200] [13439] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 13:52:36 +0200] [13439] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 13:52:36 +0200] [13439] [INFO] [services.module_service] ModuleService: Create module
[2023-04-05 13:52:36 +0200] [13439] [TRACE] [services.module_service] ModuleService: Create module with passed data module_name='module_2' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-05 13:52:36 +0200] [13439] [INFO] [services.module_service] ModuleService: Check if module with same parameters exists.
[2023-04-05 13:52:36 +0200] [13439] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-05 13:52:36 +0200] [13439] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'module_name': 'module_2', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-05 13:52:37 +0200] [13439] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-05 13:52:37 +0200] [13439] [INFO] [db.dao.base_dao] ModuleModel DAO: Create db entry
[2023-04-05 13:52:37 +0200] [13439] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed for creation: module_name='module_2' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-05 13:52:37 +0200] [13439] [DEBUG] [db.dao.base_dao] ModuleModel DAO: Created entry in database: {'id': UUID('c6db63d7-fd08-4d86-9619-2d562af095f3'), 'module_name': 'module_2', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-05 13:52:47 +0200] [13439] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 13:52:47 +0200] [13439] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 13:52:47 +0200] [13439] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 13:52:47 +0200] [13439] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 13:52:47 +0200] [13439] [INFO] [services.module_service] ModuleService: Create module
[2023-04-05 13:52:47 +0200] [13439] [TRACE] [services.module_service] ModuleService: Create module with passed data module_name='module_1' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-05 13:52:47 +0200] [13439] [INFO] [services.module_service] ModuleService: Check if module with same parameters exists.
[2023-04-05 13:52:47 +0200] [13439] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-05 13:52:47 +0200] [13439] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'module_name': 'module_1', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-05 13:52:47 +0200] [13439] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-05 13:52:47 +0200] [13439] [INFO] [db.dao.base_dao] ModuleModel DAO: Create db entry
[2023-04-05 13:52:47 +0200] [13439] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed for creation: module_name='module_1' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-05 13:52:47 +0200] [13439] [DEBUG] [db.dao.base_dao] ModuleModel DAO: Created entry in database: {'id': UUID('269007e8-57ca-41f7-b788-f69e90776e5a'), 'module_name': 'module_1', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-05 13:52:54 +0200] [13439] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 13:52:54 +0200] [13439] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 13:52:54 +0200] [13439] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 13:52:54 +0200] [13439] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 13:52:54 +0200] [13439] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-05 13:52:54 +0200] [13439] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: aa20d483-7d35-4ac4-aec5-45aad2ab7de0 - modules: modules_id=['c6db63d7-fd08-4d86-9619-2d562af095f3']
[2023-04-05 13:52:54 +0200] [13439] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-05 13:52:54 +0200] [13439] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: modules_id=['c6db63d7-fd08-4d86-9619-2d562af095f3']
[2023-04-05 13:57:25 +0200] [13903] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-05 13:57:25 +0200] [13903] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$iYsa8deuS40V2FynJ7zl7.JaxVM6uVgpfxhW7ioce.ua4TlEIjeEG' email='userrrr@user' id=None
[2023-04-05 14:01:29 +0200] [14256] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-05 14:01:29 +0200] [14256] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$zHD6joKOCL5boivUO73I7.VNRPlW0XIHRw295x1VxGZzU4zbSaoaa' email='userrrr@user' id=None
[2023-04-05 14:01:29 +0200] [14256] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('be5bbb5a-42aa-43a8-a98d-04a4c310b61a'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$zHD6joKOCL5boivUO73I7.VNRPlW0XIHRw295x1VxGZzU4zbSaoaa', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 5, 12, 1, 29, 723558), 'updated_at': datetime.datetime(2023, 4, 5, 12, 1, 29, 723563)}
[2023-04-05 14:01:31 +0200] [14256] [INFO] [services.auth_service] AuthService: Login user
[2023-04-05 14:01:31 +0200] [14256] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-05 14:01:31 +0200] [14256] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:01:31 +0200] [14256] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:01:31 +0200] [14256] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:01:32 +0200] [14256] [INFO] [services.auth_service] AuthService: Create session
[2023-04-05 14:01:32 +0200] [14256] [TRACE] [services.auth_service] AuthService: Create session with user: be5bbb5a-42aa-43a8-a98d-04a4c310b61a
[2023-04-05 14:01:32 +0200] [14256] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-05 14:01:32 +0200] [14256] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('be5bbb5a-42aa-43a8-a98d-04a4c310b61a') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 5, 12, 6, 32, 179664) refresh_expire_time=datetime.datetime(2023, 4, 7, 12, 1, 32, 179832) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2OTYzOTIsInN1YiI6ImFkbWluIn0.vi8uavdQG-Rj4OchwwTpN0Oy1Y0pphrfmQvU66RhVsE' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4Njg4OTIsInN1YiI6ImFkbWluIn0.f5JQQLpSG8N2KP-5vw2Tg5QnQlUYDYHh8f6FpqSp_oI' blocked=False is_active=True
[2023-04-05 14:01:32 +0200] [14256] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('2111e39e-c39d-4948-8dbf-285acfc6c89b'), 'user_id': UUID('be5bbb5a-42aa-43a8-a98d-04a4c310b61a'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2OTYzOTIsInN1YiI6ImFkbWluIn0.vi8uavdQG-Rj4OchwwTpN0Oy1Y0pphrfmQvU66RhVsE', 'access_expire_time': datetime.datetime(2023, 4, 5, 12, 6, 32, 179664), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4Njg4OTIsInN1YiI6ImFkbWluIn0.f5JQQLpSG8N2KP-5vw2Tg5QnQlUYDYHh8f6FpqSp_oI', 'refresh_expire_time': datetime.datetime(2023, 4, 7, 12, 1, 32, 179832), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 5, 12, 1, 32, 182517), 'updated_at': datetime.datetime(2023, 4, 5, 12, 1, 32, 182522)}
[2023-04-05 14:01:37 +0200] [14256] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:01:37 +0200] [14256] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:01:37 +0200] [14256] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:01:37 +0200] [14256] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:01:37 +0200] [14256] [INFO] [services.teacher_service] TeacherService: Create teachers
[2023-04-05 14:01:37 +0200] [14256] [TRACE] [services.teacher_service] TeacherService: Register teachers with passed data [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date='28-02-2002'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date='28-02-2002')]
[2023-04-05 14:01:37 +0200] [14256] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string1' second_name='string1' last_name='string' birth_date='28-02-2002'
[2023-04-05 14:01:37 +0200] [14256] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-05 14:01:37 +0200] [14256] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-05 14:01:37 +0200] [14256] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-05 14:01:37 +0200] [14256] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string3' second_name=None last_name='string3' birth_date='28-02-2002'
[2023-04-05 14:01:37 +0200] [14256] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-05 14:01:37 +0200] [14256] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-05 14:01:37 +0200] [14256] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-05 14:01:37 +0200] [14256] [DEBUG] [services.teacher_service] TeacherService: Teachers to be registered after check: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='si6i-_g-_X8s_w'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='6N7zAWVDYVymGQ')]
[2023-04-05 14:01:37 +0200] [14256] [INFO] [db.dao.base_dao] TeacherModel DAO: Create db entry
[2023-04-05 14:01:37 +0200] [14256] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed for creation: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='si6i-_g-_X8s_w'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='6N7zAWVDYVymGQ')]
[2023-04-05 14:01:40 +0200] [14256] [DEBUG] [db.dao.base_dao] TeacherModel DAO: Created entries in database: [{'id': UUID('1a1d323e-b375-4797-a861-c6042e43174a'), 'registration_token': 'si6i-_g-_X8s_w', 'registered_user': False, 'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 5, 12, 1, 37, 480060), 'updated_at': datetime.datetime(2023, 4, 5, 12, 1, 37, 480064), 'deleted_at': None}, {'id': UUID('e1c8f1d0-d715-48a1-a108-483e59d96a95'), 'registration_token': '6N7zAWVDYVymGQ', 'registered_user': False, 'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 5, 12, 1, 39, 994071), 'updated_at': datetime.datetime(2023, 4, 5, 12, 1, 39, 994076), 'deleted_at': None}]
[2023-04-05 14:01:40 +0200] [14256] [DEBUG] [services.teacher_service] TeacherService: Received the answer from database: [<db.models.TeacherModel.TeacherModel object at 0x7f1c691b6280>, <db.models.TeacherModel.TeacherModel object at 0x7f1c65b832e0>]
[2023-04-05 14:02:00 +0200] [14256] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:02:00 +0200] [14256] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:02:00 +0200] [14256] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:02:00 +0200] [14256] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:02:00 +0200] [14256] [INFO] [services.module_service] ModuleService: Create module
[2023-04-05 14:02:00 +0200] [14256] [TRACE] [services.module_service] ModuleService: Create module with passed data module_name='module_1' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-05 14:02:00 +0200] [14256] [INFO] [services.module_service] ModuleService: Check if module with same parameters exists.
[2023-04-05 14:02:00 +0200] [14256] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-05 14:02:00 +0200] [14256] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'module_name': 'module_1', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-05 14:02:00 +0200] [14256] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-05 14:02:00 +0200] [14256] [INFO] [db.dao.base_dao] ModuleModel DAO: Create db entry
[2023-04-05 14:02:00 +0200] [14256] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed for creation: module_name='module_1' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-05 14:02:00 +0200] [14256] [DEBUG] [db.dao.base_dao] ModuleModel DAO: Created entry in database: {'id': UUID('c7cd6563-93ff-4fb9-82d1-3b2f2a69e3b6'), 'module_name': 'module_1', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-05 14:02:20 +0200] [14256] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:02:20 +0200] [14256] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:02:20 +0200] [14256] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:02:20 +0200] [14256] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:02:20 +0200] [14256] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-05 14:02:20 +0200] [14256] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: 1a1d323e-b375-4797-a861-c6042e43174a - modules: modules_id=['c7cd6563-93ff-4fb9-82d1-3b2f2a69e3b6']
[2023-04-05 14:02:20 +0200] [14256] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-05 14:02:20 +0200] [14256] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: modules_id=['c7cd6563-93ff-4fb9-82d1-3b2f2a69e3b6']
[2023-04-05 14:03:44 +0200] [14385] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-05 14:03:44 +0200] [14385] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$HOX/enaxSk.Lw1XlF1RfO.OXYhEHwrCWDe5XpmbUQDC8AeTOmQEZC' email='userrrr@user' id=None
[2023-04-05 14:03:44 +0200] [14385] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('670e1157-a010-48ee-a9d5-c1472065350d'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$HOX/enaxSk.Lw1XlF1RfO.OXYhEHwrCWDe5XpmbUQDC8AeTOmQEZC', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 5, 12, 3, 44, 196823), 'updated_at': datetime.datetime(2023, 4, 5, 12, 3, 44, 196828)}
[2023-04-05 14:03:46 +0200] [14385] [INFO] [services.auth_service] AuthService: Login user
[2023-04-05 14:03:46 +0200] [14385] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-05 14:03:46 +0200] [14385] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:03:46 +0200] [14385] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:03:46 +0200] [14385] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:03:46 +0200] [14385] [INFO] [services.auth_service] AuthService: Create session
[2023-04-05 14:03:46 +0200] [14385] [TRACE] [services.auth_service] AuthService: Create session with user: 670e1157-a010-48ee-a9d5-c1472065350d
[2023-04-05 14:03:46 +0200] [14385] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-05 14:03:46 +0200] [14385] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('670e1157-a010-48ee-a9d5-c1472065350d') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 5, 12, 8, 46, 277400) refresh_expire_time=datetime.datetime(2023, 4, 7, 12, 3, 46, 277569) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2OTY1MjYsInN1YiI6ImFkbWluIn0.fZV-e33M_o-UIEn9nveCRGTeFV19X2OG-6kGat2sjQs' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NjkwMjYsInN1YiI6ImFkbWluIn0.dmft1udHNsPH-VRa1OiQySM9Q_jL87B4ojtdm8JIkso' blocked=False is_active=True
[2023-04-05 14:03:46 +0200] [14385] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('3d54cd80-00df-47ef-bda5-ec8916e49332'), 'user_id': UUID('670e1157-a010-48ee-a9d5-c1472065350d'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2OTY1MjYsInN1YiI6ImFkbWluIn0.fZV-e33M_o-UIEn9nveCRGTeFV19X2OG-6kGat2sjQs', 'access_expire_time': datetime.datetime(2023, 4, 5, 12, 8, 46, 277400), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NjkwMjYsInN1YiI6ImFkbWluIn0.dmft1udHNsPH-VRa1OiQySM9Q_jL87B4ojtdm8JIkso', 'refresh_expire_time': datetime.datetime(2023, 4, 7, 12, 3, 46, 277569), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 5, 12, 3, 46, 280657), 'updated_at': datetime.datetime(2023, 4, 5, 12, 3, 46, 280662)}
[2023-04-05 14:03:51 +0200] [14385] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:03:51 +0200] [14385] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:03:51 +0200] [14385] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:03:51 +0200] [14385] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:03:51 +0200] [14385] [INFO] [services.teacher_service] TeacherService: Create teachers
[2023-04-05 14:03:51 +0200] [14385] [TRACE] [services.teacher_service] TeacherService: Register teachers with passed data [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date='28-02-2002'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date='28-02-2002')]
[2023-04-05 14:03:51 +0200] [14385] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string1' second_name='string1' last_name='string' birth_date='28-02-2002'
[2023-04-05 14:03:51 +0200] [14385] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-05 14:03:51 +0200] [14385] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-05 14:03:51 +0200] [14385] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-05 14:03:51 +0200] [14385] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string3' second_name=None last_name='string3' birth_date='28-02-2002'
[2023-04-05 14:03:51 +0200] [14385] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-05 14:03:51 +0200] [14385] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-05 14:03:51 +0200] [14385] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-05 14:03:51 +0200] [14385] [DEBUG] [services.teacher_service] TeacherService: Teachers to be registered after check: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='5chbnfxxGRSNwA'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='geJwttdsGj1adg')]
[2023-04-05 14:03:51 +0200] [14385] [INFO] [db.dao.base_dao] TeacherModel DAO: Create db entry
[2023-04-05 14:03:51 +0200] [14385] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed for creation: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='5chbnfxxGRSNwA'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='geJwttdsGj1adg')]
[2023-04-05 14:03:54 +0200] [14385] [DEBUG] [db.dao.base_dao] TeacherModel DAO: Created entries in database: [{'id': UUID('a3c64748-da50-470d-b351-3fa6002f64df'), 'registration_token': '5chbnfxxGRSNwA', 'registered_user': False, 'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 5, 12, 3, 51, 809124), 'updated_at': datetime.datetime(2023, 4, 5, 12, 3, 51, 809128), 'deleted_at': None}, {'id': UUID('708ac2f0-dac6-495f-9cb8-0472c1300885'), 'registration_token': 'geJwttdsGj1adg', 'registered_user': False, 'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 5, 12, 3, 54, 359259), 'updated_at': datetime.datetime(2023, 4, 5, 12, 3, 54, 359265), 'deleted_at': None}]
[2023-04-05 14:03:54 +0200] [14385] [DEBUG] [services.teacher_service] TeacherService: Received the answer from database: [<db.models.TeacherModel.TeacherModel object at 0x7faf25c18be0>, <db.models.TeacherModel.TeacherModel object at 0x7faf25bf15e0>]
[2023-04-05 14:04:08 +0200] [14385] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:04:08 +0200] [14385] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:04:08 +0200] [14385] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:04:08 +0200] [14385] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:04:08 +0200] [14385] [INFO] [services.module_service] ModuleService: Create module
[2023-04-05 14:04:08 +0200] [14385] [TRACE] [services.module_service] ModuleService: Create module with passed data module_name='module_1' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-05 14:04:08 +0200] [14385] [INFO] [services.module_service] ModuleService: Check if module with same parameters exists.
[2023-04-05 14:04:08 +0200] [14385] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-05 14:04:08 +0200] [14385] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'module_name': 'module_1', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-05 14:04:08 +0200] [14385] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-05 14:04:08 +0200] [14385] [INFO] [db.dao.base_dao] ModuleModel DAO: Create db entry
[2023-04-05 14:04:08 +0200] [14385] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed for creation: module_name='module_1' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-05 14:04:08 +0200] [14385] [DEBUG] [db.dao.base_dao] ModuleModel DAO: Created entry in database: {'id': UUID('9cfa6b74-96f6-49d2-ba83-88899fe8b591'), 'module_name': 'module_1', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-05 14:04:23 +0200] [14385] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:04:23 +0200] [14385] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:04:23 +0200] [14385] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:04:23 +0200] [14385] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:04:23 +0200] [14385] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-05 14:04:23 +0200] [14385] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: a3c64748-da50-470d-b351-3fa6002f64df - modules: modules_id=['9cfa6b74-96f6-49d2-ba83-88899fe8b591']
[2023-04-05 14:04:23 +0200] [14385] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-05 14:04:23 +0200] [14385] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: modules_id=['9cfa6b74-96f6-49d2-ba83-88899fe8b591']
[2023-04-05 14:05:23 +0200] [14530] [INFO] [db.dao.base_dao] UserModel DAO: Create db entry
[2023-04-05 14:05:23 +0200] [14530] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed for creation: role='admin' login='admin' password='$2b$12$NH3pi1mBxyVNtANx2czSnO5NIZFsaq1jnhEN45iCln0SJCiwCJs7i' email='userrrr@user' id=None
[2023-04-05 14:05:23 +0200] [14530] [DEBUG] [db.dao.base_dao] UserModel DAO: Created entry in database: {'id': UUID('d890c287-300f-43bb-8cb4-e5d468df5e64'), 'login': 'admin', 'email': 'userrrr@user', 'password': '$2b$12$NH3pi1mBxyVNtANx2czSnO5NIZFsaq1jnhEN45iCln0SJCiwCJs7i', 'role': 'admin', 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 5, 12, 5, 23, 594632), 'updated_at': datetime.datetime(2023, 4, 5, 12, 5, 23, 594637)}
[2023-04-05 14:05:25 +0200] [14530] [INFO] [services.auth_service] AuthService: Login user
[2023-04-05 14:05:25 +0200] [14530] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-05 14:05:25 +0200] [14530] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:05:25 +0200] [14530] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:05:25 +0200] [14530] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:05:25 +0200] [14530] [INFO] [services.auth_service] AuthService: Create session
[2023-04-05 14:05:25 +0200] [14530] [TRACE] [services.auth_service] AuthService: Create session with user: d890c287-300f-43bb-8cb4-e5d468df5e64
[2023-04-05 14:05:25 +0200] [14530] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-05 14:05:25 +0200] [14530] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('d890c287-300f-43bb-8cb4-e5d468df5e64') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 5, 12, 10, 25, 865436) refresh_expire_time=datetime.datetime(2023, 4, 7, 12, 5, 25, 865618) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2OTY2MjUsInN1YiI6ImFkbWluIn0.PChV5vil6hVyG-BHSwCDEbyUnMNGWbPSqqvQg5fpnkA' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NjkxMjUsInN1YiI6ImFkbWluIn0.QQWMXYhkwXeG0i5I7ngo_6JGYmVLRMfOfw4Kf2qhUzg' blocked=False is_active=True
[2023-04-05 14:05:25 +0200] [14530] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('5cf775b5-813f-4945-95e9-bcbeca35f83d'), 'user_id': UUID('d890c287-300f-43bb-8cb4-e5d468df5e64'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2OTY2MjUsInN1YiI6ImFkbWluIn0.PChV5vil6hVyG-BHSwCDEbyUnMNGWbPSqqvQg5fpnkA', 'access_expire_time': datetime.datetime(2023, 4, 5, 12, 10, 25, 865436), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NjkxMjUsInN1YiI6ImFkbWluIn0.QQWMXYhkwXeG0i5I7ngo_6JGYmVLRMfOfw4Kf2qhUzg', 'refresh_expire_time': datetime.datetime(2023, 4, 7, 12, 5, 25, 865618), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 5, 12, 5, 25, 868506), 'updated_at': datetime.datetime(2023, 4, 5, 12, 5, 25, 868511)}
[2023-04-05 14:05:28 +0200] [14530] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:05:28 +0200] [14530] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:05:28 +0200] [14530] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:05:29 +0200] [14530] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:05:29 +0200] [14530] [INFO] [services.teacher_service] TeacherService: Create teachers
[2023-04-05 14:05:29 +0200] [14530] [TRACE] [services.teacher_service] TeacherService: Register teachers with passed data [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date='28-02-2002'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date='28-02-2002')]
[2023-04-05 14:05:29 +0200] [14530] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string1' second_name='string1' last_name='string' birth_date='28-02-2002'
[2023-04-05 14:05:29 +0200] [14530] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-05 14:05:29 +0200] [14530] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-05 14:05:29 +0200] [14530] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-05 14:05:29 +0200] [14530] [DEBUG] [services.teacher_service] TeacherService: Check if teacher already exists in db and is not deleted: first_name='string3' second_name=None last_name='string3' birth_date='28-02-2002'
[2023-04-05 14:05:29 +0200] [14530] [INFO] [db.dao.base_dao] TeacherModel DAO: Get all db entries by parameters
[2023-04-05 14:05:29 +0200] [14530] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed to filter: skip: 0, limit: None, params: {'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0)}
[2023-04-05 14:05:29 +0200] [14530] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-05 14:05:29 +0200] [14530] [DEBUG] [services.teacher_service] TeacherService: Teachers to be registered after check: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='PGq3bUiEpk2EQQ'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='-Yf005cXNy8Vbg')]
[2023-04-05 14:05:29 +0200] [14530] [INFO] [db.dao.base_dao] TeacherModel DAO: Create db entry
[2023-04-05 14:05:29 +0200] [14530] [TRACE] [db.dao.base_dao] TeacherModel DAO: Data passed for creation: [TeacherCreateDTO(first_name='string1', second_name='string1', last_name='string', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='PGq3bUiEpk2EQQ'), TeacherCreateDTO(first_name='string3', second_name=None, last_name='string3', birth_date=datetime.datetime(2002, 2, 28, 0, 0), registration_token='-Yf005cXNy8Vbg')]
[2023-04-05 14:05:30 +0200] [14530] [DEBUG] [db.dao.base_dao] TeacherModel DAO: Created entries in database: [{'id': UUID('e86be0c2-0f16-4b3a-9c2a-ad2aba954b27'), 'registration_token': 'PGq3bUiEpk2EQQ', 'registered_user': False, 'first_name': 'string1', 'second_name': 'string1', 'last_name': 'string', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 5, 12, 5, 29, 17482), 'updated_at': datetime.datetime(2023, 4, 5, 12, 5, 29, 17486), 'deleted_at': None}, {'id': UUID('bd4219e8-2a0e-4a93-9fd3-ddb5b97455b5'), 'registration_token': '-Yf005cXNy8Vbg', 'registered_user': False, 'first_name': 'string3', 'second_name': None, 'last_name': 'string3', 'birth_date': datetime.datetime(2002, 2, 28, 0, 0), 'created_at': datetime.datetime(2023, 4, 5, 12, 5, 30, 375596), 'updated_at': datetime.datetime(2023, 4, 5, 12, 5, 30, 375601), 'deleted_at': None}]
[2023-04-05 14:05:30 +0200] [14530] [DEBUG] [services.teacher_service] TeacherService: Received the answer from database: [<db.models.TeacherModel.TeacherModel object at 0x7f8b05f991f0>, <db.models.TeacherModel.TeacherModel object at 0x7f8b05fe76d0>]
[2023-04-05 14:05:44 +0200] [14530] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:05:44 +0200] [14530] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:05:44 +0200] [14530] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:05:44 +0200] [14530] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:05:44 +0200] [14530] [INFO] [services.module_service] ModuleService: Create module
[2023-04-05 14:05:44 +0200] [14530] [TRACE] [services.module_service] ModuleService: Create module with passed data module_name='module_1' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-05 14:05:44 +0200] [14530] [INFO] [services.module_service] ModuleService: Check if module with same parameters exists.
[2023-04-05 14:05:44 +0200] [14530] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-05 14:05:44 +0200] [14530] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'module_name': 'module_1', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-05 14:05:44 +0200] [14530] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-05 14:05:44 +0200] [14530] [INFO] [db.dao.base_dao] ModuleModel DAO: Create db entry
[2023-04-05 14:05:44 +0200] [14530] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed for creation: module_name='module_1' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-05 14:05:44 +0200] [14530] [DEBUG] [db.dao.base_dao] ModuleModel DAO: Created entry in database: {'id': UUID('16024182-b590-4199-93a8-8d720470e9de'), 'module_name': 'module_1', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-05 14:05:55 +0200] [14530] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:05:55 +0200] [14530] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:05:55 +0200] [14530] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:05:55 +0200] [14530] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:05:55 +0200] [14530] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-05 14:05:55 +0200] [14530] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27 - modules: modules_id=['16024182-b590-4199-93a8-8d720470e9de']
[2023-04-05 14:05:55 +0200] [14530] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-05 14:05:55 +0200] [14530] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: modules_id=['16024182-b590-4199-93a8-8d720470e9de']
[2023-04-05 14:06:44 +0200] [14607] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:06:44 +0200] [14607] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:06:44 +0200] [14607] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:06:44 +0200] [14607] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:06:44 +0200] [14607] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-05 14:06:44 +0200] [14607] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27 - modules: modules_id=['16024182-b590-4199-93a8-8d720470e9de']
[2023-04-05 14:06:44 +0200] [14607] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-05 14:06:44 +0200] [14607] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: modules_id=['16024182-b590-4199-93a8-8d720470e9de']
[2023-04-05 14:07:27 +0200] [14660] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:07:27 +0200] [14660] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:07:27 +0200] [14660] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:07:27 +0200] [14660] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:07:27 +0200] [14660] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-05 14:07:27 +0200] [14660] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27 - modules: modules_id=['16024182-b590-4199-93a8-8d720470e9de']
[2023-04-05 14:07:27 +0200] [14660] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-05 14:07:27 +0200] [14660] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: modules_id=['16024182-b590-4199-93a8-8d720470e9de']
[2023-04-05 14:08:33 +0200] [14713] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:08:33 +0200] [14713] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:08:33 +0200] [14713] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:08:33 +0200] [14713] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:08:33 +0200] [14713] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-05 14:08:33 +0200] [14713] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27 - modules: modules_id=['16024182-b590-4199-93a8-8d720470e9de']
[2023-04-05 14:08:33 +0200] [14713] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-05 14:08:33 +0200] [14713] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: modules_id=['16024182-b590-4199-93a8-8d720470e9de']
[2023-04-05 14:08:42 +0200] [14713] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:08:42 +0200] [14713] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:08:42 +0200] [14713] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:08:42 +0200] [14713] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:08:42 +0200] [14713] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-05 14:08:42 +0200] [14713] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27 - modules: modules_id=['16024182-b590-4199-93a8-8d720470e9de']
[2023-04-05 14:08:42 +0200] [14713] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-05 14:08:42 +0200] [14713] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: modules_id=['16024182-b590-4199-93a8-8d720470e9de']
[2023-04-05 14:09:29 +0200] [14760] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:09:29 +0200] [14760] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:09:29 +0200] [14760] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:09:29 +0200] [14760] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:09:29 +0200] [14760] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-05 14:09:29 +0200] [14760] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27 - modules: modules_id=['16024182-b590-4199-93a8-8d720470e9de']
[2023-04-05 14:09:29 +0200] [14760] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-05 14:09:29 +0200] [14760] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: modules_id=['16024182-b590-4199-93a8-8d720470e9de']
[2023-04-05 14:12:58 +0200] [14919] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:13:02 +0200] [14919] [INFO] [services.auth_service] AuthService: Login user
[2023-04-05 14:13:02 +0200] [14919] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-05 14:13:02 +0200] [14919] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:13:02 +0200] [14919] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:13:02 +0200] [14919] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:13:02 +0200] [14919] [INFO] [services.auth_service] AuthService: Create session
[2023-04-05 14:13:02 +0200] [14919] [TRACE] [services.auth_service] AuthService: Create session with user: d890c287-300f-43bb-8cb4-e5d468df5e64
[2023-04-05 14:13:02 +0200] [14919] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-05 14:13:02 +0200] [14919] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('d890c287-300f-43bb-8cb4-e5d468df5e64') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 5, 12, 18, 2, 673742) refresh_expire_time=datetime.datetime(2023, 4, 7, 12, 13, 2, 673895) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2OTcwODIsInN1YiI6ImFkbWluIn0.qb975zH9tnuKEPSaz_Wr6fz3fDmWY0lDh5w4JhANhp4' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4Njk1ODIsInN1YiI6ImFkbWluIn0.lqH18tSAErSyHSjDeencXX2bs-c7K209No22XkWyi2E' blocked=False is_active=True
[2023-04-05 14:13:02 +0200] [14919] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('413d3584-7339-459b-9e32-8d19159cfeb5'), 'user_id': UUID('d890c287-300f-43bb-8cb4-e5d468df5e64'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2OTcwODIsInN1YiI6ImFkbWluIn0.qb975zH9tnuKEPSaz_Wr6fz3fDmWY0lDh5w4JhANhp4', 'access_expire_time': datetime.datetime(2023, 4, 5, 12, 18, 2, 673742), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4Njk1ODIsInN1YiI6ImFkbWluIn0.lqH18tSAErSyHSjDeencXX2bs-c7K209No22XkWyi2E', 'refresh_expire_time': datetime.datetime(2023, 4, 7, 12, 13, 2, 673895), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 5, 12, 13, 2, 677940), 'updated_at': datetime.datetime(2023, 4, 5, 12, 13, 2, 677946)}
[2023-04-05 14:13:06 +0200] [14919] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:13:06 +0200] [14919] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:13:06 +0200] [14919] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:13:06 +0200] [14919] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:13:06 +0200] [14919] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-05 14:13:06 +0200] [14919] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27 - modules: modules_id=['16024182-b590-4199-93a8-8d720470e9de']
[2023-04-05 14:13:06 +0200] [14919] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-05 14:13:06 +0200] [14919] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: modules_id=['16024182-b590-4199-93a8-8d720470e9de']
[2023-04-05 14:14:40 +0200] [14996] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:14:40 +0200] [14996] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:14:40 +0200] [14996] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:14:40 +0200] [14996] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:14:40 +0200] [14996] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-05 14:14:40 +0200] [14996] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27 - modules: modules_id=['16024182-b590-4199-93a8-8d720470e9de']
[2023-04-05 14:14:40 +0200] [14996] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-05 14:14:40 +0200] [14996] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: modules_id=['16024182-b590-4199-93a8-8d720470e9de']
[2023-04-05 14:17:24 +0200] [15243] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:17:24 +0200] [15243] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:17:24 +0200] [15243] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:17:24 +0200] [15243] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:17:24 +0200] [15243] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-05 14:17:24 +0200] [15243] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27 - modules: modules_id=['16024182-b590-4199-93a8-8d720470e9de']
[2023-04-05 14:17:24 +0200] [15243] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-05 14:17:24 +0200] [15243] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: modules_id=['16024182-b590-4199-93a8-8d720470e9de']
[2023-04-05 14:20:04 +0200] [15450] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:20:08 +0200] [15450] [INFO] [services.auth_service] AuthService: Login user
[2023-04-05 14:20:08 +0200] [15450] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-05 14:20:08 +0200] [15450] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:20:08 +0200] [15450] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:20:08 +0200] [15450] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:20:08 +0200] [15450] [INFO] [services.auth_service] AuthService: Create session
[2023-04-05 14:20:08 +0200] [15450] [TRACE] [services.auth_service] AuthService: Create session with user: d890c287-300f-43bb-8cb4-e5d468df5e64
[2023-04-05 14:20:08 +0200] [15450] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-05 14:20:08 +0200] [15450] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('d890c287-300f-43bb-8cb4-e5d468df5e64') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 5, 12, 25, 8, 352145) refresh_expire_time=datetime.datetime(2023, 4, 7, 12, 20, 8, 352300) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2OTc1MDgsInN1YiI6ImFkbWluIn0.qi5dKXDiKnE6cNiQ__CXkZ64FkADsWbO9XHrHy5RA88' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NzAwMDgsInN1YiI6ImFkbWluIn0.rXMg39R0_yDNel4OQ-8K1FtfMo30oaWxjBADLSqW62A' blocked=False is_active=True
[2023-04-05 14:20:08 +0200] [15450] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('9a5a0488-b15a-41d7-aab2-1332ddcff84f'), 'user_id': UUID('d890c287-300f-43bb-8cb4-e5d468df5e64'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2OTc1MDgsInN1YiI6ImFkbWluIn0.qi5dKXDiKnE6cNiQ__CXkZ64FkADsWbO9XHrHy5RA88', 'access_expire_time': datetime.datetime(2023, 4, 5, 12, 25, 8, 352145), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NzAwMDgsInN1YiI6ImFkbWluIn0.rXMg39R0_yDNel4OQ-8K1FtfMo30oaWxjBADLSqW62A', 'refresh_expire_time': datetime.datetime(2023, 4, 7, 12, 20, 8, 352300), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 5, 12, 20, 8, 356650), 'updated_at': datetime.datetime(2023, 4, 5, 12, 20, 8, 356657)}
[2023-04-05 14:20:10 +0200] [15450] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:20:10 +0200] [15450] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:20:10 +0200] [15450] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:20:10 +0200] [15450] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:20:10 +0200] [15450] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-05 14:20:10 +0200] [15450] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27 - modules: modules_id=['16024182-b590-4199-93a8-8d720470e9de']
[2023-04-05 14:20:10 +0200] [15450] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-05 14:20:10 +0200] [15450] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: modules_id=['16024182-b590-4199-93a8-8d720470e9de']
[2023-04-05 14:21:13 +0200] [15534] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:21:13 +0200] [15534] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:21:13 +0200] [15534] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:21:13 +0200] [15534] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:21:13 +0200] [15534] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-05 14:21:13 +0200] [15534] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27 - modules: modules_id=['16024182-b590-4199-93a8-8d720470e9de']
[2023-04-05 14:21:13 +0200] [15534] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-05 14:21:13 +0200] [15534] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: modules_id=['16024182-b590-4199-93a8-8d720470e9de']
[2023-04-05 14:22:29 +0200] [15605] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:22:29 +0200] [15605] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:22:29 +0200] [15605] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:22:29 +0200] [15605] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:22:29 +0200] [15605] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-05 14:23:20 +0200] [15656] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:23:20 +0200] [15656] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:23:20 +0200] [15656] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:23:20 +0200] [15656] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:23:20 +0200] [15656] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-05 14:23:20 +0200] [15656] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27 - data: modules_id=['16024182-b590-4199-93a8-8d720470e9de']
[2023-04-05 14:23:20 +0200] [15656] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-05 14:23:20 +0200] [15656] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: ['16024182-b590-4199-93a8-8d720470e9de']
[2023-04-05 14:24:20 +0200] [15707] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:24:20 +0200] [15707] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:24:20 +0200] [15707] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:24:20 +0200] [15707] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:24:20 +0200] [15707] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-05 14:24:20 +0200] [15707] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27 - data: modules_id=['16024182-b590-4199-93a8-8d720470e9de']
[2023-04-05 14:24:20 +0200] [15707] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-05 14:24:20 +0200] [15707] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: ['16024182-b590-4199-93a8-8d720470e9de']
[2023-04-05 14:25:24 +0200] [15754] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:25:32 +0200] [15754] [INFO] [services.auth_service] AuthService: Login user
[2023-04-05 14:25:32 +0200] [15754] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-05 14:25:32 +0200] [15754] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:25:32 +0200] [15754] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:25:32 +0200] [15754] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:25:33 +0200] [15754] [INFO] [services.auth_service] AuthService: Create session
[2023-04-05 14:25:33 +0200] [15754] [TRACE] [services.auth_service] AuthService: Create session with user: d890c287-300f-43bb-8cb4-e5d468df5e64
[2023-04-05 14:25:33 +0200] [15754] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-05 14:25:33 +0200] [15754] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('d890c287-300f-43bb-8cb4-e5d468df5e64') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 5, 12, 30, 33, 101016) refresh_expire_time=datetime.datetime(2023, 4, 7, 12, 25, 33, 101170) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2OTc4MzMsInN1YiI6ImFkbWluIn0.6m0uLbReDYn90cP6dul3no5flR0OlH-B3v8dV4BwcvM' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NzAzMzMsInN1YiI6ImFkbWluIn0.Rss6A7HnvdvcDrxU71Sxs1K4aGfvqdvSogeU5ESPp3U' blocked=False is_active=True
[2023-04-05 14:25:33 +0200] [15754] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('39513452-cac4-41a8-a1e1-e0b24d0468a3'), 'user_id': UUID('d890c287-300f-43bb-8cb4-e5d468df5e64'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2OTc4MzMsInN1YiI6ImFkbWluIn0.6m0uLbReDYn90cP6dul3no5flR0OlH-B3v8dV4BwcvM', 'access_expire_time': datetime.datetime(2023, 4, 5, 12, 30, 33, 101016), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NzAzMzMsInN1YiI6ImFkbWluIn0.Rss6A7HnvdvcDrxU71Sxs1K4aGfvqdvSogeU5ESPp3U', 'refresh_expire_time': datetime.datetime(2023, 4, 7, 12, 25, 33, 101170), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 5, 12, 25, 33, 104404), 'updated_at': datetime.datetime(2023, 4, 5, 12, 25, 33, 104409)}
[2023-04-05 14:25:35 +0200] [15754] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:25:35 +0200] [15754] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:25:35 +0200] [15754] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:25:35 +0200] [15754] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:25:35 +0200] [15754] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-05 14:25:35 +0200] [15754] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27 - data: modules_id=['16024182-b590-4199-93a8-8d720470e9de']
[2023-04-05 14:25:35 +0200] [15754] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-05 14:25:35 +0200] [15754] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: ['16024182-b590-4199-93a8-8d720470e9de']
[2023-04-05 14:27:09 +0200] [15855] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:27:09 +0200] [15855] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:27:09 +0200] [15855] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:27:09 +0200] [15855] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:27:09 +0200] [15855] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-05 14:27:09 +0200] [15855] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27 - data: modules_id=['16024182-b590-4199-93a8-8d720470e9de']
[2023-04-05 14:27:09 +0200] [15855] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-05 14:27:09 +0200] [15855] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: ['16024182-b590-4199-93a8-8d720470e9de']
[2023-04-05 14:27:50 +0200] [15889] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:27:50 +0200] [15889] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:27:50 +0200] [15889] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:27:50 +0200] [15889] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:27:50 +0200] [15889] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-05 14:27:50 +0200] [15889] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27 - data: modules_id=['16024182-b590-4199-93a8-8d720470e9de']
[2023-04-05 14:27:50 +0200] [15889] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-05 14:27:50 +0200] [15889] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: ['16024182-b590-4199-93a8-8d720470e9de']
[2023-04-05 14:28:06 +0200] [15889] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:28:06 +0200] [15889] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:28:06 +0200] [15889] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:28:06 +0200] [15889] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:28:06 +0200] [15889] [INFO] [services.module_service] ModuleService: Create module
[2023-04-05 14:28:06 +0200] [15889] [TRACE] [services.module_service] ModuleService: Create module with passed data module_name='module_3' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-05 14:28:06 +0200] [15889] [INFO] [services.module_service] ModuleService: Check if module with same parameters exists.
[2023-04-05 14:28:06 +0200] [15889] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-05 14:28:06 +0200] [15889] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'module_name': 'module_3', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-05 14:28:06 +0200] [15889] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-05 14:28:06 +0200] [15889] [INFO] [db.dao.base_dao] ModuleModel DAO: Create db entry
[2023-04-05 14:28:06 +0200] [15889] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed for creation: module_name='module_3' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-05 14:28:06 +0200] [15889] [DEBUG] [db.dao.base_dao] ModuleModel DAO: Created entry in database: {'id': UUID('cafb88f4-3bb9-4765-b0ea-8baed53f1ca1'), 'module_name': 'module_3', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-05 14:28:16 +0200] [15889] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:28:16 +0200] [15889] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:28:16 +0200] [15889] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:28:16 +0200] [15889] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:28:16 +0200] [15889] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-05 14:28:16 +0200] [15889] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27 - data: modules_id=['cafb88f4-3bb9-4765-b0ea-8baed53f1ca1']
[2023-04-05 14:28:16 +0200] [15889] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-05 14:28:16 +0200] [15889] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: ['cafb88f4-3bb9-4765-b0ea-8baed53f1ca1']
[2023-04-05 14:28:38 +0200] [15889] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:28:38 +0200] [15889] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:28:38 +0200] [15889] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:28:38 +0200] [15889] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:28:38 +0200] [15889] [INFO] [services.module_service] ModuleService: Get module by id: cafb88f4-3bb9-4765-b0ea-8baed53f1ca1
[2023-04-05 14:28:38 +0200] [15889] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-05 14:28:38 +0200] [15889] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': 'cafb88f4-3bb9-4765-b0ea-8baed53f1ca1'}
[2023-04-05 14:28:38 +0200] [15889] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-05 14:59:13 +0200] [18161] [INFO] [services.auth_service] AuthService: Login user
[2023-04-05 14:59:13 +0200] [18161] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-05 14:59:13 +0200] [18161] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:59:13 +0200] [18161] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:59:13 +0200] [18161] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:59:13 +0200] [18161] [INFO] [services.auth_service] AuthService: Create session
[2023-04-05 14:59:13 +0200] [18161] [TRACE] [services.auth_service] AuthService: Create session with user: d890c287-300f-43bb-8cb4-e5d468df5e64
[2023-04-05 14:59:13 +0200] [18161] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-05 14:59:13 +0200] [18161] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('d890c287-300f-43bb-8cb4-e5d468df5e64') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 5, 13, 4, 13, 628828) refresh_expire_time=datetime.datetime(2023, 4, 7, 12, 59, 13, 628991) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2OTk4NTMsInN1YiI6ImFkbWluIn0.vIg-eOSyssbNiAwi0WKD_mhI9-Eh-toUtLO-Lmj2H6Y' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NzIzNTMsInN1YiI6ImFkbWluIn0.lzhH5EkWPjma1HjKAb41gbZl8dwQHTtrmTyIx5nK6S8' blocked=False is_active=True
[2023-04-05 14:59:13 +0200] [18161] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('81e592d7-07c1-4f67-82f9-a8193577d75a'), 'user_id': UUID('d890c287-300f-43bb-8cb4-e5d468df5e64'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA2OTk4NTMsInN1YiI6ImFkbWluIn0.vIg-eOSyssbNiAwi0WKD_mhI9-Eh-toUtLO-Lmj2H6Y', 'access_expire_time': datetime.datetime(2023, 4, 5, 13, 4, 13, 628828), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NzIzNTMsInN1YiI6ImFkbWluIn0.lzhH5EkWPjma1HjKAb41gbZl8dwQHTtrmTyIx5nK6S8', 'refresh_expire_time': datetime.datetime(2023, 4, 7, 12, 59, 13, 628991), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 5, 12, 59, 13, 632207), 'updated_at': datetime.datetime(2023, 4, 5, 12, 59, 13, 632211)}
[2023-04-05 14:59:19 +0200] [18161] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:59:19 +0200] [18161] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:59:19 +0200] [18161] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:59:19 +0200] [18161] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:59:19 +0200] [18161] [INFO] [services.module_service] ModuleService: Create module
[2023-04-05 14:59:19 +0200] [18161] [TRACE] [services.module_service] ModuleService: Create module with passed data module_name='module_4' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-05 14:59:19 +0200] [18161] [INFO] [services.module_service] ModuleService: Check if module with same parameters exists.
[2023-04-05 14:59:19 +0200] [18161] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-05 14:59:19 +0200] [18161] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'module_name': 'module_4', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-05 14:59:20 +0200] [18161] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-05 14:59:20 +0200] [18161] [INFO] [db.dao.base_dao] ModuleModel DAO: Create db entry
[2023-04-05 14:59:20 +0200] [18161] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed for creation: module_name='module_4' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-05 14:59:21 +0200] [18161] [DEBUG] [db.dao.base_dao] ModuleModel DAO: Created entry in database: {'id': UUID('56308c92-78a6-4b5f-9a87-a30e4a5c7e16'), 'module_name': 'module_4', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-05 14:59:33 +0200] [18161] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 14:59:33 +0200] [18161] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 14:59:33 +0200] [18161] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 14:59:33 +0200] [18161] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 14:59:33 +0200] [18161] [INFO] [services.module_service] ModuleService: Get module by id: 56308c92-78a6-4b5f-9a87-a30e4a5c7e16
[2023-04-05 14:59:33 +0200] [18161] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-05 14:59:33 +0200] [18161] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': '56308c92-78a6-4b5f-9a87-a30e4a5c7e16'}
[2023-04-05 14:59:33 +0200] [18161] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-05 14:59:33 +0200] [18161] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-05 14:59:33 +0200] [18161] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27
[2023-04-05 14:59:33 +0200] [18161] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-05 14:59:33 +0200] [18161] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: [<db.models.ModuleModel.ModuleModel object at 0x7f44fff73ee0>]
[2023-04-05 15:00:53 +0200] [18274] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 15:00:53 +0200] [18274] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 15:00:53 +0200] [18274] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 15:00:53 +0200] [18274] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 15:00:53 +0200] [18274] [INFO] [services.module_service] ModuleService: Get module by id: 56308c92-78a6-4b5f-9a87-a30e4a5c7e16
[2023-04-05 15:00:53 +0200] [18274] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-05 15:00:53 +0200] [18274] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': '56308c92-78a6-4b5f-9a87-a30e4a5c7e16'}
[2023-04-05 15:00:56 +0200] [18274] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-05 15:00:56 +0200] [18274] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-05 15:00:56 +0200] [18274] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27
[2023-04-05 15:00:56 +0200] [18274] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-05 15:00:56 +0200] [18274] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: [<db.models.ModuleModel.ModuleModel object at 0x7f97eccaf6a0>]
[2023-04-05 15:05:34 +0200] [18419] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 15:05:37 +0200] [18419] [INFO] [services.auth_service] AuthService: Login user
[2023-04-05 15:05:37 +0200] [18419] [TRACE] [services.auth_service] AuthService: Login user: admin
[2023-04-05 15:05:37 +0200] [18419] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 15:05:37 +0200] [18419] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 15:05:37 +0200] [18419] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 15:05:38 +0200] [18419] [INFO] [services.auth_service] AuthService: Create session
[2023-04-05 15:05:38 +0200] [18419] [TRACE] [services.auth_service] AuthService: Create session with user: d890c287-300f-43bb-8cb4-e5d468df5e64
[2023-04-05 15:05:38 +0200] [18419] [INFO] [db.dao.base_dao] SessionModel DAO: Create db entry
[2023-04-05 15:05:38 +0200] [18419] [TRACE] [db.dao.base_dao] SessionModel DAO: Data passed for creation: user_id=UUID('d890c287-300f-43bb-8cb4-e5d468df5e64') login='admin' role='admin' access_expire_time=datetime.datetime(2023, 4, 5, 13, 10, 38, 225204) refresh_expire_time=datetime.datetime(2023, 4, 7, 13, 5, 38, 225328) access_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDAyMzgsInN1YiI6ImFkbWluIn0.y6Y2a6JTB_D-8FeekGNI2fXGz39F6qvP-PKKchA3zLo' refresh_token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NzI3MzgsInN1YiI6ImFkbWluIn0.Up4smNSBGQQK0lAjwOaOMGgVtSsRR88JMgxRMBw1plw' blocked=False is_active=True
[2023-04-05 15:05:38 +0200] [18419] [DEBUG] [db.dao.base_dao] SessionModel DAO: Created entry in database: {'id': UUID('e4fc76c9-fae0-4e8d-9f74-1fc16dff0656'), 'user_id': UUID('d890c287-300f-43bb-8cb4-e5d468df5e64'), 'login': 'admin', 'role': 'admin', 'access_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA3MDAyMzgsInN1YiI6ImFkbWluIn0.y6Y2a6JTB_D-8FeekGNI2fXGz39F6qvP-PKKchA3zLo', 'access_expire_time': datetime.datetime(2023, 4, 5, 13, 10, 38, 225204), 'refresh_token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2ODA4NzI3MzgsInN1YiI6ImFkbWluIn0.Up4smNSBGQQK0lAjwOaOMGgVtSsRR88JMgxRMBw1plw', 'refresh_expire_time': datetime.datetime(2023, 4, 7, 13, 5, 38, 225328), 'blocked': False, 'is_active': True, 'created_at': datetime.datetime(2023, 4, 5, 13, 5, 38, 228949), 'updated_at': datetime.datetime(2023, 4, 5, 13, 5, 38, 228955)}
[2023-04-05 15:05:40 +0200] [18419] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 15:05:40 +0200] [18419] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 15:05:40 +0200] [18419] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 15:05:40 +0200] [18419] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 15:05:40 +0200] [18419] [INFO] [services.module_service] ModuleService: Get module by id: 56308c92-78a6-4b5f-9a87-a30e4a5c7e16
[2023-04-05 15:05:40 +0200] [18419] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-05 15:05:40 +0200] [18419] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': '56308c92-78a6-4b5f-9a87-a30e4a5c7e16'}
[2023-04-05 15:05:43 +0200] [18419] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-05 15:05:43 +0200] [18419] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-05 15:05:43 +0200] [18419] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27
[2023-04-05 15:05:43 +0200] [18419] [INFO] [services.teacher_service] TeacherService: Get teacher by id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27
[2023-04-05 15:05:43 +0200] [18419] [INFO] [db.dao.base_dao] TeacherModel DAO: Get db entry by id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27
[2023-04-05 15:05:43 +0200] [18419] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-05 15:05:43 +0200] [18419] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-05 15:05:43 +0200] [18419] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: []
[2023-04-05 15:05:46 +0200] [18419] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 15:05:46 +0200] [18419] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 15:05:46 +0200] [18419] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 15:05:46 +0200] [18419] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 15:05:46 +0200] [18419] [INFO] [services.module_service] ModuleService: Get module by id: 56308c92-78a6-4b5f-9a87-a30e4a5c7e16
[2023-04-05 15:05:46 +0200] [18419] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-05 15:05:46 +0200] [18419] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': '56308c92-78a6-4b5f-9a87-a30e4a5c7e16'}
[2023-04-05 15:05:46 +0200] [18419] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-05 15:05:46 +0200] [18419] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-05 15:05:46 +0200] [18419] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27
[2023-04-05 15:05:46 +0200] [18419] [INFO] [services.teacher_service] TeacherService: Get teacher by id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27
[2023-04-05 15:05:46 +0200] [18419] [INFO] [db.dao.base_dao] TeacherModel DAO: Get db entry by id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27
[2023-04-05 15:05:46 +0200] [18419] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-05 15:05:46 +0200] [18419] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-05 15:05:46 +0200] [18419] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: []
[2023-04-05 15:07:40 +0200] [18521] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 15:07:40 +0200] [18521] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 15:07:40 +0200] [18521] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 15:07:40 +0200] [18521] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 15:07:40 +0200] [18521] [INFO] [services.module_service] ModuleService: Get module by id: 56308c92-78a6-4b5f-9a87-a30e4a5c7e16
[2023-04-05 15:07:40 +0200] [18521] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-05 15:07:40 +0200] [18521] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': '56308c92-78a6-4b5f-9a87-a30e4a5c7e16'}
[2023-04-05 15:07:43 +0200] [18521] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-05 15:07:43 +0200] [18521] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-05 15:07:43 +0200] [18521] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27
[2023-04-05 15:07:43 +0200] [18521] [INFO] [services.teacher_service] TeacherService: Get teacher by id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27
[2023-04-05 15:07:43 +0200] [18521] [INFO] [db.dao.base_dao] TeacherModel DAO: Get db entry by id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27
[2023-04-05 15:07:43 +0200] [18521] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-05 15:07:43 +0200] [18521] [TRACE] [services.teacher_service] TeacherService: Module module_4 is already in teacher's modules.
[2023-04-05 15:07:43 +0200] [18521] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-05 15:07:43 +0200] [18521] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: []
[2023-04-05 15:08:05 +0200] [18552] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 15:08:05 +0200] [18552] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 15:08:05 +0200] [18552] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 15:08:05 +0200] [18552] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 15:08:05 +0200] [18552] [INFO] [services.module_service] ModuleService: Get module by id: 56308c92-78a6-4b5f-9a87-a30e4a5c7e16
[2023-04-05 15:08:05 +0200] [18552] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-05 15:08:05 +0200] [18552] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': '56308c92-78a6-4b5f-9a87-a30e4a5c7e16'}
[2023-04-05 15:08:08 +0200] [18552] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-05 15:08:08 +0200] [18552] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-05 15:08:08 +0200] [18552] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27
[2023-04-05 15:08:08 +0200] [18552] [INFO] [services.teacher_service] TeacherService: Get teacher by id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27
[2023-04-05 15:08:08 +0200] [18552] [INFO] [db.dao.base_dao] TeacherModel DAO: Get db entry by id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27
[2023-04-05 15:08:08 +0200] [18552] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-05 15:08:08 +0200] [18552] [TRACE] [services.teacher_service] TeacherService: Module 56308c92-78a6-4b5f-9a87-a30e4a5c7e16 is already in teacher's modules.
[2023-04-05 15:08:08 +0200] [18552] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-05 15:08:08 +0200] [18552] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: []
[2023-04-05 15:08:37 +0200] [18552] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 15:08:37 +0200] [18552] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 15:08:37 +0200] [18552] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 15:08:37 +0200] [18552] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 15:08:37 +0200] [18552] [INFO] [services.module_service] ModuleService: Create module
[2023-04-05 15:08:37 +0200] [18552] [TRACE] [services.module_service] ModuleService: Create module with passed data module_name='module_5' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-05 15:08:37 +0200] [18552] [INFO] [services.module_service] ModuleService: Check if module with same parameters exists.
[2023-04-05 15:08:37 +0200] [18552] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-05 15:08:37 +0200] [18552] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'module_name': 'module_5', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-05 15:08:37 +0200] [18552] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-05 15:08:37 +0200] [18552] [INFO] [db.dao.base_dao] ModuleModel DAO: Create db entry
[2023-04-05 15:08:37 +0200] [18552] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed for creation: module_name='module_5' class_type=<ClassTypesEnum.LECTURE: 'lecture'> academic_year=<AcademicYearsEnum.FIRST: '1'>
[2023-04-05 15:08:37 +0200] [18552] [DEBUG] [db.dao.base_dao] ModuleModel DAO: Created entry in database: {'id': UUID('8ddc0b78-18fe-4b51-b610-6ef4f77f0eb7'), 'module_name': 'module_5', 'class_type': <ClassTypesEnum.LECTURE: 'lecture'>, 'academic_year': <AcademicYearsEnum.FIRST: '1'>}
[2023-04-05 15:08:54 +0200] [18552] [INFO] [mixins.auth_mixin] AuthMixin: get auth headers from request
[2023-04-05 15:08:54 +0200] [18552] [INFO] [db.dao.base_dao] UserModel DAO: Get db entry by parameters
[2023-04-05 15:08:54 +0200] [18552] [TRACE] [db.dao.base_dao] UserModel DAO: Data passed to filter: params: {'login': 'admin'}
[2023-04-05 15:08:54 +0200] [18552] [DEBUG] [db.dao.base_dao] UserModel DAO: received a response from the database
[2023-04-05 15:08:54 +0200] [18552] [INFO] [services.module_service] ModuleService: Get module by id: 56308c92-78a6-4b5f-9a87-a30e4a5c7e16
[2023-04-05 15:08:54 +0200] [18552] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-05 15:08:54 +0200] [18552] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': '56308c92-78a6-4b5f-9a87-a30e4a5c7e16'}
[2023-04-05 15:08:54 +0200] [18552] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-05 15:08:54 +0200] [18552] [INFO] [services.module_service] ModuleService: Get module by id: 8ddc0b78-18fe-4b51-b610-6ef4f77f0eb7
[2023-04-05 15:08:54 +0200] [18552] [INFO] [db.dao.base_dao] ModuleModel DAO: Get db entry by parameters
[2023-04-05 15:08:54 +0200] [18552] [TRACE] [db.dao.base_dao] ModuleModel DAO: Data passed to filter: params: {'id': '8ddc0b78-18fe-4b51-b610-6ef4f77f0eb7'}
[2023-04-05 15:08:54 +0200] [18552] [DEBUG] [db.dao.base_dao] ModuleModel DAO: received a response from the database
[2023-04-05 15:08:54 +0200] [18552] [INFO] [services.teacher_service] TeacherService: Create teacher modules
[2023-04-05 15:08:54 +0200] [18552] [TRACE] [services.teacher_service] TeacherService: Create teacher modules: teacher_id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27
[2023-04-05 15:08:54 +0200] [18552] [INFO] [services.teacher_service] TeacherService: Get teacher by id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27
[2023-04-05 15:08:54 +0200] [18552] [INFO] [db.dao.base_dao] TeacherModel DAO: Get db entry by id: e86be0c2-0f16-4b3a-9c2a-ad2aba954b27
[2023-04-05 15:08:54 +0200] [18552] [DEBUG] [db.dao.base_dao] TeacherModel DAO: received a response from the database
[2023-04-05 15:08:54 +0200] [18552] [TRACE] [services.teacher_service] TeacherService: Module 56308c92-78a6-4b5f-9a87-a30e4a5c7e16 is already in teacher's modules.
[2023-04-05 15:08:54 +0200] [18552] [INFO] [db.dao.teacher_dao] TeacherDAO: Create db entry
[2023-04-05 15:08:54 +0200] [18552] [TRACE] [db.dao.teacher_dao] TeacherDAO: Data passed for creation: modules: [<db.models.ModuleModel.ModuleModel object at 0x7f971ccb3ac0>]
